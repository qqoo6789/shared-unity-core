// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: map.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MelandGame3 {

  /// <summary>Holder for reflection information generated from map.proto</summary>
  public static partial class MapReflection {

    #region Descriptor
    /// <summary>File descriptor for map.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MapReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgltYXAucHJvdG8SC01lbGFuZEdhbWUzGg9tYXBfYmxvY2sucHJvdG8iygUK",
            "C01hcFRlbXBsYXRlEhMKC3RlbXBsYXRlX2lkGAEgASgJEgwKBG5hbWUYAiAB",
            "KAkSEAoIb3duZXJfaWQYAyABKAkSCwoDdXJsGAQgASgJEgkKAXcYBSABKAUS",
            "CQoBaBgGIAEoBRIUCgxyZWJpcnRoX2tpbmQYByABKAUSDwoHaXNfb3BlbhgI",
            "IAEoCBITCgtpc19jYW5fZWRpdBgJIAEoCBISCgppc19wdWJsaXNoGAogASgI",
            "EioKBHNpemUYCyABKA4yHC5NZWxhbmRHYW1lMy5NYXBUZW1wbGF0ZVNpemUS",
            "EQoJdGl0bGVfdXJsGAwgASgJEhIKCm93bmVyX25hbWUYDSABKAkSDgoGT3BU",
            "aW1lGA4gASgJEhEKCVN1YnNjcmliZRgPIAEoBRIVCg1pc19tYW5vcl9wYXNz",
            "GBAgASgIEhYKDm1hbm9yX2ludGVydmFsGBEgASgFEigKA1RhZxgSIAEoDjIb",
            "Lk1lbGFuZEdhbWUzLlRhZ01hcFRlbXBsYXRlEg8KB0NvbW1lbnQYEyABKAkS",
            "FAoMaXNfcmVjb21tZW5kGBQgASgIEg0KBXZpc2l0GBUgASgFEhAKCHRodW1i",
            "X3VwGBYgASgFEhIKCnRodW1iX2Rvd24YFyABKAUSEgoKdGh1bWJuYWlscxgY",
            "IAMoCRImCghtYXBfdHlwZRgZIAEoDjIULk1lbGFuZEdhbWUzLk1hcFR5cGUS",
            "NwoRbWFwX3RlbXBsYXRlX3R5cGUYGiABKA4yHC5NZWxhbmRHYW1lMy5NYXBU",
            "ZW1wbGF0ZVR5cGUSLwoKbGVzc29uX3RhZxgbIAEoDjIbLk1lbGFuZEdhbWUz",
            "LlRhZ01hcFRlbXBsYXRlEhgKEGlzX3NpbmdsZV9wbGF5ZXIYHCABKAgSEwoL",
            "bGVzc29uX3BsYW4YHSABKAkSEwoLbGVzc29uX29wZW4YHiABKAginwIKD01h",
            "cFRlbXBsYXRlUm9vbRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEg0KBWxp",
            "bWl0GAMgASgFEgsKA251bRgEIAEoBRILCgN1cmwYBSABKAkSCgoCcHcYBiAB",
            "KAUSCwoDZ2lkGAcgASgJEhEKCWlzX25hdGl2ZRgIIAEoCBIRCglnYW1lX2Fy",
            "Z3MYCSABKAkSEQoJdGl0bGVfdXJsGAogASgJEhIKCm93bmVyX25hbWUYCyAB",
            "KAkSFQoNdGVtcGxhdGVfbmFtZRgMIAEoCRITCgt0ZW1wbGF0ZV9pZBgNIAEo",
            "CRIPCgdtYXhfbnVtGA4gASgFEiYKCG1hcF90eXBlGA8gASgOMhQuTWVsYW5k",
            "R2FtZTMuTWFwVHlwZSJiCg1NYXBTdGF0aWNEYXRhEg0KBXVzaW5nGAEgASgI",
            "EhcKD21hcF9jaHVua19maWxlcxgCIAMoCRISCgpjaHVua19maWxlGAMgASgJ",
            "EhUKDXJlc291cmNlX2ZpbGUYBCABKAkiowQKA01hcBIKCgJpZBgBIAEoBRIW",
            "Cg5ncm91bmRfdGV4dHVyZRgCIAEoCRIXCg9jaHVua3NfY2RuX2Jhc2UYAyAB",
            "KAkSEwoLY2h1bmtfZmlsZXMYBCADKAkSEgoKdGlsZV93aWR0aBgFIAEoAxIT",
            "Cgt0aWxlX2hlaWdodBgGIAEoAxIRCgltYXBfd2lkdGgYByABKAMSEgoKbWFw",
            "X2hlaWdodBgIIAEoAxILCgN1cmwYCSABKAkSDwoHaXNfZWRpdBgKIAEoCBIT",
            "Cgtpc19lZGl0X21hcBgLIAEoCBIPCgdyaG9tYl9yGAwgASgFEg8KB3Job21i",
            "X2MYDSABKAUSFgoOcmhvbWJfb2Zmc2V0X3IYDiABKAUSFgoOcmhvbWJfb2Zm",
            "c2V0X2MYDyABKAUSDAoEcmxlbhgQIAEoBRIMCgRjbGVuGBEgASgFEiYKCG1h",
            "cF90eXBlGBIgASgOMhQuTWVsYW5kR2FtZTMuTWFwVHlwZRI3ChFtYXBfdGVt",
            "cGxhdGVfdHlwZRgTIAEoDjIcLk1lbGFuZEdhbWUzLk1hcFRlbXBsYXRlVHlw",
            "ZRIZChFsZXNzb25fbW9kZWxfanNvbhgUIAEoCRIvCgtzdGF0aWNfZGF0YRgW",
            "IAEoCzIaLk1lbGFuZEdhbWUzLk1hcFN0YXRpY0RhdGESLAoJbWFwX21vZGVs",
            "GBcgASgOMhkuTWVsYW5kR2FtZTMuR2FtZU1hcE1vZGVsIj8KC01hcExvY2F0",
            "aW9uEgkKAXIYASABKAMSCQoBYxgCIAEoAxIPCgd6X2luZGV4GAMgASgDEgkK",
            "AXoYBCABKAUikgMKD0xlc3Nvbk1vZGVsRGF0YRI5Cgx0ZWFjaGVyX3ZpZXcY",
            "ASABKA4yIy5NZWxhbmRHYW1lMy5MZXNzb25UZWFjaGVyVmlld01vZGVsEhQK",
            "DGNhbWVyYV9tb2RlbBgCIAEoCRIVCg1jb250cm9sX21vZGVsGAMgASgJEhcK",
            "D3VzZV9kZW1vbnN0cmF0ZRgEIAEoCBISCgpwbGF5X211c2ljGAUgASgIEhQK",
            "DHBhdGhfZmluZGluZxgGIAEoCBISCgp1c2Vfd2luZG93GAcgASgIEhEKCXVz",
            "ZV9ndWlkZRgIIAEoCBISCgpwbGF5X2F1ZGlvGAkgASgIEhIKCnVzZV9yb2Nr",
            "ZXIYCiABKAgSFgoObG9ja19zY3JlZW5fdWkYCyABKAgSEwoLc3R1ZGVudF9t",
            "Z3IYDCABKAgSEgoKc3R1ZGVudF9UUBgNIAEoCBIUCgxzY2VuZV91bmxvY2sY",
            "DiABKAgSEwoLbWFwX2VudHJhY2UYDyABKAgSGQoRbGVzc29uX21hbmFnZXJf",
            "dWkYECABKAgiigEKEUxlc3Nvbk1vZGVsQ29uZmlnEjAKCm1vZGVsX3R5cGUY",
            "ASABKA4yHC5NZWxhbmRHYW1lMy5MZXNzb25Nb2RlbFR5cGUSEQoJbW9kZWxf",
            "Y2lkGAIgASgFEjAKCm1vZGVsX2RhdGEYAyABKAsyHC5NZWxhbmRHYW1lMy5M",
            "ZXNzb25Nb2RlbERhdGEiXQoNQXJlYVJlc291cmNlcxIOCgZhdWRpb3MYASAD",
            "KAkSDgoGdmlkZW9zGAIgAygJEg4KBmltYWdlcxgDIAMoCRIcChRlbnRpdHlU",
            "ZW1wbGF0ZUltYWdlcxgEIAMoCSJMCgpNYXBBcmVhUmVzEg8KB2FyZWFfaWQY",
            "ASABKAkSLQoJcmVzb3VyY2VzGAIgASgLMhouTWVsYW5kR2FtZTMuQXJlYVJl",
            "c291cmNlcyK6AQoQTWFwUmVzb3VyY2VzRmlsZRITCgt0ZW1wbGF0ZV9pZBgB",
            "IAEoCRIzCg10ZW1wbGF0ZV90eXBlGAIgASgOMhwuTWVsYW5kR2FtZTMuTWFw",
            "VGVtcGxhdGVUeXBlEi0KDGxlc3Nvbk1hcFJlcxgDIAMoCzIXLk1lbGFuZEdh",
            "bWUzLk1hcEFyZWFSZXMSLQoMTm9ybWFsTWFwUmVzGAQgAygLMhcuTWVsYW5k",
            "R2FtZTMuTWFwQXJlYVJlcyrZAQoNTWFwU2F2ZVNvdXJjZRIlCiFNYXBTYXZl",
            "U291cmNlX01hcFNhdmVTb3VyY2VVbmtub3cQABIlCiFNYXBTYXZlU291cmNl",
            "X01hcFNhdmVTb3VyY2VQbGF5ZXIQARInCiNNYXBTYXZlU291cmNlX01hcFNh",
            "dmVTb3VyY2VBdXRvU2F2ZRACEiUKIU1hcFNhdmVTb3VyY2VfTWFwU2F2ZVNv",
            "dXJjZVNpZ25VcBADEioKJk1hcFNhdmVTb3VyY2VfTWFwU2F2ZVNvdXJjZUNs",
            "b3NlU2VydmVyEAQqggEKD01hcFRlbXBsYXRlU2l6ZRIfChtNYXBUZW1wbGF0",
            "ZVNpemVfVW5rbm93blNpemUQABIXChNNYXBUZW1wbGF0ZVNpemVfQmlnEAES",
            "GgoWTWFwVGVtcGxhdGVTaXplX01pZGRsZRACEhkKFU1hcFRlbXBsYXRlU2l6",
            "ZV9TbWFsbBADKo8BCgpUYWdNYXBUeXBlEh4KGlRhZ01hcFR5cGVfTWFwVGVt",
            "cGxhdGVTZWxmEAASHQoZVGFnTWFwVHlwZV9NYXBUZW1wbGF0ZU5ldxABEh0K",
            "GVRhZ01hcFR5cGVfTWFwVGVtcGxhdGVIb3QQAhIjCh9UYWdNYXBUeXBlX01h",
            "cFRlbXBsYXRlUmVjb21tZW5kEAMqZwoPTWFwVGVtcGxhdGVUeXBlEikKJU1h",
            "cFRlbXBsYXRlVHlwZV9NYXBUZW1wbGF0ZVR5cGVOb3JtYWwQABIpCiVNYXBU",
            "ZW1wbGF0ZVR5cGVfTWFwVGVtcGxhdGVUeXBlTGVzc29uEAEq/QMKDlRhZ01h",
            "cFRlbXBsYXRlEikKJVRhZ01hcFRlbXBsYXRlX01hcFRlbXBsYXRlVGFnSW50",
            "ZXJuYWwQABIoCiRUYWdNYXBUZW1wbGF0ZV9NYXBUZW1wbGF0ZVRhZ0RlZmF1",
            "bHQQARIrCidUYWdNYXBUZW1wbGF0ZV9NYXBUZW1wbGF0ZVRhZ0JlbGxQbGFu",
            "ZXQQAhImCiJUYWdNYXBUZW1wbGF0ZV9NYXBUZW1wbGF0ZVRhZ1N0b3J5EAMS",
            "KAokVGFnTWFwVGVtcGxhdGVfTWFwVGVtcGxhdGVUYWdMZWlzdXJlEAQSKQol",
            "VGFnTWFwVGVtcGxhdGVfTWFwVGVtcGxhdGVUYWdUdXRvcmlhbBAFEiwKKFRh",
            "Z01hcFRlbXBsYXRlX01hcFRlbXBsYXRlVGFnQWxsVXNlck1vZGUQBhIrCidU",
            "YWdNYXBUZW1wbGF0ZV9NYXBUZW1wbGF0ZVRhZ0FsbERldk1vZGUQBxIuCipU",
            "YWdNYXBUZW1wbGF0ZV9NYXBUZW1wbGF0ZVRhZ0FsbExlc3Nvbk1vZGUQCBIz",
            "Ci9UYWdNYXBUZW1wbGF0ZV9NYXBUZW1wbGF0ZVRhZ1ByZXZpb3VzQmVsbFBs",
            "YW5ldBALEiwKKFRhZ01hcFRlbXBsYXRlX01hcFRlbXBsYXRlVGFnUGxhbmV0",
            "TWF0Y2gQDCrFAQoMR2FtZU1hcE1vZGVsEiEKHUdhbWVNYXBNb2RlbF9HYW1l",
            "TWFwTW9kZWxHYW1lEAASIwofR2FtZU1hcE1vZGVsX0dhbWVNYXBNb2RlbEVk",
            "aU1hcBABEiEKHUdhbWVNYXBNb2RlbF9HYW1lTWFwTW9kZWxQbGF5EAISIwof",
            "R2FtZU1hcE1vZGVsX0dhbWVNYXBNb2RlbExlc3NvbhADEiUKIUdhbWVNYXBN",
            "b2RlbF9HYW1lTWFwTW9kZWxCaWdXb3JsZBAEKoUBChZMZXNzb25UZWFjaGVy",
            "Vmlld01vZGVsEjUKMUxlc3NvblRlYWNoZXJWaWV3TW9kZWxfTGVzc29uVGVh",
            "Y2hlclZpZXdNb2RlbFVzZXIQABI0CjBMZXNzb25UZWFjaGVyVmlld01vZGVs",
            "X0xlc3NvblRlYWNoZXJWaWV3TW9kZWxHb2QQASptCg9MZXNzb25Nb2RlbFR5",
            "cGUSKQolTGVzc29uTW9kZWxUeXBlX0xlc3Nvbk1vZGVsVHlwZVNlcnZlchAA",
            "Ei8KK0xlc3Nvbk1vZGVsVHlwZV9MZXNzb25Nb2RlbFR5cGVQbGF5ZXJEZWZp",
            "bmUQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MelandGame3.MapBlockReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MelandGame3.MapSaveSource), typeof(global::MelandGame3.MapTemplateSize), typeof(global::MelandGame3.TagMapType), typeof(global::MelandGame3.MapTemplateType), typeof(global::MelandGame3.TagMapTemplate), typeof(global::MelandGame3.GameMapModel), typeof(global::MelandGame3.LessonTeacherViewModel), typeof(global::MelandGame3.LessonModelType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MapTemplate), global::MelandGame3.MapTemplate.Parser, new[]{ "TemplateId", "Name", "OwnerId", "Url", "W", "H", "RebirthKind", "IsOpen", "IsCanEdit", "IsPublish", "Size", "TitleUrl", "OwnerName", "OpTime", "Subscribe", "IsManorPass", "ManorInterval", "Tag", "Comment", "IsRecommend", "Visit", "ThumbUp", "ThumbDown", "Thumbnails", "MapType", "MapTemplateType", "LessonTag", "IsSinglePlayer", "LessonPlan", "LessonOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MapTemplateRoom), global::MelandGame3.MapTemplateRoom.Parser, new[]{ "Id", "Name", "Limit", "Num", "Url", "Pw", "Gid", "IsNative", "GameArgs", "TitleUrl", "OwnerName", "TemplateName", "TemplateId", "MaxNum", "MapType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MapStaticData), global::MelandGame3.MapStaticData.Parser, new[]{ "Using", "MapChunkFiles", "ChunkFile", "ResourceFile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Map), global::MelandGame3.Map.Parser, new[]{ "Id", "GroundTexture", "ChunksCdnBase", "ChunkFiles", "TileWidth", "TileHeight", "MapWidth", "MapHeight", "Url", "IsEdit", "IsEditMap", "RhombR", "RhombC", "RhombOffsetR", "RhombOffsetC", "Rlen", "Clen", "MapType", "MapTemplateType", "LessonModelJson", "StaticData", "MapModel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MapLocation), global::MelandGame3.MapLocation.Parser, new[]{ "R", "C", "ZIndex", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.LessonModelData), global::MelandGame3.LessonModelData.Parser, new[]{ "TeacherView", "CameraModel", "ControlModel", "UseDemonstrate", "PlayMusic", "PathFinding", "UseWindow", "UseGuide", "PlayAudio", "UseRocker", "LockScreenUi", "StudentMgr", "StudentTP", "SceneUnlock", "MapEntrace", "LessonManagerUi" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.LessonModelConfig), global::MelandGame3.LessonModelConfig.Parser, new[]{ "ModelType", "ModelCid", "ModelData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.AreaResources), global::MelandGame3.AreaResources.Parser, new[]{ "Audios", "Videos", "Images", "EntityTemplateImages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MapAreaRes), global::MelandGame3.MapAreaRes.Parser, new[]{ "AreaId", "Resources" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MapResourcesFile), global::MelandGame3.MapResourcesFile.Parser, new[]{ "TemplateId", "TemplateType", "LessonMapRes", "NormalMapRes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MapSaveSource {
    /// <summary>
    /// 无效
    /// </summary>
    [pbr::OriginalName("MapSaveSource_MapSaveSourceUnknow")] MapSaveSourceUnknow = 0,
    /// <summary>
    /// 玩家点击保存
    /// </summary>
    [pbr::OriginalName("MapSaveSource_MapSaveSourcePlayer")] MapSaveSourcePlayer = 1,
    /// <summary>
    /// 服务器自动存储
    /// </summary>
    [pbr::OriginalName("MapSaveSource_MapSaveSourceAutoSave")] MapSaveSourceAutoSave = 2,
    /// <summary>
    /// 玩家退出
    /// </summary>
    [pbr::OriginalName("MapSaveSource_MapSaveSourceSignUp")] MapSaveSourceSignUp = 3,
    /// <summary>
    /// 关闭服务器强制保存
    /// </summary>
    [pbr::OriginalName("MapSaveSource_MapSaveSourceCloseServer")] MapSaveSourceCloseServer = 4,
  }

  public enum MapTemplateSize {
    [pbr::OriginalName("MapTemplateSize_UnknownSize")] UnknownSize = 0,
    [pbr::OriginalName("MapTemplateSize_Big")] Big = 1,
    [pbr::OriginalName("MapTemplateSize_Middle")] Middle = 2,
    [pbr::OriginalName("MapTemplateSize_Small")] Small = 3,
  }

  /// <summary>
  /// 自己已发布的 最新 最热 推荐
  /// </summary>
  public enum TagMapType {
    /// <summary>
    ///自己已发布的
    /// </summary>
    [pbr::OriginalName("TagMapType_MapTemplateSelf")] MapTemplateSelf = 0,
    /// <summary>
    ///最新
    /// </summary>
    [pbr::OriginalName("TagMapType_MapTemplateNew")] MapTemplateNew = 1,
    /// <summary>
    ///最热
    /// </summary>
    [pbr::OriginalName("TagMapType_MapTemplateHot")] MapTemplateHot = 2,
    /// <summary>
    ///推荐
    /// </summary>
    [pbr::OriginalName("TagMapType_MapTemplateRecommend")] MapTemplateRecommend = 3,
  }

  /// <summary>
  /// 地图模板类型
  /// </summary>
  public enum MapTemplateType {
    /// <summary>
    /// 普通地图模板
    /// </summary>
    [pbr::OriginalName("MapTemplateType_MapTemplateTypeNormal")] MapTemplateTypeNormal = 0,
    /// <summary>
    /// 课程地图模板
    /// </summary>
    [pbr::OriginalName("MapTemplateType_MapTemplateTypeLesson")] MapTemplateTypeLesson = 1,
  }

  public enum TagMapTemplate {
    /// <summary>
    ///内部地图
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagInternal")] MapTemplateTagInternal = 0,
    /// <summary>
    /// 无分类
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagDefault")] MapTemplateTagDefault = 1,
    /// <summary>
    ///邀请赛
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagBellPlanet")] MapTemplateTagBellPlanet = 2,
    /// <summary>
    ///故事
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagStory")] MapTemplateTagStory = 3,
    /// <summary>
    ///休闲
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagLeisure")] MapTemplateTagLeisure = 4,
    /// <summary>
    ///教程
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagTutorial")] MapTemplateTagTutorial = 5,
    /// <summary>
    ///用户模式的全部
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagAllUserMode")] MapTemplateTagAllUserMode = 6,
    /// <summary>
    ///开发者模式的全部
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagAllDevMode")] MapTemplateTagAllDevMode = 7,
    /// <summary>
    /// 开发者模式的作业
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagAllLessonMode")] MapTemplateTagAllLessonMode = 8,
    /// <summary>
    ///往届邀请赛
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagPreviousBellPlanet")] MapTemplateTagPreviousBellPlanet = 11,
    /// <summary>
    ///星球杯
    /// </summary>
    [pbr::OriginalName("TagMapTemplate_MapTemplateTagPlanetMatch")] MapTemplateTagPlanetMatch = 12,
  }

  /// <summary>
  /// 地图模式
  /// </summary>
  public enum GameMapModel {
    /// <summary>
    /// C端游戏模式
    /// </summary>
    [pbr::OriginalName("GameMapModel_GameMapModelGame")] GameMapModelGame = 0,
    /// <summary>
    /// 地图编辑模式
    /// </summary>
    [pbr::OriginalName("GameMapModel_GameMapModelEdiMap")] GameMapModelEdiMap = 1,
    /// <summary>
    /// 地图游玩模式
    /// </summary>
    [pbr::OriginalName("GameMapModel_GameMapModelPlay")] GameMapModelPlay = 2,
    /// <summary>
    /// 上课模式
    /// </summary>
    [pbr::OriginalName("GameMapModel_GameMapModelLesson")] GameMapModelLesson = 3,
    /// <summary>
    /// 大世界模式
    /// </summary>
    [pbr::OriginalName("GameMapModel_GameMapModelBigWorld")] GameMapModelBigWorld = 4,
  }

  /// <summary>
  ///=======================================
  /// 课程模板_老师视角模式
  /// </summary>
  public enum LessonTeacherViewModel {
    /// <summary>
    /// 角色模式
    /// </summary>
    [pbr::OriginalName("LessonTeacherViewModel_LessonTeacherViewModelUser")] LessonTeacherViewModelUser = 0,
    /// <summary>
    /// (上帝)查看模式
    /// </summary>
    [pbr::OriginalName("LessonTeacherViewModel_LessonTeacherViewModelGod")] LessonTeacherViewModelGod = 1,
  }

  /// <summary>
  /// 课程模板_课程模式配置类型
  /// </summary>
  public enum LessonModelType {
    /// <summary>
    /// 系统预设模式
    /// </summary>
    [pbr::OriginalName("LessonModelType_LessonModelTypeServer")] LessonModelTypeServer = 0,
    /// <summary>
    /// 用户自定义模式
    /// </summary>
    [pbr::OriginalName("LessonModelType_LessonModelTypePlayerDefine")] LessonModelTypePlayerDefine = 1,
  }

  #endregion

  #region Messages
  public sealed partial class MapTemplate : pb::IMessage<MapTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapTemplate> _parser = new pb::MessageParser<MapTemplate>(() => new MapTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplate(MapTemplate other) : this() {
      templateId_ = other.templateId_;
      name_ = other.name_;
      ownerId_ = other.ownerId_;
      url_ = other.url_;
      w_ = other.w_;
      h_ = other.h_;
      rebirthKind_ = other.rebirthKind_;
      isOpen_ = other.isOpen_;
      isCanEdit_ = other.isCanEdit_;
      isPublish_ = other.isPublish_;
      size_ = other.size_;
      titleUrl_ = other.titleUrl_;
      ownerName_ = other.ownerName_;
      opTime_ = other.opTime_;
      subscribe_ = other.subscribe_;
      isManorPass_ = other.isManorPass_;
      manorInterval_ = other.manorInterval_;
      tag_ = other.tag_;
      comment_ = other.comment_;
      isRecommend_ = other.isRecommend_;
      visit_ = other.visit_;
      thumbUp_ = other.thumbUp_;
      thumbDown_ = other.thumbDown_;
      thumbnails_ = other.thumbnails_.Clone();
      mapType_ = other.mapType_;
      mapTemplateType_ = other.mapTemplateType_;
      lessonTag_ = other.lessonTag_;
      isSinglePlayer_ = other.isSinglePlayer_;
      lessonPlan_ = other.lessonPlan_;
      lessonOpen_ = other.lessonOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplate Clone() {
      return new MapTemplate(this);
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 1;
    private string templateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 3;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 4;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 5;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "h" field.</summary>
    public const int HFieldNumber = 6;
    private int h_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int H {
      get { return h_; }
      set {
        h_ = value;
      }
    }

    /// <summary>Field number for the "rebirth_kind" field.</summary>
    public const int RebirthKindFieldNumber = 7;
    private int rebirthKind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebirthKind {
      get { return rebirthKind_; }
      set {
        rebirthKind_ = value;
      }
    }

    /// <summary>Field number for the "is_open" field.</summary>
    public const int IsOpenFieldNumber = 8;
    private bool isOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    /// <summary>Field number for the "is_can_edit" field.</summary>
    public const int IsCanEditFieldNumber = 9;
    private bool isCanEdit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCanEdit {
      get { return isCanEdit_; }
      set {
        isCanEdit_ = value;
      }
    }

    /// <summary>Field number for the "is_publish" field.</summary>
    public const int IsPublishFieldNumber = 10;
    private bool isPublish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPublish {
      get { return isPublish_; }
      set {
        isPublish_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 11;
    private global::MelandGame3.MapTemplateSize size_ = global::MelandGame3.MapTemplateSize.UnknownSize;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapTemplateSize Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "title_url" field.</summary>
    public const int TitleUrlFieldNumber = 12;
    private string titleUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleUrl {
      get { return titleUrl_; }
      set {
        titleUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_name" field.</summary>
    public const int OwnerNameFieldNumber = 13;
    private string ownerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OpTime" field.</summary>
    public const int OpTimeFieldNumber = 14;
    private string opTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OpTime {
      get { return opTime_; }
      set {
        opTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Subscribe" field.</summary>
    public const int SubscribeFieldNumber = 15;
    private int subscribe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Subscribe {
      get { return subscribe_; }
      set {
        subscribe_ = value;
      }
    }

    /// <summary>Field number for the "is_manor_pass" field.</summary>
    public const int IsManorPassFieldNumber = 16;
    private bool isManorPass_;
    /// <summary>
    /// 是否是领地关卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsManorPass {
      get { return isManorPass_; }
      set {
        isManorPass_ = value;
      }
    }

    /// <summary>Field number for the "manor_interval" field.</summary>
    public const int ManorIntervalFieldNumber = 17;
    private int manorInterval_;
    /// <summary>
    /// 领地间隔
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ManorInterval {
      get { return manorInterval_; }
      set {
        manorInterval_ = value;
      }
    }

    /// <summary>Field number for the "Tag" field.</summary>
    public const int TagFieldNumber = 18;
    private global::MelandGame3.TagMapTemplate tag_ = global::MelandGame3.TagMapTemplate.MapTemplateTagInternal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.TagMapTemplate Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "Comment" field.</summary>
    public const int CommentFieldNumber = 19;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_recommend" field.</summary>
    public const int IsRecommendFieldNumber = 20;
    private bool isRecommend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRecommend {
      get { return isRecommend_; }
      set {
        isRecommend_ = value;
      }
    }

    /// <summary>Field number for the "visit" field.</summary>
    public const int VisitFieldNumber = 21;
    private int visit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Visit {
      get { return visit_; }
      set {
        visit_ = value;
      }
    }

    /// <summary>Field number for the "thumb_up" field.</summary>
    public const int ThumbUpFieldNumber = 22;
    private int thumbUp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThumbUp {
      get { return thumbUp_; }
      set {
        thumbUp_ = value;
      }
    }

    /// <summary>Field number for the "thumb_down" field.</summary>
    public const int ThumbDownFieldNumber = 23;
    private int thumbDown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThumbDown {
      get { return thumbDown_; }
      set {
        thumbDown_ = value;
      }
    }

    /// <summary>Field number for the "thumbnails" field.</summary>
    public const int ThumbnailsFieldNumber = 24;
    private static readonly pb::FieldCodec<string> _repeated_thumbnails_codec
        = pb::FieldCodec.ForString(194);
    private readonly pbc::RepeatedField<string> thumbnails_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Thumbnails {
      get { return thumbnails_; }
    }

    /// <summary>Field number for the "map_type" field.</summary>
    public const int MapTypeFieldNumber = 25;
    private global::MelandGame3.MapType mapType_ = global::MelandGame3.MapType.MapTypeDiamond;
    /// <summary>
    ///地图类型(正交 / 斜45度)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapType MapType {
      get { return mapType_; }
      set {
        mapType_ = value;
      }
    }

    /// <summary>Field number for the "map_template_type" field.</summary>
    public const int MapTemplateTypeFieldNumber = 26;
    private global::MelandGame3.MapTemplateType mapTemplateType_ = global::MelandGame3.MapTemplateType.MapTemplateTypeNormal;
    /// <summary>
    /// 0普通地图模板 1课程地图模板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapTemplateType MapTemplateType {
      get { return mapTemplateType_; }
      set {
        mapTemplateType_ = value;
      }
    }

    /// <summary>Field number for the "lesson_tag" field.</summary>
    public const int LessonTagFieldNumber = 27;
    private global::MelandGame3.TagMapTemplate lessonTag_ = global::MelandGame3.TagMapTemplate.MapTemplateTagInternal;
    /// <summary>
    /// 课程地图模板 发布成标签作业
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.TagMapTemplate LessonTag {
      get { return lessonTag_; }
      set {
        lessonTag_ = value;
      }
    }

    /// <summary>Field number for the "is_single_player" field.</summary>
    public const int IsSinglePlayerFieldNumber = 28;
    private bool isSinglePlayer_;
    /// <summary>
    /// 课程地图模板 上课单人单服还是多人1服
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSinglePlayer {
      get { return isSinglePlayer_; }
      set {
        isSinglePlayer_ = value;
      }
    }

    /// <summary>Field number for the "lesson_plan" field.</summary>
    public const int LessonPlanFieldNumber = 29;
    private string lessonPlan_ = "";
    /// <summary>
    /// 课程地图模板 教案链接
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LessonPlan {
      get { return lessonPlan_; }
      set {
        lessonPlan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lesson_open" field.</summary>
    public const int LessonOpenFieldNumber = 30;
    private bool lessonOpen_;
    /// <summary>
    /// 课程地图模板 课程是否公开
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LessonOpen {
      get { return lessonOpen_; }
      set {
        lessonOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemplateId != other.TemplateId) return false;
      if (Name != other.Name) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Url != other.Url) return false;
      if (W != other.W) return false;
      if (H != other.H) return false;
      if (RebirthKind != other.RebirthKind) return false;
      if (IsOpen != other.IsOpen) return false;
      if (IsCanEdit != other.IsCanEdit) return false;
      if (IsPublish != other.IsPublish) return false;
      if (Size != other.Size) return false;
      if (TitleUrl != other.TitleUrl) return false;
      if (OwnerName != other.OwnerName) return false;
      if (OpTime != other.OpTime) return false;
      if (Subscribe != other.Subscribe) return false;
      if (IsManorPass != other.IsManorPass) return false;
      if (ManorInterval != other.ManorInterval) return false;
      if (Tag != other.Tag) return false;
      if (Comment != other.Comment) return false;
      if (IsRecommend != other.IsRecommend) return false;
      if (Visit != other.Visit) return false;
      if (ThumbUp != other.ThumbUp) return false;
      if (ThumbDown != other.ThumbDown) return false;
      if(!thumbnails_.Equals(other.thumbnails_)) return false;
      if (MapType != other.MapType) return false;
      if (MapTemplateType != other.MapTemplateType) return false;
      if (LessonTag != other.LessonTag) return false;
      if (IsSinglePlayer != other.IsSinglePlayer) return false;
      if (LessonPlan != other.LessonPlan) return false;
      if (LessonOpen != other.LessonOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (W != 0) hash ^= W.GetHashCode();
      if (H != 0) hash ^= H.GetHashCode();
      if (RebirthKind != 0) hash ^= RebirthKind.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (IsCanEdit != false) hash ^= IsCanEdit.GetHashCode();
      if (IsPublish != false) hash ^= IsPublish.GetHashCode();
      if (Size != global::MelandGame3.MapTemplateSize.UnknownSize) hash ^= Size.GetHashCode();
      if (TitleUrl.Length != 0) hash ^= TitleUrl.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (OpTime.Length != 0) hash ^= OpTime.GetHashCode();
      if (Subscribe != 0) hash ^= Subscribe.GetHashCode();
      if (IsManorPass != false) hash ^= IsManorPass.GetHashCode();
      if (ManorInterval != 0) hash ^= ManorInterval.GetHashCode();
      if (Tag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) hash ^= Tag.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (IsRecommend != false) hash ^= IsRecommend.GetHashCode();
      if (Visit != 0) hash ^= Visit.GetHashCode();
      if (ThumbUp != 0) hash ^= ThumbUp.GetHashCode();
      if (ThumbDown != 0) hash ^= ThumbDown.GetHashCode();
      hash ^= thumbnails_.GetHashCode();
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) hash ^= MapType.GetHashCode();
      if (MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) hash ^= MapTemplateType.GetHashCode();
      if (LessonTag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) hash ^= LessonTag.GetHashCode();
      if (IsSinglePlayer != false) hash ^= IsSinglePlayer.GetHashCode();
      if (LessonPlan.Length != 0) hash ^= LessonPlan.GetHashCode();
      if (LessonOpen != false) hash ^= LessonOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OwnerId);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (W != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(W);
      }
      if (H != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(H);
      }
      if (RebirthKind != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RebirthKind);
      }
      if (IsOpen != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsOpen);
      }
      if (IsCanEdit != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsCanEdit);
      }
      if (IsPublish != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsPublish);
      }
      if (Size != global::MelandGame3.MapTemplateSize.UnknownSize) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Size);
      }
      if (TitleUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TitleUrl);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(OwnerName);
      }
      if (OpTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(OpTime);
      }
      if (Subscribe != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Subscribe);
      }
      if (IsManorPass != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsManorPass);
      }
      if (ManorInterval != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ManorInterval);
      }
      if (Tag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) Tag);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Comment);
      }
      if (IsRecommend != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsRecommend);
      }
      if (Visit != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(Visit);
      }
      if (ThumbUp != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(ThumbUp);
      }
      if (ThumbDown != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ThumbDown);
      }
      thumbnails_.WriteTo(output, _repeated_thumbnails_codec);
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) MapType);
      }
      if (MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) MapTemplateType);
      }
      if (LessonTag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) LessonTag);
      }
      if (IsSinglePlayer != false) {
        output.WriteRawTag(224, 1);
        output.WriteBool(IsSinglePlayer);
      }
      if (LessonPlan.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(LessonPlan);
      }
      if (LessonOpen != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(LessonOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OwnerId);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (W != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(W);
      }
      if (H != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(H);
      }
      if (RebirthKind != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RebirthKind);
      }
      if (IsOpen != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsOpen);
      }
      if (IsCanEdit != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsCanEdit);
      }
      if (IsPublish != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsPublish);
      }
      if (Size != global::MelandGame3.MapTemplateSize.UnknownSize) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Size);
      }
      if (TitleUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TitleUrl);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(OwnerName);
      }
      if (OpTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(OpTime);
      }
      if (Subscribe != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Subscribe);
      }
      if (IsManorPass != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsManorPass);
      }
      if (ManorInterval != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ManorInterval);
      }
      if (Tag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) Tag);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Comment);
      }
      if (IsRecommend != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsRecommend);
      }
      if (Visit != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(Visit);
      }
      if (ThumbUp != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(ThumbUp);
      }
      if (ThumbDown != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ThumbDown);
      }
      thumbnails_.WriteTo(ref output, _repeated_thumbnails_codec);
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) MapType);
      }
      if (MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) MapTemplateType);
      }
      if (LessonTag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) LessonTag);
      }
      if (IsSinglePlayer != false) {
        output.WriteRawTag(224, 1);
        output.WriteBool(IsSinglePlayer);
      }
      if (LessonPlan.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(LessonPlan);
      }
      if (LessonOpen != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(LessonOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (H != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(H);
      }
      if (RebirthKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RebirthKind);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (IsCanEdit != false) {
        size += 1 + 1;
      }
      if (IsPublish != false) {
        size += 1 + 1;
      }
      if (Size != global::MelandGame3.MapTemplateSize.UnknownSize) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Size);
      }
      if (TitleUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleUrl);
      }
      if (OwnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (OpTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpTime);
      }
      if (Subscribe != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Subscribe);
      }
      if (IsManorPass != false) {
        size += 2 + 1;
      }
      if (ManorInterval != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ManorInterval);
      }
      if (Tag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Tag);
      }
      if (Comment.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (IsRecommend != false) {
        size += 2 + 1;
      }
      if (Visit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Visit);
      }
      if (ThumbUp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ThumbUp);
      }
      if (ThumbDown != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ThumbDown);
      }
      size += thumbnails_.CalculateSize(_repeated_thumbnails_codec);
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MapType);
      }
      if (MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MapTemplateType);
      }
      if (LessonTag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LessonTag);
      }
      if (IsSinglePlayer != false) {
        size += 2 + 1;
      }
      if (LessonPlan.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LessonPlan);
      }
      if (LessonOpen != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapTemplate other) {
      if (other == null) {
        return;
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.H != 0) {
        H = other.H;
      }
      if (other.RebirthKind != 0) {
        RebirthKind = other.RebirthKind;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      if (other.IsCanEdit != false) {
        IsCanEdit = other.IsCanEdit;
      }
      if (other.IsPublish != false) {
        IsPublish = other.IsPublish;
      }
      if (other.Size != global::MelandGame3.MapTemplateSize.UnknownSize) {
        Size = other.Size;
      }
      if (other.TitleUrl.Length != 0) {
        TitleUrl = other.TitleUrl;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.OpTime.Length != 0) {
        OpTime = other.OpTime;
      }
      if (other.Subscribe != 0) {
        Subscribe = other.Subscribe;
      }
      if (other.IsManorPass != false) {
        IsManorPass = other.IsManorPass;
      }
      if (other.ManorInterval != 0) {
        ManorInterval = other.ManorInterval;
      }
      if (other.Tag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) {
        Tag = other.Tag;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.IsRecommend != false) {
        IsRecommend = other.IsRecommend;
      }
      if (other.Visit != 0) {
        Visit = other.Visit;
      }
      if (other.ThumbUp != 0) {
        ThumbUp = other.ThumbUp;
      }
      if (other.ThumbDown != 0) {
        ThumbDown = other.ThumbDown;
      }
      thumbnails_.Add(other.thumbnails_);
      if (other.MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        MapType = other.MapType;
      }
      if (other.MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        MapTemplateType = other.MapTemplateType;
      }
      if (other.LessonTag != global::MelandGame3.TagMapTemplate.MapTemplateTagInternal) {
        LessonTag = other.LessonTag;
      }
      if (other.IsSinglePlayer != false) {
        IsSinglePlayer = other.IsSinglePlayer;
      }
      if (other.LessonPlan.Length != 0) {
        LessonPlan = other.LessonPlan;
      }
      if (other.LessonOpen != false) {
        LessonOpen = other.LessonOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TemplateId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            OwnerId = input.ReadString();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 40: {
            W = input.ReadInt32();
            break;
          }
          case 48: {
            H = input.ReadInt32();
            break;
          }
          case 56: {
            RebirthKind = input.ReadInt32();
            break;
          }
          case 64: {
            IsOpen = input.ReadBool();
            break;
          }
          case 72: {
            IsCanEdit = input.ReadBool();
            break;
          }
          case 80: {
            IsPublish = input.ReadBool();
            break;
          }
          case 88: {
            Size = (global::MelandGame3.MapTemplateSize) input.ReadEnum();
            break;
          }
          case 98: {
            TitleUrl = input.ReadString();
            break;
          }
          case 106: {
            OwnerName = input.ReadString();
            break;
          }
          case 114: {
            OpTime = input.ReadString();
            break;
          }
          case 120: {
            Subscribe = input.ReadInt32();
            break;
          }
          case 128: {
            IsManorPass = input.ReadBool();
            break;
          }
          case 136: {
            ManorInterval = input.ReadInt32();
            break;
          }
          case 144: {
            Tag = (global::MelandGame3.TagMapTemplate) input.ReadEnum();
            break;
          }
          case 154: {
            Comment = input.ReadString();
            break;
          }
          case 160: {
            IsRecommend = input.ReadBool();
            break;
          }
          case 168: {
            Visit = input.ReadInt32();
            break;
          }
          case 176: {
            ThumbUp = input.ReadInt32();
            break;
          }
          case 184: {
            ThumbDown = input.ReadInt32();
            break;
          }
          case 194: {
            thumbnails_.AddEntriesFrom(input, _repeated_thumbnails_codec);
            break;
          }
          case 200: {
            MapType = (global::MelandGame3.MapType) input.ReadEnum();
            break;
          }
          case 208: {
            MapTemplateType = (global::MelandGame3.MapTemplateType) input.ReadEnum();
            break;
          }
          case 216: {
            LessonTag = (global::MelandGame3.TagMapTemplate) input.ReadEnum();
            break;
          }
          case 224: {
            IsSinglePlayer = input.ReadBool();
            break;
          }
          case 234: {
            LessonPlan = input.ReadString();
            break;
          }
          case 240: {
            LessonOpen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TemplateId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            OwnerId = input.ReadString();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 40: {
            W = input.ReadInt32();
            break;
          }
          case 48: {
            H = input.ReadInt32();
            break;
          }
          case 56: {
            RebirthKind = input.ReadInt32();
            break;
          }
          case 64: {
            IsOpen = input.ReadBool();
            break;
          }
          case 72: {
            IsCanEdit = input.ReadBool();
            break;
          }
          case 80: {
            IsPublish = input.ReadBool();
            break;
          }
          case 88: {
            Size = (global::MelandGame3.MapTemplateSize) input.ReadEnum();
            break;
          }
          case 98: {
            TitleUrl = input.ReadString();
            break;
          }
          case 106: {
            OwnerName = input.ReadString();
            break;
          }
          case 114: {
            OpTime = input.ReadString();
            break;
          }
          case 120: {
            Subscribe = input.ReadInt32();
            break;
          }
          case 128: {
            IsManorPass = input.ReadBool();
            break;
          }
          case 136: {
            ManorInterval = input.ReadInt32();
            break;
          }
          case 144: {
            Tag = (global::MelandGame3.TagMapTemplate) input.ReadEnum();
            break;
          }
          case 154: {
            Comment = input.ReadString();
            break;
          }
          case 160: {
            IsRecommend = input.ReadBool();
            break;
          }
          case 168: {
            Visit = input.ReadInt32();
            break;
          }
          case 176: {
            ThumbUp = input.ReadInt32();
            break;
          }
          case 184: {
            ThumbDown = input.ReadInt32();
            break;
          }
          case 194: {
            thumbnails_.AddEntriesFrom(ref input, _repeated_thumbnails_codec);
            break;
          }
          case 200: {
            MapType = (global::MelandGame3.MapType) input.ReadEnum();
            break;
          }
          case 208: {
            MapTemplateType = (global::MelandGame3.MapTemplateType) input.ReadEnum();
            break;
          }
          case 216: {
            LessonTag = (global::MelandGame3.TagMapTemplate) input.ReadEnum();
            break;
          }
          case 224: {
            IsSinglePlayer = input.ReadBool();
            break;
          }
          case 234: {
            LessonPlan = input.ReadString();
            break;
          }
          case 240: {
            LessonOpen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapTemplateRoom : pb::IMessage<MapTemplateRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapTemplateRoom> _parser = new pb::MessageParser<MapTemplateRoom>(() => new MapTemplateRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapTemplateRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplateRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplateRoom(MapTemplateRoom other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      limit_ = other.limit_;
      num_ = other.num_;
      url_ = other.url_;
      pw_ = other.pw_;
      gid_ = other.gid_;
      isNative_ = other.isNative_;
      gameArgs_ = other.gameArgs_;
      titleUrl_ = other.titleUrl_;
      ownerName_ = other.ownerName_;
      templateName_ = other.templateName_;
      templateId_ = other.templateId_;
      maxNum_ = other.maxNum_;
      mapType_ = other.mapType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplateRoom Clone() {
      return new MapTemplateRoom(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 4;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pw" field.</summary>
    public const int PwFieldNumber = 6;
    private int pw_;
    /// <summary>
    ///房间密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pw {
      get { return pw_; }
      set {
        pw_ = value;
      }
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 7;
    private string gid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Gid {
      get { return gid_; }
      set {
        gid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_native" field.</summary>
    public const int IsNativeFieldNumber = 8;
    private bool isNative_;
    /// <summary>
    ///是否native包启动的服务器 优先判断，
    ///isNative=false 判断 判断url是否有值
    ///isNative=true  判断 gameArgs和gid 是否有值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNative {
      get { return isNative_; }
      set {
        isNative_ = value;
      }
    }

    /// <summary>Field number for the "game_args" field.</summary>
    public const int GameArgsFieldNumber = 9;
    private string gameArgs_ = "";
    /// <summary>
    ///启动参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameArgs {
      get { return gameArgs_; }
      set {
        gameArgs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title_url" field.</summary>
    public const int TitleUrlFieldNumber = 10;
    private string titleUrl_ = "";
    /// <summary>
    ///封面
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleUrl {
      get { return titleUrl_; }
      set {
        titleUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_name" field.</summary>
    public const int OwnerNameFieldNumber = 11;
    private string ownerName_ = "";
    /// <summary>
    ///房主名 开房间玩家姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_name" field.</summary>
    public const int TemplateNameFieldNumber = 12;
    private string templateName_ = "";
    /// <summary>
    /// 模板名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TemplateName {
      get { return templateName_; }
      set {
        templateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 13;
    private string templateId_ = "";
    /// <summary>
    ///模板ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_num" field.</summary>
    public const int MaxNumFieldNumber = 14;
    private int maxNum_;
    /// <summary>
    ///最大人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxNum {
      get { return maxNum_; }
      set {
        maxNum_ = value;
      }
    }

    /// <summary>Field number for the "map_type" field.</summary>
    public const int MapTypeFieldNumber = 15;
    private global::MelandGame3.MapType mapType_ = global::MelandGame3.MapType.MapTypeDiamond;
    /// <summary>
    /// 地图类型(正交 / 斜45度)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapType MapType {
      get { return mapType_; }
      set {
        mapType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapTemplateRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapTemplateRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Limit != other.Limit) return false;
      if (Num != other.Num) return false;
      if (Url != other.Url) return false;
      if (Pw != other.Pw) return false;
      if (Gid != other.Gid) return false;
      if (IsNative != other.IsNative) return false;
      if (GameArgs != other.GameArgs) return false;
      if (TitleUrl != other.TitleUrl) return false;
      if (OwnerName != other.OwnerName) return false;
      if (TemplateName != other.TemplateName) return false;
      if (TemplateId != other.TemplateId) return false;
      if (MaxNum != other.MaxNum) return false;
      if (MapType != other.MapType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Pw != 0) hash ^= Pw.GetHashCode();
      if (Gid.Length != 0) hash ^= Gid.GetHashCode();
      if (IsNative != false) hash ^= IsNative.GetHashCode();
      if (GameArgs.Length != 0) hash ^= GameArgs.GetHashCode();
      if (TitleUrl.Length != 0) hash ^= TitleUrl.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (TemplateName.Length != 0) hash ^= TemplateName.GetHashCode();
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (MaxNum != 0) hash ^= MaxNum.GetHashCode();
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) hash ^= MapType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (Num != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Num);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (Pw != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Pw);
      }
      if (Gid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Gid);
      }
      if (IsNative != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsNative);
      }
      if (GameArgs.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(GameArgs);
      }
      if (TitleUrl.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TitleUrl);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OwnerName);
      }
      if (TemplateName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TemplateName);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TemplateId);
      }
      if (MaxNum != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(MaxNum);
      }
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        output.WriteRawTag(120);
        output.WriteEnum((int) MapType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (Num != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Num);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (Pw != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Pw);
      }
      if (Gid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Gid);
      }
      if (IsNative != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsNative);
      }
      if (GameArgs.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(GameArgs);
      }
      if (TitleUrl.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TitleUrl);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OwnerName);
      }
      if (TemplateName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TemplateName);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TemplateId);
      }
      if (MaxNum != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(MaxNum);
      }
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        output.WriteRawTag(120);
        output.WriteEnum((int) MapType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Pw != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pw);
      }
      if (Gid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gid);
      }
      if (IsNative != false) {
        size += 1 + 1;
      }
      if (GameArgs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameArgs);
      }
      if (TitleUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleUrl);
      }
      if (OwnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (TemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateName);
      }
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (MaxNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNum);
      }
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MapType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapTemplateRoom other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Pw != 0) {
        Pw = other.Pw;
      }
      if (other.Gid.Length != 0) {
        Gid = other.Gid;
      }
      if (other.IsNative != false) {
        IsNative = other.IsNative;
      }
      if (other.GameArgs.Length != 0) {
        GameArgs = other.GameArgs;
      }
      if (other.TitleUrl.Length != 0) {
        TitleUrl = other.TitleUrl;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.TemplateName.Length != 0) {
        TemplateName = other.TemplateName;
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.MaxNum != 0) {
        MaxNum = other.MaxNum;
      }
      if (other.MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        MapType = other.MapType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
          case 32: {
            Num = input.ReadInt32();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 48: {
            Pw = input.ReadInt32();
            break;
          }
          case 58: {
            Gid = input.ReadString();
            break;
          }
          case 64: {
            IsNative = input.ReadBool();
            break;
          }
          case 74: {
            GameArgs = input.ReadString();
            break;
          }
          case 82: {
            TitleUrl = input.ReadString();
            break;
          }
          case 90: {
            OwnerName = input.ReadString();
            break;
          }
          case 98: {
            TemplateName = input.ReadString();
            break;
          }
          case 106: {
            TemplateId = input.ReadString();
            break;
          }
          case 112: {
            MaxNum = input.ReadInt32();
            break;
          }
          case 120: {
            MapType = (global::MelandGame3.MapType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
          case 32: {
            Num = input.ReadInt32();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 48: {
            Pw = input.ReadInt32();
            break;
          }
          case 58: {
            Gid = input.ReadString();
            break;
          }
          case 64: {
            IsNative = input.ReadBool();
            break;
          }
          case 74: {
            GameArgs = input.ReadString();
            break;
          }
          case 82: {
            TitleUrl = input.ReadString();
            break;
          }
          case 90: {
            OwnerName = input.ReadString();
            break;
          }
          case 98: {
            TemplateName = input.ReadString();
            break;
          }
          case 106: {
            TemplateId = input.ReadString();
            break;
          }
          case 112: {
            MaxNum = input.ReadInt32();
            break;
          }
          case 120: {
            MapType = (global::MelandGame3.MapType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 地图静态数据
  /// </summary>
  public sealed partial class MapStaticData : pb::IMessage<MapStaticData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapStaticData> _parser = new pb::MessageParser<MapStaticData>(() => new MapStaticData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapStaticData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapStaticData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapStaticData(MapStaticData other) : this() {
      using_ = other.using_;
      mapChunkFiles_ = other.mapChunkFiles_.Clone();
      chunkFile_ = other.chunkFile_;
      resourceFile_ = other.resourceFile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapStaticData Clone() {
      return new MapStaticData(this);
    }

    /// <summary>Field number for the "using" field.</summary>
    public const int UsingFieldNumber = 1;
    private bool using_;
    /// <summary>
    /// 是否使用静态数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Using {
      get { return using_; }
      set {
        using_ = value;
      }
    }

    /// <summary>Field number for the "map_chunk_files" field.</summary>
    public const int MapChunkFilesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_mapChunkFiles_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> mapChunkFiles_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 静态数据文件列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> MapChunkFiles {
      get { return mapChunkFiles_; }
    }

    /// <summary>Field number for the "chunk_file" field.</summary>
    public const int ChunkFileFieldNumber = 3;
    private string chunkFile_ = "";
    /// <summary>
    /// 静态数据文件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChunkFile {
      get { return chunkFile_; }
      set {
        chunkFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_file" field.</summary>
    public const int ResourceFileFieldNumber = 4;
    private string resourceFile_ = "";
    /// <summary>
    /// 静态资源文件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResourceFile {
      get { return resourceFile_; }
      set {
        resourceFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapStaticData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapStaticData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Using != other.Using) return false;
      if(!mapChunkFiles_.Equals(other.mapChunkFiles_)) return false;
      if (ChunkFile != other.ChunkFile) return false;
      if (ResourceFile != other.ResourceFile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Using != false) hash ^= Using.GetHashCode();
      hash ^= mapChunkFiles_.GetHashCode();
      if (ChunkFile.Length != 0) hash ^= ChunkFile.GetHashCode();
      if (ResourceFile.Length != 0) hash ^= ResourceFile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Using != false) {
        output.WriteRawTag(8);
        output.WriteBool(Using);
      }
      mapChunkFiles_.WriteTo(output, _repeated_mapChunkFiles_codec);
      if (ChunkFile.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChunkFile);
      }
      if (ResourceFile.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResourceFile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Using != false) {
        output.WriteRawTag(8);
        output.WriteBool(Using);
      }
      mapChunkFiles_.WriteTo(ref output, _repeated_mapChunkFiles_codec);
      if (ChunkFile.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChunkFile);
      }
      if (ResourceFile.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResourceFile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Using != false) {
        size += 1 + 1;
      }
      size += mapChunkFiles_.CalculateSize(_repeated_mapChunkFiles_codec);
      if (ChunkFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChunkFile);
      }
      if (ResourceFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceFile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapStaticData other) {
      if (other == null) {
        return;
      }
      if (other.Using != false) {
        Using = other.Using;
      }
      mapChunkFiles_.Add(other.mapChunkFiles_);
      if (other.ChunkFile.Length != 0) {
        ChunkFile = other.ChunkFile;
      }
      if (other.ResourceFile.Length != 0) {
        ResourceFile = other.ResourceFile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Using = input.ReadBool();
            break;
          }
          case 18: {
            mapChunkFiles_.AddEntriesFrom(input, _repeated_mapChunkFiles_codec);
            break;
          }
          case 26: {
            ChunkFile = input.ReadString();
            break;
          }
          case 34: {
            ResourceFile = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Using = input.ReadBool();
            break;
          }
          case 18: {
            mapChunkFiles_.AddEntriesFrom(ref input, _repeated_mapChunkFiles_codec);
            break;
          }
          case 26: {
            ChunkFile = input.ReadString();
            break;
          }
          case 34: {
            ResourceFile = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Map : pb::IMessage<Map>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Map> _parser = new pb::MessageParser<Map>(() => new Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Map(Map other) : this() {
      id_ = other.id_;
      groundTexture_ = other.groundTexture_;
      chunksCdnBase_ = other.chunksCdnBase_;
      chunkFiles_ = other.chunkFiles_.Clone();
      tileWidth_ = other.tileWidth_;
      tileHeight_ = other.tileHeight_;
      mapWidth_ = other.mapWidth_;
      mapHeight_ = other.mapHeight_;
      url_ = other.url_;
      isEdit_ = other.isEdit_;
      isEditMap_ = other.isEditMap_;
      rhombR_ = other.rhombR_;
      rhombC_ = other.rhombC_;
      rhombOffsetR_ = other.rhombOffsetR_;
      rhombOffsetC_ = other.rhombOffsetC_;
      rlen_ = other.rlen_;
      clen_ = other.clen_;
      mapType_ = other.mapType_;
      mapTemplateType_ = other.mapTemplateType_;
      lessonModelJson_ = other.lessonModelJson_;
      staticData_ = other.staticData_ != null ? other.staticData_.Clone() : null;
      mapModel_ = other.mapModel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Map Clone() {
      return new Map(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ground_texture" field.</summary>
    public const int GroundTextureFieldNumber = 2;
    private string groundTexture_ = "";
    /// <summary>
    /// 地图地块纹理名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroundTexture {
      get { return groundTexture_; }
      set {
        groundTexture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chunks_cdn_base" field.</summary>
    public const int ChunksCdnBaseFieldNumber = 3;
    private string chunksCdnBase_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChunksCdnBase {
      get { return chunksCdnBase_; }
      set {
        chunksCdnBase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chunk_files" field.</summary>
    public const int ChunkFilesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_chunkFiles_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> chunkFiles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ChunkFiles {
      get { return chunkFiles_; }
    }

    /// <summary>Field number for the "tile_width" field.</summary>
    public const int TileWidthFieldNumber = 5;
    private long tileWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TileWidth {
      get { return tileWidth_; }
      set {
        tileWidth_ = value;
      }
    }

    /// <summary>Field number for the "tile_height" field.</summary>
    public const int TileHeightFieldNumber = 6;
    private long tileHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TileHeight {
      get { return tileHeight_; }
      set {
        tileHeight_ = value;
      }
    }

    /// <summary>Field number for the "map_width" field.</summary>
    public const int MapWidthFieldNumber = 7;
    private long mapWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MapWidth {
      get { return mapWidth_; }
      set {
        mapWidth_ = value;
      }
    }

    /// <summary>Field number for the "map_height" field.</summary>
    public const int MapHeightFieldNumber = 8;
    private long mapHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MapHeight {
      get { return mapHeight_; }
      set {
        mapHeight_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 9;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_edit" field.</summary>
    public const int IsEditFieldNumber = 10;
    private bool isEdit_;
    /// <summary>
    ///是否在模板房间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEdit {
      get { return isEdit_; }
      set {
        isEdit_ = value;
      }
    }

    /// <summary>Field number for the "is_edit_map" field.</summary>
    public const int IsEditMapFieldNumber = 11;
    private bool isEditMap_;
    /// <summary>
    ///是否可编辑 是否打开IDE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEditMap {
      get { return isEditMap_; }
      set {
        isEditMap_ = value;
      }
    }

    /// <summary>Field number for the "rhomb_r" field.</summary>
    public const int RhombRFieldNumber = 12;
    private int rhombR_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RhombR {
      get { return rhombR_; }
      set {
        rhombR_ = value;
      }
    }

    /// <summary>Field number for the "rhomb_c" field.</summary>
    public const int RhombCFieldNumber = 13;
    private int rhombC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RhombC {
      get { return rhombC_; }
      set {
        rhombC_ = value;
      }
    }

    /// <summary>Field number for the "rhomb_offset_r" field.</summary>
    public const int RhombOffsetRFieldNumber = 14;
    private int rhombOffsetR_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RhombOffsetR {
      get { return rhombOffsetR_; }
      set {
        rhombOffsetR_ = value;
      }
    }

    /// <summary>Field number for the "rhomb_offset_c" field.</summary>
    public const int RhombOffsetCFieldNumber = 15;
    private int rhombOffsetC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RhombOffsetC {
      get { return rhombOffsetC_; }
      set {
        rhombOffsetC_ = value;
      }
    }

    /// <summary>Field number for the "rlen" field.</summary>
    public const int RlenFieldNumber = 16;
    private int rlen_;
    /// <summary>
    ///地图r方向长度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rlen {
      get { return rlen_; }
      set {
        rlen_ = value;
      }
    }

    /// <summary>Field number for the "clen" field.</summary>
    public const int ClenFieldNumber = 17;
    private int clen_;
    /// <summary>
    ///地图c方向长度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clen {
      get { return clen_; }
      set {
        clen_ = value;
      }
    }

    /// <summary>Field number for the "map_type" field.</summary>
    public const int MapTypeFieldNumber = 18;
    private global::MelandGame3.MapType mapType_ = global::MelandGame3.MapType.MapTypeDiamond;
    /// <summary>
    ///地图类型(斜45度菱形 / 正交矩形)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapType MapType {
      get { return mapType_; }
      set {
        mapType_ = value;
      }
    }

    /// <summary>Field number for the "map_template_type" field.</summary>
    public const int MapTemplateTypeFieldNumber = 19;
    private global::MelandGame3.MapTemplateType mapTemplateType_ = global::MelandGame3.MapTemplateType.MapTemplateTypeNormal;
    /// <summary>
    /// 0普通地图模板 1课程地图模板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapTemplateType MapTemplateType {
      get { return mapTemplateType_; }
      set {
        mapTemplateType_ = value;
      }
    }

    /// <summary>Field number for the "lesson_model_json" field.</summary>
    public const int LessonModelJsonFieldNumber = 20;
    private string lessonModelJson_ = "";
    /// <summary>
    /// 课程模板配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LessonModelJson {
      get { return lessonModelJson_; }
      set {
        lessonModelJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "static_data" field.</summary>
    public const int StaticDataFieldNumber = 22;
    private global::MelandGame3.MapStaticData staticData_;
    /// <summary>
    /// 地图静态地块数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapStaticData StaticData {
      get { return staticData_; }
      set {
        staticData_ = value;
      }
    }

    /// <summary>Field number for the "map_model" field.</summary>
    public const int MapModelFieldNumber = 23;
    private global::MelandGame3.GameMapModel mapModel_ = global::MelandGame3.GameMapModel.GameMapModelGame;
    /// <summary>
    /// 地图模式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.GameMapModel MapModel {
      get { return mapModel_; }
      set {
        mapModel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GroundTexture != other.GroundTexture) return false;
      if (ChunksCdnBase != other.ChunksCdnBase) return false;
      if(!chunkFiles_.Equals(other.chunkFiles_)) return false;
      if (TileWidth != other.TileWidth) return false;
      if (TileHeight != other.TileHeight) return false;
      if (MapWidth != other.MapWidth) return false;
      if (MapHeight != other.MapHeight) return false;
      if (Url != other.Url) return false;
      if (IsEdit != other.IsEdit) return false;
      if (IsEditMap != other.IsEditMap) return false;
      if (RhombR != other.RhombR) return false;
      if (RhombC != other.RhombC) return false;
      if (RhombOffsetR != other.RhombOffsetR) return false;
      if (RhombOffsetC != other.RhombOffsetC) return false;
      if (Rlen != other.Rlen) return false;
      if (Clen != other.Clen) return false;
      if (MapType != other.MapType) return false;
      if (MapTemplateType != other.MapTemplateType) return false;
      if (LessonModelJson != other.LessonModelJson) return false;
      if (!object.Equals(StaticData, other.StaticData)) return false;
      if (MapModel != other.MapModel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GroundTexture.Length != 0) hash ^= GroundTexture.GetHashCode();
      if (ChunksCdnBase.Length != 0) hash ^= ChunksCdnBase.GetHashCode();
      hash ^= chunkFiles_.GetHashCode();
      if (TileWidth != 0L) hash ^= TileWidth.GetHashCode();
      if (TileHeight != 0L) hash ^= TileHeight.GetHashCode();
      if (MapWidth != 0L) hash ^= MapWidth.GetHashCode();
      if (MapHeight != 0L) hash ^= MapHeight.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (IsEdit != false) hash ^= IsEdit.GetHashCode();
      if (IsEditMap != false) hash ^= IsEditMap.GetHashCode();
      if (RhombR != 0) hash ^= RhombR.GetHashCode();
      if (RhombC != 0) hash ^= RhombC.GetHashCode();
      if (RhombOffsetR != 0) hash ^= RhombOffsetR.GetHashCode();
      if (RhombOffsetC != 0) hash ^= RhombOffsetC.GetHashCode();
      if (Rlen != 0) hash ^= Rlen.GetHashCode();
      if (Clen != 0) hash ^= Clen.GetHashCode();
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) hash ^= MapType.GetHashCode();
      if (MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) hash ^= MapTemplateType.GetHashCode();
      if (LessonModelJson.Length != 0) hash ^= LessonModelJson.GetHashCode();
      if (staticData_ != null) hash ^= StaticData.GetHashCode();
      if (MapModel != global::MelandGame3.GameMapModel.GameMapModelGame) hash ^= MapModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GroundTexture.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroundTexture);
      }
      if (ChunksCdnBase.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChunksCdnBase);
      }
      chunkFiles_.WriteTo(output, _repeated_chunkFiles_codec);
      if (TileWidth != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TileWidth);
      }
      if (TileHeight != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TileHeight);
      }
      if (MapWidth != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MapWidth);
      }
      if (MapHeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MapHeight);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Url);
      }
      if (IsEdit != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsEdit);
      }
      if (IsEditMap != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsEditMap);
      }
      if (RhombR != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RhombR);
      }
      if (RhombC != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RhombC);
      }
      if (RhombOffsetR != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(RhombOffsetR);
      }
      if (RhombOffsetC != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(RhombOffsetC);
      }
      if (Rlen != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Rlen);
      }
      if (Clen != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Clen);
      }
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) MapType);
      }
      if (MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) MapTemplateType);
      }
      if (LessonModelJson.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(LessonModelJson);
      }
      if (staticData_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(StaticData);
      }
      if (MapModel != global::MelandGame3.GameMapModel.GameMapModelGame) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) MapModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GroundTexture.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroundTexture);
      }
      if (ChunksCdnBase.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChunksCdnBase);
      }
      chunkFiles_.WriteTo(ref output, _repeated_chunkFiles_codec);
      if (TileWidth != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TileWidth);
      }
      if (TileHeight != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TileHeight);
      }
      if (MapWidth != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MapWidth);
      }
      if (MapHeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MapHeight);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Url);
      }
      if (IsEdit != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsEdit);
      }
      if (IsEditMap != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsEditMap);
      }
      if (RhombR != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RhombR);
      }
      if (RhombC != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RhombC);
      }
      if (RhombOffsetR != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(RhombOffsetR);
      }
      if (RhombOffsetC != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(RhombOffsetC);
      }
      if (Rlen != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Rlen);
      }
      if (Clen != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Clen);
      }
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) MapType);
      }
      if (MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) MapTemplateType);
      }
      if (LessonModelJson.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(LessonModelJson);
      }
      if (staticData_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(StaticData);
      }
      if (MapModel != global::MelandGame3.GameMapModel.GameMapModelGame) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) MapModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (GroundTexture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroundTexture);
      }
      if (ChunksCdnBase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChunksCdnBase);
      }
      size += chunkFiles_.CalculateSize(_repeated_chunkFiles_codec);
      if (TileWidth != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TileWidth);
      }
      if (TileHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TileHeight);
      }
      if (MapWidth != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MapWidth);
      }
      if (MapHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MapHeight);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (IsEdit != false) {
        size += 1 + 1;
      }
      if (IsEditMap != false) {
        size += 1 + 1;
      }
      if (RhombR != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RhombR);
      }
      if (RhombC != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RhombC);
      }
      if (RhombOffsetR != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RhombOffsetR);
      }
      if (RhombOffsetC != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RhombOffsetC);
      }
      if (Rlen != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Rlen);
      }
      if (Clen != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Clen);
      }
      if (MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MapType);
      }
      if (MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MapTemplateType);
      }
      if (LessonModelJson.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LessonModelJson);
      }
      if (staticData_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StaticData);
      }
      if (MapModel != global::MelandGame3.GameMapModel.GameMapModelGame) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MapModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Map other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GroundTexture.Length != 0) {
        GroundTexture = other.GroundTexture;
      }
      if (other.ChunksCdnBase.Length != 0) {
        ChunksCdnBase = other.ChunksCdnBase;
      }
      chunkFiles_.Add(other.chunkFiles_);
      if (other.TileWidth != 0L) {
        TileWidth = other.TileWidth;
      }
      if (other.TileHeight != 0L) {
        TileHeight = other.TileHeight;
      }
      if (other.MapWidth != 0L) {
        MapWidth = other.MapWidth;
      }
      if (other.MapHeight != 0L) {
        MapHeight = other.MapHeight;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.IsEdit != false) {
        IsEdit = other.IsEdit;
      }
      if (other.IsEditMap != false) {
        IsEditMap = other.IsEditMap;
      }
      if (other.RhombR != 0) {
        RhombR = other.RhombR;
      }
      if (other.RhombC != 0) {
        RhombC = other.RhombC;
      }
      if (other.RhombOffsetR != 0) {
        RhombOffsetR = other.RhombOffsetR;
      }
      if (other.RhombOffsetC != 0) {
        RhombOffsetC = other.RhombOffsetC;
      }
      if (other.Rlen != 0) {
        Rlen = other.Rlen;
      }
      if (other.Clen != 0) {
        Clen = other.Clen;
      }
      if (other.MapType != global::MelandGame3.MapType.MapTypeDiamond) {
        MapType = other.MapType;
      }
      if (other.MapTemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        MapTemplateType = other.MapTemplateType;
      }
      if (other.LessonModelJson.Length != 0) {
        LessonModelJson = other.LessonModelJson;
      }
      if (other.staticData_ != null) {
        if (staticData_ == null) {
          StaticData = new global::MelandGame3.MapStaticData();
        }
        StaticData.MergeFrom(other.StaticData);
      }
      if (other.MapModel != global::MelandGame3.GameMapModel.GameMapModelGame) {
        MapModel = other.MapModel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            GroundTexture = input.ReadString();
            break;
          }
          case 26: {
            ChunksCdnBase = input.ReadString();
            break;
          }
          case 34: {
            chunkFiles_.AddEntriesFrom(input, _repeated_chunkFiles_codec);
            break;
          }
          case 40: {
            TileWidth = input.ReadInt64();
            break;
          }
          case 48: {
            TileHeight = input.ReadInt64();
            break;
          }
          case 56: {
            MapWidth = input.ReadInt64();
            break;
          }
          case 64: {
            MapHeight = input.ReadInt64();
            break;
          }
          case 74: {
            Url = input.ReadString();
            break;
          }
          case 80: {
            IsEdit = input.ReadBool();
            break;
          }
          case 88: {
            IsEditMap = input.ReadBool();
            break;
          }
          case 96: {
            RhombR = input.ReadInt32();
            break;
          }
          case 104: {
            RhombC = input.ReadInt32();
            break;
          }
          case 112: {
            RhombOffsetR = input.ReadInt32();
            break;
          }
          case 120: {
            RhombOffsetC = input.ReadInt32();
            break;
          }
          case 128: {
            Rlen = input.ReadInt32();
            break;
          }
          case 136: {
            Clen = input.ReadInt32();
            break;
          }
          case 144: {
            MapType = (global::MelandGame3.MapType) input.ReadEnum();
            break;
          }
          case 152: {
            MapTemplateType = (global::MelandGame3.MapTemplateType) input.ReadEnum();
            break;
          }
          case 162: {
            LessonModelJson = input.ReadString();
            break;
          }
          case 178: {
            if (staticData_ == null) {
              StaticData = new global::MelandGame3.MapStaticData();
            }
            input.ReadMessage(StaticData);
            break;
          }
          case 184: {
            MapModel = (global::MelandGame3.GameMapModel) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            GroundTexture = input.ReadString();
            break;
          }
          case 26: {
            ChunksCdnBase = input.ReadString();
            break;
          }
          case 34: {
            chunkFiles_.AddEntriesFrom(ref input, _repeated_chunkFiles_codec);
            break;
          }
          case 40: {
            TileWidth = input.ReadInt64();
            break;
          }
          case 48: {
            TileHeight = input.ReadInt64();
            break;
          }
          case 56: {
            MapWidth = input.ReadInt64();
            break;
          }
          case 64: {
            MapHeight = input.ReadInt64();
            break;
          }
          case 74: {
            Url = input.ReadString();
            break;
          }
          case 80: {
            IsEdit = input.ReadBool();
            break;
          }
          case 88: {
            IsEditMap = input.ReadBool();
            break;
          }
          case 96: {
            RhombR = input.ReadInt32();
            break;
          }
          case 104: {
            RhombC = input.ReadInt32();
            break;
          }
          case 112: {
            RhombOffsetR = input.ReadInt32();
            break;
          }
          case 120: {
            RhombOffsetC = input.ReadInt32();
            break;
          }
          case 128: {
            Rlen = input.ReadInt32();
            break;
          }
          case 136: {
            Clen = input.ReadInt32();
            break;
          }
          case 144: {
            MapType = (global::MelandGame3.MapType) input.ReadEnum();
            break;
          }
          case 152: {
            MapTemplateType = (global::MelandGame3.MapTemplateType) input.ReadEnum();
            break;
          }
          case 162: {
            LessonModelJson = input.ReadString();
            break;
          }
          case 178: {
            if (staticData_ == null) {
              StaticData = new global::MelandGame3.MapStaticData();
            }
            input.ReadMessage(StaticData);
            break;
          }
          case 184: {
            MapModel = (global::MelandGame3.GameMapModel) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapLocation : pb::IMessage<MapLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapLocation> _parser = new pb::MessageParser<MapLocation>(() => new MapLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapLocation(MapLocation other) : this() {
      r_ = other.r_;
      c_ = other.c_;
      zIndex_ = other.zIndex_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapLocation Clone() {
      return new MapLocation(this);
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 1;
    private long r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "c" field.</summary>
    public const int CFieldNumber = 2;
    private long c_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long C {
      get { return c_; }
      set {
        c_ = value;
      }
    }

    /// <summary>Field number for the "z_index" field.</summary>
    public const int ZIndexFieldNumber = 3;
    private long zIndex_;
    /// <summary>
    /// 物品对象在地图上的层级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ZIndex {
      get { return zIndex_; }
      set {
        zIndex_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 4;
    private int z_;
    /// <summary>
    /// 物品在地图上的像素高度偏移
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (R != other.R) return false;
      if (C != other.C) return false;
      if (ZIndex != other.ZIndex) return false;
      if (Z != other.Z) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (R != 0L) hash ^= R.GetHashCode();
      if (C != 0L) hash ^= C.GetHashCode();
      if (ZIndex != 0L) hash ^= ZIndex.GetHashCode();
      if (Z != 0) hash ^= Z.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (R != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(R);
      }
      if (C != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(C);
      }
      if (ZIndex != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ZIndex);
      }
      if (Z != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (R != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(R);
      }
      if (C != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(C);
      }
      if (ZIndex != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ZIndex);
      }
      if (Z != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (R != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(R);
      }
      if (C != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(C);
      }
      if (ZIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ZIndex);
      }
      if (Z != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Z);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapLocation other) {
      if (other == null) {
        return;
      }
      if (other.R != 0L) {
        R = other.R;
      }
      if (other.C != 0L) {
        C = other.C;
      }
      if (other.ZIndex != 0L) {
        ZIndex = other.ZIndex;
      }
      if (other.Z != 0) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            R = input.ReadInt64();
            break;
          }
          case 16: {
            C = input.ReadInt64();
            break;
          }
          case 24: {
            ZIndex = input.ReadInt64();
            break;
          }
          case 32: {
            Z = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            R = input.ReadInt64();
            break;
          }
          case 16: {
            C = input.ReadInt64();
            break;
          }
          case 24: {
            ZIndex = input.ReadInt64();
            break;
          }
          case 32: {
            Z = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 课程模板_课程模式配置数据
  /// </summary>
  public sealed partial class LessonModelData : pb::IMessage<LessonModelData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LessonModelData> _parser = new pb::MessageParser<LessonModelData>(() => new LessonModelData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LessonModelData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonModelData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonModelData(LessonModelData other) : this() {
      teacherView_ = other.teacherView_;
      cameraModel_ = other.cameraModel_;
      controlModel_ = other.controlModel_;
      useDemonstrate_ = other.useDemonstrate_;
      playMusic_ = other.playMusic_;
      pathFinding_ = other.pathFinding_;
      useWindow_ = other.useWindow_;
      useGuide_ = other.useGuide_;
      playAudio_ = other.playAudio_;
      useRocker_ = other.useRocker_;
      lockScreenUi_ = other.lockScreenUi_;
      studentMgr_ = other.studentMgr_;
      studentTP_ = other.studentTP_;
      sceneUnlock_ = other.sceneUnlock_;
      mapEntrace_ = other.mapEntrace_;
      lessonManagerUi_ = other.lessonManagerUi_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonModelData Clone() {
      return new LessonModelData(this);
    }

    /// <summary>Field number for the "teacher_view" field.</summary>
    public const int TeacherViewFieldNumber = 1;
    private global::MelandGame3.LessonTeacherViewModel teacherView_ = global::MelandGame3.LessonTeacherViewModel.LessonTeacherViewModelUser;
    /// <summary>
    /// 老师视角
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonTeacherViewModel TeacherView {
      get { return teacherView_; }
      set {
        teacherView_ = value;
      }
    }

    /// <summary>Field number for the "camera_model" field.</summary>
    public const int CameraModelFieldNumber = 2;
    private string cameraModel_ = "";
    /// <summary>
    /// 镜头模式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CameraModel {
      get { return cameraModel_; }
      set {
        cameraModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "control_model" field.</summary>
    public const int ControlModelFieldNumber = 3;
    private string controlModel_ = "";
    /// <summary>
    /// 操作模式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControlModel {
      get { return controlModel_; }
      set {
        controlModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_demonstrate" field.</summary>
    public const int UseDemonstrateFieldNumber = 4;
    private bool useDemonstrate_;
    /// <summary>
    /// 演示/查看开关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseDemonstrate {
      get { return useDemonstrate_; }
      set {
        useDemonstrate_ = value;
      }
    }

    /// <summary>Field number for the "play_music" field.</summary>
    public const int PlayMusicFieldNumber = 5;
    private bool playMusic_;
    /// <summary>
    /// 播放音乐(背景)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayMusic {
      get { return playMusic_; }
      set {
        playMusic_ = value;
      }
    }

    /// <summary>Field number for the "path_finding" field.</summary>
    public const int PathFindingFieldNumber = 6;
    private bool pathFinding_;
    /// <summary>
    /// 自动寻路
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PathFinding {
      get { return pathFinding_; }
      set {
        pathFinding_ = value;
      }
    }

    /// <summary>Field number for the "use_window" field.</summary>
    public const int UseWindowFieldNumber = 7;
    private bool useWindow_;
    /// <summary>
    /// 窗口化设置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseWindow {
      get { return useWindow_; }
      set {
        useWindow_ = value;
      }
    }

    /// <summary>Field number for the "use_guide" field.</summary>
    public const int UseGuideFieldNumber = 8;
    private bool useGuide_;
    /// <summary>
    /// 课程引导
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseGuide {
      get { return useGuide_; }
      set {
        useGuide_ = value;
      }
    }

    /// <summary>Field number for the "play_audio" field.</summary>
    public const int PlayAudioFieldNumber = 9;
    private bool playAudio_;
    /// <summary>
    /// 音效开关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayAudio {
      get { return playAudio_; }
      set {
        playAudio_ = value;
      }
    }

    /// <summary>Field number for the "use_rocker" field.</summary>
    public const int UseRockerFieldNumber = 10;
    private bool useRocker_;
    /// <summary>
    /// 使用摇杆
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseRocker {
      get { return useRocker_; }
      set {
        useRocker_ = value;
      }
    }

    /// <summary>Field number for the "lock_screen_ui" field.</summary>
    public const int LockScreenUiFieldNumber = 11;
    private bool lockScreenUi_;
    /// <summary>
    /// 锁屏UI
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LockScreenUi {
      get { return lockScreenUi_; }
      set {
        lockScreenUi_ = value;
      }
    }

    /// <summary>Field number for the "student_mgr" field.</summary>
    public const int StudentMgrFieldNumber = 12;
    private bool studentMgr_;
    /// <summary>
    /// 学生管理
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StudentMgr {
      get { return studentMgr_; }
      set {
        studentMgr_ = value;
      }
    }

    /// <summary>Field number for the "student_TP" field.</summary>
    public const int StudentTPFieldNumber = 13;
    private bool studentTP_;
    /// <summary>
    /// 学生TP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StudentTP {
      get { return studentTP_; }
      set {
        studentTP_ = value;
      }
    }

    /// <summary>Field number for the "scene_unlock" field.</summary>
    public const int SceneUnlockFieldNumber = 14;
    private bool sceneUnlock_;
    /// <summary>
    /// 解锁场景 开关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SceneUnlock {
      get { return sceneUnlock_; }
      set {
        sceneUnlock_ = value;
      }
    }

    /// <summary>Field number for the "map_entrace" field.</summary>
    public const int MapEntraceFieldNumber = 15;
    private bool mapEntrace_;
    /// <summary>
    /// 小地图 开关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MapEntrace {
      get { return mapEntrace_; }
      set {
        mapEntrace_ = value;
      }
    }

    /// <summary>Field number for the "lesson_manager_ui" field.</summary>
    public const int LessonManagerUiFieldNumber = 16;
    private bool lessonManagerUi_;
    /// <summary>
    /// 课程流程管理UI开关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LessonManagerUi {
      get { return lessonManagerUi_; }
      set {
        lessonManagerUi_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LessonModelData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LessonModelData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeacherView != other.TeacherView) return false;
      if (CameraModel != other.CameraModel) return false;
      if (ControlModel != other.ControlModel) return false;
      if (UseDemonstrate != other.UseDemonstrate) return false;
      if (PlayMusic != other.PlayMusic) return false;
      if (PathFinding != other.PathFinding) return false;
      if (UseWindow != other.UseWindow) return false;
      if (UseGuide != other.UseGuide) return false;
      if (PlayAudio != other.PlayAudio) return false;
      if (UseRocker != other.UseRocker) return false;
      if (LockScreenUi != other.LockScreenUi) return false;
      if (StudentMgr != other.StudentMgr) return false;
      if (StudentTP != other.StudentTP) return false;
      if (SceneUnlock != other.SceneUnlock) return false;
      if (MapEntrace != other.MapEntrace) return false;
      if (LessonManagerUi != other.LessonManagerUi) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TeacherView != global::MelandGame3.LessonTeacherViewModel.LessonTeacherViewModelUser) hash ^= TeacherView.GetHashCode();
      if (CameraModel.Length != 0) hash ^= CameraModel.GetHashCode();
      if (ControlModel.Length != 0) hash ^= ControlModel.GetHashCode();
      if (UseDemonstrate != false) hash ^= UseDemonstrate.GetHashCode();
      if (PlayMusic != false) hash ^= PlayMusic.GetHashCode();
      if (PathFinding != false) hash ^= PathFinding.GetHashCode();
      if (UseWindow != false) hash ^= UseWindow.GetHashCode();
      if (UseGuide != false) hash ^= UseGuide.GetHashCode();
      if (PlayAudio != false) hash ^= PlayAudio.GetHashCode();
      if (UseRocker != false) hash ^= UseRocker.GetHashCode();
      if (LockScreenUi != false) hash ^= LockScreenUi.GetHashCode();
      if (StudentMgr != false) hash ^= StudentMgr.GetHashCode();
      if (StudentTP != false) hash ^= StudentTP.GetHashCode();
      if (SceneUnlock != false) hash ^= SceneUnlock.GetHashCode();
      if (MapEntrace != false) hash ^= MapEntrace.GetHashCode();
      if (LessonManagerUi != false) hash ^= LessonManagerUi.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TeacherView != global::MelandGame3.LessonTeacherViewModel.LessonTeacherViewModelUser) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TeacherView);
      }
      if (CameraModel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CameraModel);
      }
      if (ControlModel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ControlModel);
      }
      if (UseDemonstrate != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseDemonstrate);
      }
      if (PlayMusic != false) {
        output.WriteRawTag(40);
        output.WriteBool(PlayMusic);
      }
      if (PathFinding != false) {
        output.WriteRawTag(48);
        output.WriteBool(PathFinding);
      }
      if (UseWindow != false) {
        output.WriteRawTag(56);
        output.WriteBool(UseWindow);
      }
      if (UseGuide != false) {
        output.WriteRawTag(64);
        output.WriteBool(UseGuide);
      }
      if (PlayAudio != false) {
        output.WriteRawTag(72);
        output.WriteBool(PlayAudio);
      }
      if (UseRocker != false) {
        output.WriteRawTag(80);
        output.WriteBool(UseRocker);
      }
      if (LockScreenUi != false) {
        output.WriteRawTag(88);
        output.WriteBool(LockScreenUi);
      }
      if (StudentMgr != false) {
        output.WriteRawTag(96);
        output.WriteBool(StudentMgr);
      }
      if (StudentTP != false) {
        output.WriteRawTag(104);
        output.WriteBool(StudentTP);
      }
      if (SceneUnlock != false) {
        output.WriteRawTag(112);
        output.WriteBool(SceneUnlock);
      }
      if (MapEntrace != false) {
        output.WriteRawTag(120);
        output.WriteBool(MapEntrace);
      }
      if (LessonManagerUi != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(LessonManagerUi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TeacherView != global::MelandGame3.LessonTeacherViewModel.LessonTeacherViewModelUser) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TeacherView);
      }
      if (CameraModel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CameraModel);
      }
      if (ControlModel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ControlModel);
      }
      if (UseDemonstrate != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseDemonstrate);
      }
      if (PlayMusic != false) {
        output.WriteRawTag(40);
        output.WriteBool(PlayMusic);
      }
      if (PathFinding != false) {
        output.WriteRawTag(48);
        output.WriteBool(PathFinding);
      }
      if (UseWindow != false) {
        output.WriteRawTag(56);
        output.WriteBool(UseWindow);
      }
      if (UseGuide != false) {
        output.WriteRawTag(64);
        output.WriteBool(UseGuide);
      }
      if (PlayAudio != false) {
        output.WriteRawTag(72);
        output.WriteBool(PlayAudio);
      }
      if (UseRocker != false) {
        output.WriteRawTag(80);
        output.WriteBool(UseRocker);
      }
      if (LockScreenUi != false) {
        output.WriteRawTag(88);
        output.WriteBool(LockScreenUi);
      }
      if (StudentMgr != false) {
        output.WriteRawTag(96);
        output.WriteBool(StudentMgr);
      }
      if (StudentTP != false) {
        output.WriteRawTag(104);
        output.WriteBool(StudentTP);
      }
      if (SceneUnlock != false) {
        output.WriteRawTag(112);
        output.WriteBool(SceneUnlock);
      }
      if (MapEntrace != false) {
        output.WriteRawTag(120);
        output.WriteBool(MapEntrace);
      }
      if (LessonManagerUi != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(LessonManagerUi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TeacherView != global::MelandGame3.LessonTeacherViewModel.LessonTeacherViewModelUser) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeacherView);
      }
      if (CameraModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CameraModel);
      }
      if (ControlModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlModel);
      }
      if (UseDemonstrate != false) {
        size += 1 + 1;
      }
      if (PlayMusic != false) {
        size += 1 + 1;
      }
      if (PathFinding != false) {
        size += 1 + 1;
      }
      if (UseWindow != false) {
        size += 1 + 1;
      }
      if (UseGuide != false) {
        size += 1 + 1;
      }
      if (PlayAudio != false) {
        size += 1 + 1;
      }
      if (UseRocker != false) {
        size += 1 + 1;
      }
      if (LockScreenUi != false) {
        size += 1 + 1;
      }
      if (StudentMgr != false) {
        size += 1 + 1;
      }
      if (StudentTP != false) {
        size += 1 + 1;
      }
      if (SceneUnlock != false) {
        size += 1 + 1;
      }
      if (MapEntrace != false) {
        size += 1 + 1;
      }
      if (LessonManagerUi != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LessonModelData other) {
      if (other == null) {
        return;
      }
      if (other.TeacherView != global::MelandGame3.LessonTeacherViewModel.LessonTeacherViewModelUser) {
        TeacherView = other.TeacherView;
      }
      if (other.CameraModel.Length != 0) {
        CameraModel = other.CameraModel;
      }
      if (other.ControlModel.Length != 0) {
        ControlModel = other.ControlModel;
      }
      if (other.UseDemonstrate != false) {
        UseDemonstrate = other.UseDemonstrate;
      }
      if (other.PlayMusic != false) {
        PlayMusic = other.PlayMusic;
      }
      if (other.PathFinding != false) {
        PathFinding = other.PathFinding;
      }
      if (other.UseWindow != false) {
        UseWindow = other.UseWindow;
      }
      if (other.UseGuide != false) {
        UseGuide = other.UseGuide;
      }
      if (other.PlayAudio != false) {
        PlayAudio = other.PlayAudio;
      }
      if (other.UseRocker != false) {
        UseRocker = other.UseRocker;
      }
      if (other.LockScreenUi != false) {
        LockScreenUi = other.LockScreenUi;
      }
      if (other.StudentMgr != false) {
        StudentMgr = other.StudentMgr;
      }
      if (other.StudentTP != false) {
        StudentTP = other.StudentTP;
      }
      if (other.SceneUnlock != false) {
        SceneUnlock = other.SceneUnlock;
      }
      if (other.MapEntrace != false) {
        MapEntrace = other.MapEntrace;
      }
      if (other.LessonManagerUi != false) {
        LessonManagerUi = other.LessonManagerUi;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeacherView = (global::MelandGame3.LessonTeacherViewModel) input.ReadEnum();
            break;
          }
          case 18: {
            CameraModel = input.ReadString();
            break;
          }
          case 26: {
            ControlModel = input.ReadString();
            break;
          }
          case 32: {
            UseDemonstrate = input.ReadBool();
            break;
          }
          case 40: {
            PlayMusic = input.ReadBool();
            break;
          }
          case 48: {
            PathFinding = input.ReadBool();
            break;
          }
          case 56: {
            UseWindow = input.ReadBool();
            break;
          }
          case 64: {
            UseGuide = input.ReadBool();
            break;
          }
          case 72: {
            PlayAudio = input.ReadBool();
            break;
          }
          case 80: {
            UseRocker = input.ReadBool();
            break;
          }
          case 88: {
            LockScreenUi = input.ReadBool();
            break;
          }
          case 96: {
            StudentMgr = input.ReadBool();
            break;
          }
          case 104: {
            StudentTP = input.ReadBool();
            break;
          }
          case 112: {
            SceneUnlock = input.ReadBool();
            break;
          }
          case 120: {
            MapEntrace = input.ReadBool();
            break;
          }
          case 128: {
            LessonManagerUi = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TeacherView = (global::MelandGame3.LessonTeacherViewModel) input.ReadEnum();
            break;
          }
          case 18: {
            CameraModel = input.ReadString();
            break;
          }
          case 26: {
            ControlModel = input.ReadString();
            break;
          }
          case 32: {
            UseDemonstrate = input.ReadBool();
            break;
          }
          case 40: {
            PlayMusic = input.ReadBool();
            break;
          }
          case 48: {
            PathFinding = input.ReadBool();
            break;
          }
          case 56: {
            UseWindow = input.ReadBool();
            break;
          }
          case 64: {
            UseGuide = input.ReadBool();
            break;
          }
          case 72: {
            PlayAudio = input.ReadBool();
            break;
          }
          case 80: {
            UseRocker = input.ReadBool();
            break;
          }
          case 88: {
            LockScreenUi = input.ReadBool();
            break;
          }
          case 96: {
            StudentMgr = input.ReadBool();
            break;
          }
          case 104: {
            StudentTP = input.ReadBool();
            break;
          }
          case 112: {
            SceneUnlock = input.ReadBool();
            break;
          }
          case 120: {
            MapEntrace = input.ReadBool();
            break;
          }
          case 128: {
            LessonManagerUi = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 课程模板配置
  /// </summary>
  public sealed partial class LessonModelConfig : pb::IMessage<LessonModelConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LessonModelConfig> _parser = new pb::MessageParser<LessonModelConfig>(() => new LessonModelConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LessonModelConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonModelConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonModelConfig(LessonModelConfig other) : this() {
      modelType_ = other.modelType_;
      modelCid_ = other.modelCid_;
      modelData_ = other.modelData_ != null ? other.modelData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonModelConfig Clone() {
      return new LessonModelConfig(this);
    }

    /// <summary>Field number for the "model_type" field.</summary>
    public const int ModelTypeFieldNumber = 1;
    private global::MelandGame3.LessonModelType modelType_ = global::MelandGame3.LessonModelType.LessonModelTypeServer;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonModelType ModelType {
      get { return modelType_; }
      set {
        modelType_ = value;
      }
    }

    /// <summary>Field number for the "model_cid" field.</summary>
    public const int ModelCidFieldNumber = 2;
    private int modelCid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModelCid {
      get { return modelCid_; }
      set {
        modelCid_ = value;
      }
    }

    /// <summary>Field number for the "model_data" field.</summary>
    public const int ModelDataFieldNumber = 3;
    private global::MelandGame3.LessonModelData modelData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonModelData ModelData {
      get { return modelData_; }
      set {
        modelData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LessonModelConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LessonModelConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelType != other.ModelType) return false;
      if (ModelCid != other.ModelCid) return false;
      if (!object.Equals(ModelData, other.ModelData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelType != global::MelandGame3.LessonModelType.LessonModelTypeServer) hash ^= ModelType.GetHashCode();
      if (ModelCid != 0) hash ^= ModelCid.GetHashCode();
      if (modelData_ != null) hash ^= ModelData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ModelType != global::MelandGame3.LessonModelType.LessonModelTypeServer) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ModelType);
      }
      if (ModelCid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelCid);
      }
      if (modelData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ModelData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ModelType != global::MelandGame3.LessonModelType.LessonModelTypeServer) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ModelType);
      }
      if (ModelCid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelCid);
      }
      if (modelData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ModelData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ModelType != global::MelandGame3.LessonModelType.LessonModelTypeServer) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ModelType);
      }
      if (ModelCid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelCid);
      }
      if (modelData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LessonModelConfig other) {
      if (other == null) {
        return;
      }
      if (other.ModelType != global::MelandGame3.LessonModelType.LessonModelTypeServer) {
        ModelType = other.ModelType;
      }
      if (other.ModelCid != 0) {
        ModelCid = other.ModelCid;
      }
      if (other.modelData_ != null) {
        if (modelData_ == null) {
          ModelData = new global::MelandGame3.LessonModelData();
        }
        ModelData.MergeFrom(other.ModelData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ModelType = (global::MelandGame3.LessonModelType) input.ReadEnum();
            break;
          }
          case 16: {
            ModelCid = input.ReadInt32();
            break;
          }
          case 26: {
            if (modelData_ == null) {
              ModelData = new global::MelandGame3.LessonModelData();
            }
            input.ReadMessage(ModelData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ModelType = (global::MelandGame3.LessonModelType) input.ReadEnum();
            break;
          }
          case 16: {
            ModelCid = input.ReadInt32();
            break;
          }
          case 26: {
            if (modelData_ == null) {
              ModelData = new global::MelandGame3.LessonModelData();
            }
            input.ReadMessage(ModelData);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ===================== 地图资源 ======================
  /// </summary>
  public sealed partial class AreaResources : pb::IMessage<AreaResources>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AreaResources> _parser = new pb::MessageParser<AreaResources>(() => new AreaResources());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AreaResources> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaResources() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaResources(AreaResources other) : this() {
      audios_ = other.audios_.Clone();
      videos_ = other.videos_.Clone();
      images_ = other.images_.Clone();
      entityTemplateImages_ = other.entityTemplateImages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaResources Clone() {
      return new AreaResources(this);
    }

    /// <summary>Field number for the "audios" field.</summary>
    public const int AudiosFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_audios_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> audios_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///音频资源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Audios {
      get { return audios_; }
    }

    /// <summary>Field number for the "videos" field.</summary>
    public const int VideosFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_videos_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> videos_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///视频
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Videos {
      get { return videos_; }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_images_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> images_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "entityTemplateImages" field.</summary>
    public const int EntityTemplateImagesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_entityTemplateImages_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> entityTemplateImages_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///实体模板相关图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> EntityTemplateImages {
      get { return entityTemplateImages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AreaResources);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AreaResources other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!audios_.Equals(other.audios_)) return false;
      if(!videos_.Equals(other.videos_)) return false;
      if(!images_.Equals(other.images_)) return false;
      if(!entityTemplateImages_.Equals(other.entityTemplateImages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= audios_.GetHashCode();
      hash ^= videos_.GetHashCode();
      hash ^= images_.GetHashCode();
      hash ^= entityTemplateImages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      audios_.WriteTo(output, _repeated_audios_codec);
      videos_.WriteTo(output, _repeated_videos_codec);
      images_.WriteTo(output, _repeated_images_codec);
      entityTemplateImages_.WriteTo(output, _repeated_entityTemplateImages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      audios_.WriteTo(ref output, _repeated_audios_codec);
      videos_.WriteTo(ref output, _repeated_videos_codec);
      images_.WriteTo(ref output, _repeated_images_codec);
      entityTemplateImages_.WriteTo(ref output, _repeated_entityTemplateImages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += audios_.CalculateSize(_repeated_audios_codec);
      size += videos_.CalculateSize(_repeated_videos_codec);
      size += images_.CalculateSize(_repeated_images_codec);
      size += entityTemplateImages_.CalculateSize(_repeated_entityTemplateImages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AreaResources other) {
      if (other == null) {
        return;
      }
      audios_.Add(other.audios_);
      videos_.Add(other.videos_);
      images_.Add(other.images_);
      entityTemplateImages_.Add(other.entityTemplateImages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            audios_.AddEntriesFrom(input, _repeated_audios_codec);
            break;
          }
          case 18: {
            videos_.AddEntriesFrom(input, _repeated_videos_codec);
            break;
          }
          case 26: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 34: {
            entityTemplateImages_.AddEntriesFrom(input, _repeated_entityTemplateImages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            audios_.AddEntriesFrom(ref input, _repeated_audios_codec);
            break;
          }
          case 18: {
            videos_.AddEntriesFrom(ref input, _repeated_videos_codec);
            break;
          }
          case 26: {
            images_.AddEntriesFrom(ref input, _repeated_images_codec);
            break;
          }
          case 34: {
            entityTemplateImages_.AddEntriesFrom(ref input, _repeated_entityTemplateImages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapAreaRes : pb::IMessage<MapAreaRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapAreaRes> _parser = new pb::MessageParser<MapAreaRes>(() => new MapAreaRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapAreaRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapAreaRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapAreaRes(MapAreaRes other) : this() {
      areaId_ = other.areaId_;
      resources_ = other.resources_ != null ? other.resources_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapAreaRes Clone() {
      return new MapAreaRes(this);
    }

    /// <summary>Field number for the "area_id" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private string areaId_ = "";
    /// <summary>
    /// 地图区域或者课程区域ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AreaId {
      get { return areaId_; }
      set {
        areaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 2;
    private global::MelandGame3.AreaResources resources_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AreaResources Resources {
      get { return resources_; }
      set {
        resources_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapAreaRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapAreaRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      if (!object.Equals(Resources, other.Resources)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaId.Length != 0) hash ^= AreaId.GetHashCode();
      if (resources_ != null) hash ^= Resources.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AreaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AreaId);
      }
      if (resources_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resources);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AreaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AreaId);
      }
      if (resources_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resources);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AreaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaId);
      }
      if (resources_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resources);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapAreaRes other) {
      if (other == null) {
        return;
      }
      if (other.AreaId.Length != 0) {
        AreaId = other.AreaId;
      }
      if (other.resources_ != null) {
        if (resources_ == null) {
          Resources = new global::MelandGame3.AreaResources();
        }
        Resources.MergeFrom(other.Resources);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AreaId = input.ReadString();
            break;
          }
          case 18: {
            if (resources_ == null) {
              Resources = new global::MelandGame3.AreaResources();
            }
            input.ReadMessage(Resources);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AreaId = input.ReadString();
            break;
          }
          case 18: {
            if (resources_ == null) {
              Resources = new global::MelandGame3.AreaResources();
            }
            input.ReadMessage(Resources);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapResourcesFile : pb::IMessage<MapResourcesFile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapResourcesFile> _parser = new pb::MessageParser<MapResourcesFile>(() => new MapResourcesFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapResourcesFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.MapReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapResourcesFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapResourcesFile(MapResourcesFile other) : this() {
      templateId_ = other.templateId_;
      templateType_ = other.templateType_;
      lessonMapRes_ = other.lessonMapRes_.Clone();
      normalMapRes_ = other.normalMapRes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapResourcesFile Clone() {
      return new MapResourcesFile(this);
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 1;
    private string templateId_ = "";
    /// <summary>
    /// 地图模板ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_type" field.</summary>
    public const int TemplateTypeFieldNumber = 2;
    private global::MelandGame3.MapTemplateType templateType_ = global::MelandGame3.MapTemplateType.MapTemplateTypeNormal;
    /// <summary>
    /// 课程模板类型(普通地图/课程地图)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapTemplateType TemplateType {
      get { return templateType_; }
      set {
        templateType_ = value;
      }
    }

    /// <summary>Field number for the "lessonMapRes" field.</summary>
    public const int LessonMapResFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MelandGame3.MapAreaRes> _repeated_lessonMapRes_codec
        = pb::FieldCodec.ForMessage(26, global::MelandGame3.MapAreaRes.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.MapAreaRes> lessonMapRes_ = new pbc::RepeatedField<global::MelandGame3.MapAreaRes>();
    /// <summary>
    /// 课程地图资源(按课程区域切分数据文件)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.MapAreaRes> LessonMapRes {
      get { return lessonMapRes_; }
    }

    /// <summary>Field number for the "NormalMapRes" field.</summary>
    public const int NormalMapResFieldNumber = 4;
    private static readonly pb::FieldCodec<global::MelandGame3.MapAreaRes> _repeated_normalMapRes_codec
        = pb::FieldCodec.ForMessage(34, global::MelandGame3.MapAreaRes.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.MapAreaRes> normalMapRes_ = new pbc::RepeatedField<global::MelandGame3.MapAreaRes>();
    /// <summary>
    /// 普通地图资源(按地图Rc坐标区域切分数据文件)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.MapAreaRes> NormalMapRes {
      get { return normalMapRes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapResourcesFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapResourcesFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemplateId != other.TemplateId) return false;
      if (TemplateType != other.TemplateType) return false;
      if(!lessonMapRes_.Equals(other.lessonMapRes_)) return false;
      if(!normalMapRes_.Equals(other.normalMapRes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (TemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) hash ^= TemplateType.GetHashCode();
      hash ^= lessonMapRes_.GetHashCode();
      hash ^= normalMapRes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateId);
      }
      if (TemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TemplateType);
      }
      lessonMapRes_.WriteTo(output, _repeated_lessonMapRes_codec);
      normalMapRes_.WriteTo(output, _repeated_normalMapRes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateId);
      }
      if (TemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TemplateType);
      }
      lessonMapRes_.WriteTo(ref output, _repeated_lessonMapRes_codec);
      normalMapRes_.WriteTo(ref output, _repeated_normalMapRes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (TemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TemplateType);
      }
      size += lessonMapRes_.CalculateSize(_repeated_lessonMapRes_codec);
      size += normalMapRes_.CalculateSize(_repeated_normalMapRes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapResourcesFile other) {
      if (other == null) {
        return;
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.TemplateType != global::MelandGame3.MapTemplateType.MapTemplateTypeNormal) {
        TemplateType = other.TemplateType;
      }
      lessonMapRes_.Add(other.lessonMapRes_);
      normalMapRes_.Add(other.normalMapRes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TemplateId = input.ReadString();
            break;
          }
          case 16: {
            TemplateType = (global::MelandGame3.MapTemplateType) input.ReadEnum();
            break;
          }
          case 26: {
            lessonMapRes_.AddEntriesFrom(input, _repeated_lessonMapRes_codec);
            break;
          }
          case 34: {
            normalMapRes_.AddEntriesFrom(input, _repeated_normalMapRes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TemplateId = input.ReadString();
            break;
          }
          case 16: {
            TemplateType = (global::MelandGame3.MapTemplateType) input.ReadEnum();
            break;
          }
          case 26: {
            lessonMapRes_.AddEntriesFrom(ref input, _repeated_lessonMapRes_codec);
            break;
          }
          case 34: {
            normalMapRes_.AddEntriesFrom(ref input, _repeated_normalMapRes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
