// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: skill.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MelandGame3 {

  /// <summary>Holder for reflection information generated from skill.proto</summary>
  public static partial class SkillReflection {

    #region Descriptor
    /// <summary>File descriptor for skill.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SkillReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgtza2lsbC5wcm90bxILTWVsYW5kR2FtZTMaCmJ1ZmYucHJvdG8aC21vZGVs",
            "LnByb3RvIk0KElNraWxsUmFuZ2VTZXR0aW5ncxIpCgR0eXBlGAEgASgOMhsu",
            "TWVsYW5kR2FtZTMuU2tpbGxSYW5nZVR5cGUSDAoEYXJncxgCIAMoBSJOCgtT",
            "a2lsbEVmZmVjdBIxCgtlZmZlY3RfdHlwZRgBIAEoDjIcLk1lbGFuZEdhbWUz",
            "LlNraWxsRWZmZWN0VHlwZRIMCgRhcmdzGAIgAygFItwDCg1Ta2lsbFNldHRp",
            "bmdzEgoKAmlkGAEgASgFEjEKC3RhcmdldF90eXBlGAIgASgOMhwuTWVsYW5k",
            "R2FtZTMuU2tpbGxUYXJnZXRUeXBlEhAKCGRpc3RhbmNlGAMgASgFEhgKEGFj",
            "Y211bGF0aW9uX3RpbWUYBCABKAUSHwoXYmVmb3JlX2F0dGFja19yb2xsX3Rp",
            "bWUYBSABKAUSFAoMcmVsZWFzZV90aW1lGAYgASgFEhcKD2F0dGFja2FibGVf",
            "bWFzaxgHIAEoBRI3Cg5yYW5nZV9zZXR0aW5ncxgIIAEoCzIfLk1lbGFuZEdh",
            "bWUzLlNraWxsUmFuZ2VTZXR0aW5ncxItCgtlZmZlY3Rfc2VsZhgJIAMoCzIY",
            "Lk1lbGFuZEdhbWUzLlNraWxsRWZmZWN0Ei4KDGVmZmVjdF9lbmVteRgKIAMo",
            "CzIYLk1lbGFuZEdhbWUzLlNraWxsRWZmZWN0Ei0KCmJ1ZmZzX3NlbGYYCyAD",
            "KAsyGS5NZWxhbmRHYW1lMy5CdWZmU2V0dGluZ3MSLgoLYnVmZnNfZW5lbXkY",
            "DCADKAsyGS5NZWxhbmRHYW1lMy5CdWZmU2V0dGluZ3MSGQoRY2FuX2JyZWFr",
            "X3ByZXBhcmUYDSABKAgiYQoKRGFtYWdlRGF0YRIrCglkbWdfc3RhdGUYASAB",
            "KA4yGC5NZWxhbmRHYW1lMy5EYW1hZ2VTdGF0ZRITCgtjdXJyZW50X2ludBgC",
            "IAEoBRIRCglkZWx0YV9pbnQYAyABKAUidgoURGFtYWdlRWZmZWN0QmVhdEJh",
            "Y2sSLAoHY3VyX2xvYxgBIAEoCzIbLk1lbGFuZEdhbWUzLkVudGl0eUxvY2F0",
            "aW9uEjAKC2JhY2tfdG9fcG9zGAIgASgLMhsuTWVsYW5kR2FtZTMuRW50aXR5",
            "TG9jYXRpb24i9AEKDERhbWFnZUVmZmVjdBIvCgplZmZlY3RUeXBlGAEgASgO",
            "MhsuTWVsYW5kR2FtZTMuRGFtYWdlRWZmZWN0SWQSEgoKZXhwaXJlZF9hdBgC",
            "IAEoBRITCglpbnRfdmFsdWUYCiABKAVIABITCglzdHJfdmFsdWUYCyABKAlI",
            "ABI8Cg9iZWF0X2JhY2tfdmFsdWUYDCABKAsyIS5NZWxhbmRHYW1lMy5EYW1h",
            "Z2VFZmZlY3RCZWF0QmFja0gAEi8KDGRhbWFnZV92YWx1ZRgNIAEoCzIXLk1l",
            "bGFuZEdhbWUzLkRhbWFnZURhdGFIAEIGCgRkYXRhInIKDEVudGl0eURhbWFn",
            "ZRIlCgZlbnRpdHkYASABKAsyFS5NZWxhbmRHYW1lMy5FbnRpdHlJZBIQCghz",
            "a2lsbF9pZBgCIAEoBRIpCgZlZmZlY3QYAyADKAsyGS5NZWxhbmRHYW1lMy5E",
            "YW1hZ2VFZmZlY3QqaQoPU2tpbGxUYXJnZXRUeXBlEicKI1NraWxsVGFyZ2V0",
            "VHlwZV9Ta2lsbFRhcmdldFR5cGVGcmVlEAASLQopU2tpbGxUYXJnZXRUeXBl",
            "X1NraWxsVGFyZ2V0VHlwZVdpdGhUYXJnZXQQASqkAgoVU2tpbGxBdHRhY2tU",
            "YXJnZXRUeXBlEjYKMlNraWxsQXR0YWNrVGFyZ2V0VHlwZV9Ta2lsbEF0dGFj",
            "a1RhcmdldFR5cGVVbmtub3duEAASNgoyU2tpbGxBdHRhY2tUYXJnZXRUeXBl",
            "X1NraWxsQXR0YWNrVGFyZ2V0VHlwZU1vbnN0ZXIQARIyCi5Ta2lsbEF0dGFj",
            "a1RhcmdldFR5cGVfU2tpbGxBdHRhY2tUYXJnZXRUeXBlSG9lEAISMgouU2tp",
            "bGxBdHRhY2tUYXJnZXRUeXBlX1NraWxsQXR0YWNrVGFyZ2V0VHlwZUF4ZRAD",
            "EjMKL1NraWxsQXR0YWNrVGFyZ2V0VHlwZV9Ta2lsbEF0dGFja1RhcmdldFR5",
            "cGVIYW5kEAQqsgMKDlNraWxsUmFuZ2VUeXBlEigKJFNraWxsUmFuZ2VUeXBl",
            "X1NraWxsUmFuZ2VUeXBlVW5rbm93bhAAEiUKIVNraWxsUmFuZ2VUeXBlX1Nr",
            "aWxsUmFuZ2VUeXBlTGluZRABEicKI1NraWxsUmFuZ2VUeXBlX1NraWxsUmFu",
            "Z2VUeXBlQ2lyY2xlEAISKQolU2tpbGxSYW5nZVR5cGVfU2tpbGxSYW5nZVR5",
            "cGVTZWN0b3I2MBADEikKJVNraWxsUmFuZ2VUeXBlX1NraWxsUmFuZ2VUeXBl",
            "U2VjdG9yOTAQBBIqCiZTa2lsbFJhbmdlVHlwZV9Ta2lsbFJhbmdlVHlwZVNl",
            "Y3RvcjEyMBAFEioKJlNraWxsUmFuZ2VUeXBlX1NraWxsUmFuZ2VUeXBlU2Vj",
            "dG9yMTgwEAYSJQohU2tpbGxSYW5nZVR5cGVfU2tpbGxSYW5nZVR5cGVSZWN0",
            "EAcSJwojU2tpbGxSYW5nZVR5cGVfU2tpbGxSYW5nZVR5cGVTZWN0b3IQCBIo",
            "CiRTa2lsbFJhbmdlVHlwZV9Ta2lsbFJhbmdlVHlwZVJob21idXMQCSqAAgoP",
            "U2tpbGxFZmZlY3RUeXBlEiMKH1NraWxsRWZmZWN0VHlwZV9Ta2lsbEVmZmVj",
            "dE5vbmUQABImCiJTa2lsbEVmZmVjdFR5cGVfU2tpbGxFZmZlY3RBZGRidWZm",
            "EAESJQohU2tpbGxFZmZlY3RUeXBlX1NraWxsRWZmZWN0QXR0YWNrEAISJAog",
            "U2tpbGxFZmZlY3RUeXBlX1NraWxsRWZmZWN0QWRkSHAQAxIoCiRTa2lsbEVm",
            "ZmVjdFR5cGVfU2tpbGxFZmZlY3RBZGRIdW5ncnkQBBIpCiVTa2lsbEVmZmVj",
            "dFR5cGVfU2tpbGxFZmZlY3RBZGRUaGlyc3R5EAUqogMKDkRhbWFnZUVmZmVj",
            "dElkEigKJERhbWFnZUVmZmVjdElkX0RhbWFnZUVmZmVjdElkVW5rbm93bhAA",
            "EiYKIURhbWFnZUVmZmVjdElkX0RhbWFnZUVmZmVjdElkMTAwMRDpBxImCiFE",
            "YW1hZ2VFZmZlY3RJZF9EYW1hZ2VFZmZlY3RJZDEwMDIQ6gcSJgohRGFtYWdl",
            "RWZmZWN0SWRfRGFtYWdlRWZmZWN0SWQxMDAzEOsHEiYKIURhbWFnZUVmZmVj",
            "dElkX0RhbWFnZUVmZmVjdElkMTAwNBDsBxImCiFEYW1hZ2VFZmZlY3RJZF9E",
            "YW1hZ2VFZmZlY3RJZDEwMDUQ7QcSJgohRGFtYWdlRWZmZWN0SWRfRGFtYWdl",
            "RWZmZWN0SWQxMDA2EO4HEiYKIURhbWFnZUVmZmVjdElkX0RhbWFnZUVmZmVj",
            "dElkMTAwNxDvBxImCiFEYW1hZ2VFZmZlY3RJZF9EYW1hZ2VFZmZlY3RJZDEw",
            "MDgQ8AcSJgohRGFtYWdlRWZmZWN0SWRfRGFtYWdlRWZmZWN0SWQxMDA5EPEH",
            "KnIKC0RhbWFnZVN0YXRlEiEKHURhbWFnZVN0YXRlX0RhbWFnZVN0YXRlTm9y",
            "bWFsEAASHwobRGFtYWdlU3RhdGVfRGFtYWdlU3RhdGVDcml0EAESHwobRGFt",
            "YWdlU3RhdGVfRGFtYWdlU3RhdGVNaXNzEANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MelandGame3.BuffReflection.Descriptor, global::MelandGame3.ModelReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MelandGame3.SkillTargetType), typeof(global::MelandGame3.SkillAttackTargetType), typeof(global::MelandGame3.SkillRangeType), typeof(global::MelandGame3.SkillEffectType), typeof(global::MelandGame3.DamageEffectId), typeof(global::MelandGame3.DamageState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.SkillRangeSettings), global::MelandGame3.SkillRangeSettings.Parser, new[]{ "Type", "Args" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.SkillEffect), global::MelandGame3.SkillEffect.Parser, new[]{ "EffectType", "Args" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.SkillSettings), global::MelandGame3.SkillSettings.Parser, new[]{ "Id", "TargetType", "Distance", "AccmulationTime", "BeforeAttackRollTime", "ReleaseTime", "AttackableMask", "RangeSettings", "EffectSelf", "EffectEnemy", "BuffsSelf", "BuffsEnemy", "CanBreakPrepare" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.DamageData), global::MelandGame3.DamageData.Parser, new[]{ "DmgState", "CurrentInt", "DeltaInt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.DamageEffectBeatBack), global::MelandGame3.DamageEffectBeatBack.Parser, new[]{ "CurLoc", "BackToPos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.DamageEffect), global::MelandGame3.DamageEffect.Parser, new[]{ "EffectType", "ExpiredAt", "IntValue", "StrValue", "BeatBackValue", "DamageValue" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityDamage), global::MelandGame3.EntityDamage.Parser, new[]{ "Entity", "SkillId", "Effect" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 技能目标指向类型.
  /// </summary>
  public enum SkillTargetType {
    /// <summary>
    /// 无指向性技能
    ///
    /// 这种类型的技能释放的时候不需要指定一个目标，
    /// 只需要通过方向、攻击距离得出对应伤害目标.
    /// </summary>
    [pbr::OriginalName("SkillTargetType_SkillTargetTypeFree")] SkillTargetTypeFree = 0,
    /// <summary>
    /// 指向性技能
    ///
    /// 这种类型的技能释放需要指定一个目标.
    /// </summary>
    [pbr::OriginalName("SkillTargetType_SkillTargetTypeWithTarget")] SkillTargetTypeWithTarget = 1,
  }

  /// <summary>
  /// 技能攻击对象类型
  /// </summary>
  public enum SkillAttackTargetType {
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeUnknown")] SkillAttackTargetTypeUnknown = 0,
    /// <summary>
    /// 怪物类型
    /// </summary>
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeMonster")] SkillAttackTargetTypeMonster = 1,
    /// <summary>
    /// 锄头攻击类型
    /// </summary>
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeHoe")] SkillAttackTargetTypeHoe = 2,
    /// <summary>
    /// 斧头攻击类型
    /// </summary>
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeAxe")] SkillAttackTargetTypeAxe = 3,
    /// <summary>
    /// 空手攻击类型
    /// </summary>
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeHand")] SkillAttackTargetTypeHand = 4,
  }

  /// <summary>
  /// 技能生效范围类型
  /// </summary>
  public enum SkillRangeType {
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeUnknown")] SkillRangeTypeUnknown = 0,
    /// <summary>
    /// 直线区域
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeLine")] SkillRangeTypeLine = 1,
    /// <summary>
    /// 圆形区域
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeCircle")] SkillRangeTypeCircle = 2,
    /// <summary>
    /// 60 度扇型
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector60")] SkillRangeTypeSector60 = 3,
    /// <summary>
    /// 90 度扇型
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector90")] SkillRangeTypeSector90 = 4,
    /// <summary>
    /// 120 度扇型
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector120")] SkillRangeTypeSector120 = 5,
    /// <summary>
    /// 180 度扇型
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector180")] SkillRangeTypeSector180 = 6,
    /// <summary>
    /// 矩形区域
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeRect")] SkillRangeTypeRect = 7,
    /// <summary>
    /// 扇形(自定义张角0~360)
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector")] SkillRangeTypeSector = 8,
    /// <summary>
    /// 菱形区域
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeRhombus")] SkillRangeTypeRhombus = 9,
  }

  /// <summary>
  /// 技能效果类型
  /// </summary>
  public enum SkillEffectType {
    /// <summary>
    ///无效类型
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectNone")] SkillEffectNone = 0,
    /// <summary>
    /// 添加buff
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAddbuff")] SkillEffectAddbuff = 1,
    /// <summary>
    /// 普通攻击
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAttack")] SkillEffectAttack = 2,
    /// <summary>
    /// 加血
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAddHp")] SkillEffectAddHp = 3,
    /// <summary>
    /// 增加饥饿度(deprecated)
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAddHungry")] SkillEffectAddHungry = 4,
    /// <summary>
    /// 增加饥渴度(deprecated)
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAddThirsty")] SkillEffectAddThirsty = 5,
  }

  public enum DamageEffectId {
    [pbr::OriginalName("DamageEffectId_DamageEffectIdUnknown")] DamageEffectIdUnknown = 0,
    /// <summary>
    /// 普通攻击效果
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1001")] DamageEffectId1001 = 1001,
    /// <summary>
    /// 普通攻击效果（采集木头类）
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1002")] DamageEffectId1002 = 1002,
    /// <summary>
    /// 普通攻击效果（采集石头类）
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1003")] DamageEffectId1003 = 1003,
    /// <summary>
    /// 普通攻击效果（用手采集类）
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1004")] DamageEffectId1004 = 1004,
    /// <summary>
    /// 持续伤害效果
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1005")] DamageEffectId1005 = 1005,
    /// <summary>
    /// 持续加血效果
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1006")] DamageEffectId1006 = 1006,
    /// <summary>
    /// 一次性加血效果
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1007")] DamageEffectId1007 = 1007,
    /// <summary>
    /// 减速效果
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1008")] DamageEffectId1008 = 1008,
    /// <summary>
    /// 击退效果
    /// </summary>
    [pbr::OriginalName("DamageEffectId_DamageEffectId1009")] DamageEffectId1009 = 1009,
  }

  public enum DamageState {
    /// <summary>
    /// 普通伤害
    /// </summary>
    [pbr::OriginalName("DamageState_DamageStateNormal")] DamageStateNormal = 0,
    /// <summary>
    /// 暴击伤害
    /// </summary>
    [pbr::OriginalName("DamageState_DamageStateCrit")] DamageStateCrit = 1,
    /// <summary>
    /// 未命中
    /// </summary>
    [pbr::OriginalName("DamageState_DamageStateMiss")] DamageStateMiss = 3,
  }

  #endregion

  #region Messages
  public sealed partial class SkillRangeSettings : pb::IMessage<SkillRangeSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillRangeSettings> _parser = new pb::MessageParser<SkillRangeSettings>(() => new SkillRangeSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillRangeSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.SkillReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillRangeSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillRangeSettings(SkillRangeSettings other) : this() {
      type_ = other.type_;
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillRangeSettings Clone() {
      return new SkillRangeSettings(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::MelandGame3.SkillRangeType type_ = global::MelandGame3.SkillRangeType.SkillRangeTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.SkillRangeType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_args_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> args_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillRangeSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillRangeSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::MelandGame3.SkillRangeType.SkillRangeTypeUnknown) hash ^= Type.GetHashCode();
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::MelandGame3.SkillRangeType.SkillRangeTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::MelandGame3.SkillRangeType.SkillRangeTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      args_.WriteTo(ref output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::MelandGame3.SkillRangeType.SkillRangeTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillRangeSettings other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::MelandGame3.SkillRangeType.SkillRangeTypeUnknown) {
        Type = other.Type;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::MelandGame3.SkillRangeType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::MelandGame3.SkillRangeType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            args_.AddEntriesFrom(ref input, _repeated_args_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 技能攻击效果
  /// </summary>
  public sealed partial class SkillEffect : pb::IMessage<SkillEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillEffect> _parser = new pb::MessageParser<SkillEffect>(() => new SkillEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.SkillReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillEffect(SkillEffect other) : this() {
      effectType_ = other.effectType_;
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillEffect Clone() {
      return new SkillEffect(this);
    }

    /// <summary>Field number for the "effect_type" field.</summary>
    public const int EffectTypeFieldNumber = 1;
    private global::MelandGame3.SkillEffectType effectType_ = global::MelandGame3.SkillEffectType.SkillEffectNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.SkillEffectType EffectType {
      get { return effectType_; }
      set {
        effectType_ = value;
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_args_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> args_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectType != other.EffectType) return false;
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectType != global::MelandGame3.SkillEffectType.SkillEffectNone) hash ^= EffectType.GetHashCode();
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EffectType != global::MelandGame3.SkillEffectType.SkillEffectNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EffectType);
      }
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EffectType != global::MelandGame3.SkillEffectType.SkillEffectNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EffectType);
      }
      args_.WriteTo(ref output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EffectType != global::MelandGame3.SkillEffectType.SkillEffectNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectType);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillEffect other) {
      if (other == null) {
        return;
      }
      if (other.EffectType != global::MelandGame3.SkillEffectType.SkillEffectNone) {
        EffectType = other.EffectType;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectType = (global::MelandGame3.SkillEffectType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EffectType = (global::MelandGame3.SkillEffectType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            args_.AddEntriesFrom(ref input, _repeated_args_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 技能设置.
  /// </summary>
  public sealed partial class SkillSettings : pb::IMessage<SkillSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillSettings> _parser = new pb::MessageParser<SkillSettings>(() => new SkillSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.SkillReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillSettings(SkillSettings other) : this() {
      id_ = other.id_;
      targetType_ = other.targetType_;
      distance_ = other.distance_;
      accmulationTime_ = other.accmulationTime_;
      beforeAttackRollTime_ = other.beforeAttackRollTime_;
      releaseTime_ = other.releaseTime_;
      attackableMask_ = other.attackableMask_;
      rangeSettings_ = other.rangeSettings_ != null ? other.rangeSettings_.Clone() : null;
      effectSelf_ = other.effectSelf_.Clone();
      effectEnemy_ = other.effectEnemy_.Clone();
      buffsSelf_ = other.buffsSelf_.Clone();
      buffsEnemy_ = other.buffsEnemy_.Clone();
      canBreakPrepare_ = other.canBreakPrepare_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillSettings Clone() {
      return new SkillSettings(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 2;
    private global::MelandGame3.SkillTargetType targetType_ = global::MelandGame3.SkillTargetType.SkillTargetTypeFree;
    /// <summary>
    /// 技能指向类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.SkillTargetType TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 3;
    private int distance_;
    /// <summary>
    /// 技能释放像素距离
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "accmulation_time" field.</summary>
    public const int AccmulationTimeFieldNumber = 4;
    private int accmulationTime_;
    /// <summary>
    /// 技能时间设定
    ///
    /// |&lt;---- 蓄力 ---->|&lt;--- 前摇 --->|&lt;--- 释放 --->|
    /// |&lt;-------------- 技能释放时间 ---------------->|
    /// 技能蓄力时间 (ms)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AccmulationTime {
      get { return accmulationTime_; }
      set {
        accmulationTime_ = value;
      }
    }

    /// <summary>Field number for the "before_attack_roll_time" field.</summary>
    public const int BeforeAttackRollTimeFieldNumber = 5;
    private int beforeAttackRollTime_;
    /// <summary>
    /// 技能前摇时间 (ms)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BeforeAttackRollTime {
      get { return beforeAttackRollTime_; }
      set {
        beforeAttackRollTime_ = value;
      }
    }

    /// <summary>Field number for the "release_time" field.</summary>
    public const int ReleaseTimeFieldNumber = 6;
    private int releaseTime_;
    /// <summary>
    /// 技能释放时间 (ms)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReleaseTime {
      get { return releaseTime_; }
      set {
        releaseTime_ = value;
      }
    }

    /// <summary>Field number for the "attackable_mask" field.</summary>
    public const int AttackableMaskFieldNumber = 7;
    private int attackableMask_;
    /// <summary>
    /// 技能攻击目标类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackableMask {
      get { return attackableMask_; }
      set {
        attackableMask_ = value;
      }
    }

    /// <summary>Field number for the "range_settings" field.</summary>
    public const int RangeSettingsFieldNumber = 8;
    private global::MelandGame3.SkillRangeSettings rangeSettings_;
    /// <summary>
    /// 技能生效范围
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.SkillRangeSettings RangeSettings {
      get { return rangeSettings_; }
      set {
        rangeSettings_ = value;
      }
    }

    /// <summary>Field number for the "effect_self" field.</summary>
    public const int EffectSelfFieldNumber = 9;
    private static readonly pb::FieldCodec<global::MelandGame3.SkillEffect> _repeated_effectSelf_codec
        = pb::FieldCodec.ForMessage(74, global::MelandGame3.SkillEffect.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.SkillEffect> effectSelf_ = new pbc::RepeatedField<global::MelandGame3.SkillEffect>();
    /// <summary>
    /// 作用于自身的技能效果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.SkillEffect> EffectSelf {
      get { return effectSelf_; }
    }

    /// <summary>Field number for the "effect_enemy" field.</summary>
    public const int EffectEnemyFieldNumber = 10;
    private static readonly pb::FieldCodec<global::MelandGame3.SkillEffect> _repeated_effectEnemy_codec
        = pb::FieldCodec.ForMessage(82, global::MelandGame3.SkillEffect.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.SkillEffect> effectEnemy_ = new pbc::RepeatedField<global::MelandGame3.SkillEffect>();
    /// <summary>
    /// 作用于敌方的技能效果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.SkillEffect> EffectEnemy {
      get { return effectEnemy_; }
    }

    /// <summary>Field number for the "buffs_self" field.</summary>
    public const int BuffsSelfFieldNumber = 11;
    private static readonly pb::FieldCodec<global::MelandGame3.BuffSettings> _repeated_buffsSelf_codec
        = pb::FieldCodec.ForMessage(90, global::MelandGame3.BuffSettings.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.BuffSettings> buffsSelf_ = new pbc::RepeatedField<global::MelandGame3.BuffSettings>();
    /// <summary>
    /// 作用于自身的buff列表(加载数据时动态生成)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.BuffSettings> BuffsSelf {
      get { return buffsSelf_; }
    }

    /// <summary>Field number for the "buffs_enemy" field.</summary>
    public const int BuffsEnemyFieldNumber = 12;
    private static readonly pb::FieldCodec<global::MelandGame3.BuffSettings> _repeated_buffsEnemy_codec
        = pb::FieldCodec.ForMessage(98, global::MelandGame3.BuffSettings.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.BuffSettings> buffsEnemy_ = new pbc::RepeatedField<global::MelandGame3.BuffSettings>();
    /// <summary>
    /// 作用于敌方的buff列表(加载数据时动态生成)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.BuffSettings> BuffsEnemy {
      get { return buffsEnemy_; }
    }

    /// <summary>Field number for the "can_break_prepare" field.</summary>
    public const int CanBreakPrepareFieldNumber = 13;
    private bool canBreakPrepare_;
    /// <summary>
    /// 蓄力能否被打断
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanBreakPrepare {
      get { return canBreakPrepare_; }
      set {
        canBreakPrepare_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TargetType != other.TargetType) return false;
      if (Distance != other.Distance) return false;
      if (AccmulationTime != other.AccmulationTime) return false;
      if (BeforeAttackRollTime != other.BeforeAttackRollTime) return false;
      if (ReleaseTime != other.ReleaseTime) return false;
      if (AttackableMask != other.AttackableMask) return false;
      if (!object.Equals(RangeSettings, other.RangeSettings)) return false;
      if(!effectSelf_.Equals(other.effectSelf_)) return false;
      if(!effectEnemy_.Equals(other.effectEnemy_)) return false;
      if(!buffsSelf_.Equals(other.buffsSelf_)) return false;
      if(!buffsEnemy_.Equals(other.buffsEnemy_)) return false;
      if (CanBreakPrepare != other.CanBreakPrepare) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TargetType != global::MelandGame3.SkillTargetType.SkillTargetTypeFree) hash ^= TargetType.GetHashCode();
      if (Distance != 0) hash ^= Distance.GetHashCode();
      if (AccmulationTime != 0) hash ^= AccmulationTime.GetHashCode();
      if (BeforeAttackRollTime != 0) hash ^= BeforeAttackRollTime.GetHashCode();
      if (ReleaseTime != 0) hash ^= ReleaseTime.GetHashCode();
      if (AttackableMask != 0) hash ^= AttackableMask.GetHashCode();
      if (rangeSettings_ != null) hash ^= RangeSettings.GetHashCode();
      hash ^= effectSelf_.GetHashCode();
      hash ^= effectEnemy_.GetHashCode();
      hash ^= buffsSelf_.GetHashCode();
      hash ^= buffsEnemy_.GetHashCode();
      if (CanBreakPrepare != false) hash ^= CanBreakPrepare.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TargetType != global::MelandGame3.SkillTargetType.SkillTargetTypeFree) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TargetType);
      }
      if (Distance != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Distance);
      }
      if (AccmulationTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AccmulationTime);
      }
      if (BeforeAttackRollTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BeforeAttackRollTime);
      }
      if (ReleaseTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ReleaseTime);
      }
      if (AttackableMask != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AttackableMask);
      }
      if (rangeSettings_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RangeSettings);
      }
      effectSelf_.WriteTo(output, _repeated_effectSelf_codec);
      effectEnemy_.WriteTo(output, _repeated_effectEnemy_codec);
      buffsSelf_.WriteTo(output, _repeated_buffsSelf_codec);
      buffsEnemy_.WriteTo(output, _repeated_buffsEnemy_codec);
      if (CanBreakPrepare != false) {
        output.WriteRawTag(104);
        output.WriteBool(CanBreakPrepare);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TargetType != global::MelandGame3.SkillTargetType.SkillTargetTypeFree) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TargetType);
      }
      if (Distance != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Distance);
      }
      if (AccmulationTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AccmulationTime);
      }
      if (BeforeAttackRollTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BeforeAttackRollTime);
      }
      if (ReleaseTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ReleaseTime);
      }
      if (AttackableMask != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AttackableMask);
      }
      if (rangeSettings_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RangeSettings);
      }
      effectSelf_.WriteTo(ref output, _repeated_effectSelf_codec);
      effectEnemy_.WriteTo(ref output, _repeated_effectEnemy_codec);
      buffsSelf_.WriteTo(ref output, _repeated_buffsSelf_codec);
      buffsEnemy_.WriteTo(ref output, _repeated_buffsEnemy_codec);
      if (CanBreakPrepare != false) {
        output.WriteRawTag(104);
        output.WriteBool(CanBreakPrepare);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TargetType != global::MelandGame3.SkillTargetType.SkillTargetTypeFree) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TargetType);
      }
      if (Distance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Distance);
      }
      if (AccmulationTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccmulationTime);
      }
      if (BeforeAttackRollTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeforeAttackRollTime);
      }
      if (ReleaseTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReleaseTime);
      }
      if (AttackableMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackableMask);
      }
      if (rangeSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangeSettings);
      }
      size += effectSelf_.CalculateSize(_repeated_effectSelf_codec);
      size += effectEnemy_.CalculateSize(_repeated_effectEnemy_codec);
      size += buffsSelf_.CalculateSize(_repeated_buffsSelf_codec);
      size += buffsEnemy_.CalculateSize(_repeated_buffsEnemy_codec);
      if (CanBreakPrepare != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillSettings other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TargetType != global::MelandGame3.SkillTargetType.SkillTargetTypeFree) {
        TargetType = other.TargetType;
      }
      if (other.Distance != 0) {
        Distance = other.Distance;
      }
      if (other.AccmulationTime != 0) {
        AccmulationTime = other.AccmulationTime;
      }
      if (other.BeforeAttackRollTime != 0) {
        BeforeAttackRollTime = other.BeforeAttackRollTime;
      }
      if (other.ReleaseTime != 0) {
        ReleaseTime = other.ReleaseTime;
      }
      if (other.AttackableMask != 0) {
        AttackableMask = other.AttackableMask;
      }
      if (other.rangeSettings_ != null) {
        if (rangeSettings_ == null) {
          RangeSettings = new global::MelandGame3.SkillRangeSettings();
        }
        RangeSettings.MergeFrom(other.RangeSettings);
      }
      effectSelf_.Add(other.effectSelf_);
      effectEnemy_.Add(other.effectEnemy_);
      buffsSelf_.Add(other.buffsSelf_);
      buffsEnemy_.Add(other.buffsEnemy_);
      if (other.CanBreakPrepare != false) {
        CanBreakPrepare = other.CanBreakPrepare;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TargetType = (global::MelandGame3.SkillTargetType) input.ReadEnum();
            break;
          }
          case 24: {
            Distance = input.ReadInt32();
            break;
          }
          case 32: {
            AccmulationTime = input.ReadInt32();
            break;
          }
          case 40: {
            BeforeAttackRollTime = input.ReadInt32();
            break;
          }
          case 48: {
            ReleaseTime = input.ReadInt32();
            break;
          }
          case 56: {
            AttackableMask = input.ReadInt32();
            break;
          }
          case 66: {
            if (rangeSettings_ == null) {
              RangeSettings = new global::MelandGame3.SkillRangeSettings();
            }
            input.ReadMessage(RangeSettings);
            break;
          }
          case 74: {
            effectSelf_.AddEntriesFrom(input, _repeated_effectSelf_codec);
            break;
          }
          case 82: {
            effectEnemy_.AddEntriesFrom(input, _repeated_effectEnemy_codec);
            break;
          }
          case 90: {
            buffsSelf_.AddEntriesFrom(input, _repeated_buffsSelf_codec);
            break;
          }
          case 98: {
            buffsEnemy_.AddEntriesFrom(input, _repeated_buffsEnemy_codec);
            break;
          }
          case 104: {
            CanBreakPrepare = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TargetType = (global::MelandGame3.SkillTargetType) input.ReadEnum();
            break;
          }
          case 24: {
            Distance = input.ReadInt32();
            break;
          }
          case 32: {
            AccmulationTime = input.ReadInt32();
            break;
          }
          case 40: {
            BeforeAttackRollTime = input.ReadInt32();
            break;
          }
          case 48: {
            ReleaseTime = input.ReadInt32();
            break;
          }
          case 56: {
            AttackableMask = input.ReadInt32();
            break;
          }
          case 66: {
            if (rangeSettings_ == null) {
              RangeSettings = new global::MelandGame3.SkillRangeSettings();
            }
            input.ReadMessage(RangeSettings);
            break;
          }
          case 74: {
            effectSelf_.AddEntriesFrom(ref input, _repeated_effectSelf_codec);
            break;
          }
          case 82: {
            effectEnemy_.AddEntriesFrom(ref input, _repeated_effectEnemy_codec);
            break;
          }
          case 90: {
            buffsSelf_.AddEntriesFrom(ref input, _repeated_buffsSelf_codec);
            break;
          }
          case 98: {
            buffsEnemy_.AddEntriesFrom(ref input, _repeated_buffsEnemy_codec);
            break;
          }
          case 104: {
            CanBreakPrepare = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DamageData : pb::IMessage<DamageData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DamageData> _parser = new pb::MessageParser<DamageData>(() => new DamageData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DamageData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.SkillReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageData(DamageData other) : this() {
      dmgState_ = other.dmgState_;
      currentInt_ = other.currentInt_;
      deltaInt_ = other.deltaInt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageData Clone() {
      return new DamageData(this);
    }

    /// <summary>Field number for the "dmg_state" field.</summary>
    public const int DmgStateFieldNumber = 1;
    private global::MelandGame3.DamageState dmgState_ = global::MelandGame3.DamageState.DamageStateNormal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.DamageState DmgState {
      get { return dmgState_; }
      set {
        dmgState_ = value;
      }
    }

    /// <summary>Field number for the "current_int" field.</summary>
    public const int CurrentIntFieldNumber = 2;
    private int currentInt_;
    /// <summary>
    /// 当前数值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentInt {
      get { return currentInt_; }
      set {
        currentInt_ = value;
      }
    }

    /// <summary>Field number for the "delta_int" field.</summary>
    public const int DeltaIntFieldNumber = 3;
    private int deltaInt_;
    /// <summary>
    /// 变更数值 delta = current - 原来 (&lt;0为伤害, >0回血)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DeltaInt {
      get { return deltaInt_; }
      set {
        deltaInt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DamageData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DamageData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DmgState != other.DmgState) return false;
      if (CurrentInt != other.CurrentInt) return false;
      if (DeltaInt != other.DeltaInt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DmgState != global::MelandGame3.DamageState.DamageStateNormal) hash ^= DmgState.GetHashCode();
      if (CurrentInt != 0) hash ^= CurrentInt.GetHashCode();
      if (DeltaInt != 0) hash ^= DeltaInt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DmgState != global::MelandGame3.DamageState.DamageStateNormal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DmgState);
      }
      if (CurrentInt != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentInt);
      }
      if (DeltaInt != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DeltaInt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DmgState != global::MelandGame3.DamageState.DamageStateNormal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DmgState);
      }
      if (CurrentInt != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentInt);
      }
      if (DeltaInt != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DeltaInt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DmgState != global::MelandGame3.DamageState.DamageStateNormal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DmgState);
      }
      if (CurrentInt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentInt);
      }
      if (DeltaInt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeltaInt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DamageData other) {
      if (other == null) {
        return;
      }
      if (other.DmgState != global::MelandGame3.DamageState.DamageStateNormal) {
        DmgState = other.DmgState;
      }
      if (other.CurrentInt != 0) {
        CurrentInt = other.CurrentInt;
      }
      if (other.DeltaInt != 0) {
        DeltaInt = other.DeltaInt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DmgState = (global::MelandGame3.DamageState) input.ReadEnum();
            break;
          }
          case 16: {
            CurrentInt = input.ReadInt32();
            break;
          }
          case 24: {
            DeltaInt = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DmgState = (global::MelandGame3.DamageState) input.ReadEnum();
            break;
          }
          case 16: {
            CurrentInt = input.ReadInt32();
            break;
          }
          case 24: {
            DeltaInt = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DamageEffectBeatBack : pb::IMessage<DamageEffectBeatBack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DamageEffectBeatBack> _parser = new pb::MessageParser<DamageEffectBeatBack>(() => new DamageEffectBeatBack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DamageEffectBeatBack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.SkillReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageEffectBeatBack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageEffectBeatBack(DamageEffectBeatBack other) : this() {
      curLoc_ = other.curLoc_ != null ? other.curLoc_.Clone() : null;
      backToPos_ = other.backToPos_ != null ? other.backToPos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageEffectBeatBack Clone() {
      return new DamageEffectBeatBack(this);
    }

    /// <summary>Field number for the "cur_loc" field.</summary>
    public const int CurLocFieldNumber = 1;
    private global::MelandGame3.EntityLocation curLoc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation CurLoc {
      get { return curLoc_; }
      set {
        curLoc_ = value;
      }
    }

    /// <summary>Field number for the "back_to_pos" field.</summary>
    public const int BackToPosFieldNumber = 2;
    private global::MelandGame3.EntityLocation backToPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation BackToPos {
      get { return backToPos_; }
      set {
        backToPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DamageEffectBeatBack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DamageEffectBeatBack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurLoc, other.CurLoc)) return false;
      if (!object.Equals(BackToPos, other.BackToPos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (curLoc_ != null) hash ^= CurLoc.GetHashCode();
      if (backToPos_ != null) hash ^= BackToPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (curLoc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurLoc);
      }
      if (backToPos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BackToPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (curLoc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurLoc);
      }
      if (backToPos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BackToPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (curLoc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurLoc);
      }
      if (backToPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackToPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DamageEffectBeatBack other) {
      if (other == null) {
        return;
      }
      if (other.curLoc_ != null) {
        if (curLoc_ == null) {
          CurLoc = new global::MelandGame3.EntityLocation();
        }
        CurLoc.MergeFrom(other.CurLoc);
      }
      if (other.backToPos_ != null) {
        if (backToPos_ == null) {
          BackToPos = new global::MelandGame3.EntityLocation();
        }
        BackToPos.MergeFrom(other.BackToPos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (curLoc_ == null) {
              CurLoc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(CurLoc);
            break;
          }
          case 18: {
            if (backToPos_ == null) {
              BackToPos = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(BackToPos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (curLoc_ == null) {
              CurLoc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(CurLoc);
            break;
          }
          case 18: {
            if (backToPos_ == null) {
              BackToPos = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(BackToPos);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DamageEffect : pb::IMessage<DamageEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DamageEffect> _parser = new pb::MessageParser<DamageEffect>(() => new DamageEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DamageEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.SkillReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageEffect(DamageEffect other) : this() {
      effectType_ = other.effectType_;
      expiredAt_ = other.expiredAt_;
      switch (other.DataCase) {
        case DataOneofCase.IntValue:
          IntValue = other.IntValue;
          break;
        case DataOneofCase.StrValue:
          StrValue = other.StrValue;
          break;
        case DataOneofCase.BeatBackValue:
          BeatBackValue = other.BeatBackValue.Clone();
          break;
        case DataOneofCase.DamageValue:
          DamageValue = other.DamageValue.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DamageEffect Clone() {
      return new DamageEffect(this);
    }

    /// <summary>Field number for the "effectType" field.</summary>
    public const int EffectTypeFieldNumber = 1;
    private global::MelandGame3.DamageEffectId effectType_ = global::MelandGame3.DamageEffectId.DamageEffectIdUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.DamageEffectId EffectType {
      get { return effectType_; }
      set {
        effectType_ = value;
      }
    }

    /// <summary>Field number for the "expired_at" field.</summary>
    public const int ExpiredAtFieldNumber = 2;
    private int expiredAt_;
    /// <summary>
    /// 效果过期时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpiredAt {
      get { return expiredAt_; }
      set {
        expiredAt_ = value;
      }
    }

    /// <summary>Field number for the "int_value" field.</summary>
    public const int IntValueFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IntValue {
      get { return dataCase_ == DataOneofCase.IntValue ? (int) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.IntValue;
      }
    }

    /// <summary>Field number for the "str_value" field.</summary>
    public const int StrValueFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StrValue {
      get { return dataCase_ == DataOneofCase.StrValue ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.StrValue;
      }
    }

    /// <summary>Field number for the "beat_back_value" field.</summary>
    public const int BeatBackValueFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.DamageEffectBeatBack BeatBackValue {
      get { return dataCase_ == DataOneofCase.BeatBackValue ? (global::MelandGame3.DamageEffectBeatBack) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.BeatBackValue;
      }
    }

    /// <summary>Field number for the "damage_value" field.</summary>
    public const int DamageValueFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.DamageData DamageValue {
      get { return dataCase_ == DataOneofCase.DamageValue ? (global::MelandGame3.DamageData) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.DamageValue;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      IntValue = 10,
      StrValue = 11,
      BeatBackValue = 12,
      DamageValue = 13,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DamageEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DamageEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectType != other.EffectType) return false;
      if (ExpiredAt != other.ExpiredAt) return false;
      if (IntValue != other.IntValue) return false;
      if (StrValue != other.StrValue) return false;
      if (!object.Equals(BeatBackValue, other.BeatBackValue)) return false;
      if (!object.Equals(DamageValue, other.DamageValue)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectType != global::MelandGame3.DamageEffectId.DamageEffectIdUnknown) hash ^= EffectType.GetHashCode();
      if (ExpiredAt != 0) hash ^= ExpiredAt.GetHashCode();
      if (dataCase_ == DataOneofCase.IntValue) hash ^= IntValue.GetHashCode();
      if (dataCase_ == DataOneofCase.StrValue) hash ^= StrValue.GetHashCode();
      if (dataCase_ == DataOneofCase.BeatBackValue) hash ^= BeatBackValue.GetHashCode();
      if (dataCase_ == DataOneofCase.DamageValue) hash ^= DamageValue.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EffectType != global::MelandGame3.DamageEffectId.DamageEffectIdUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EffectType);
      }
      if (ExpiredAt != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpiredAt);
      }
      if (dataCase_ == DataOneofCase.IntValue) {
        output.WriteRawTag(80);
        output.WriteInt32(IntValue);
      }
      if (dataCase_ == DataOneofCase.StrValue) {
        output.WriteRawTag(90);
        output.WriteString(StrValue);
      }
      if (dataCase_ == DataOneofCase.BeatBackValue) {
        output.WriteRawTag(98);
        output.WriteMessage(BeatBackValue);
      }
      if (dataCase_ == DataOneofCase.DamageValue) {
        output.WriteRawTag(106);
        output.WriteMessage(DamageValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EffectType != global::MelandGame3.DamageEffectId.DamageEffectIdUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EffectType);
      }
      if (ExpiredAt != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpiredAt);
      }
      if (dataCase_ == DataOneofCase.IntValue) {
        output.WriteRawTag(80);
        output.WriteInt32(IntValue);
      }
      if (dataCase_ == DataOneofCase.StrValue) {
        output.WriteRawTag(90);
        output.WriteString(StrValue);
      }
      if (dataCase_ == DataOneofCase.BeatBackValue) {
        output.WriteRawTag(98);
        output.WriteMessage(BeatBackValue);
      }
      if (dataCase_ == DataOneofCase.DamageValue) {
        output.WriteRawTag(106);
        output.WriteMessage(DamageValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EffectType != global::MelandGame3.DamageEffectId.DamageEffectIdUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectType);
      }
      if (ExpiredAt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpiredAt);
      }
      if (dataCase_ == DataOneofCase.IntValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntValue);
      }
      if (dataCase_ == DataOneofCase.StrValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrValue);
      }
      if (dataCase_ == DataOneofCase.BeatBackValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BeatBackValue);
      }
      if (dataCase_ == DataOneofCase.DamageValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DamageValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DamageEffect other) {
      if (other == null) {
        return;
      }
      if (other.EffectType != global::MelandGame3.DamageEffectId.DamageEffectIdUnknown) {
        EffectType = other.EffectType;
      }
      if (other.ExpiredAt != 0) {
        ExpiredAt = other.ExpiredAt;
      }
      switch (other.DataCase) {
        case DataOneofCase.IntValue:
          IntValue = other.IntValue;
          break;
        case DataOneofCase.StrValue:
          StrValue = other.StrValue;
          break;
        case DataOneofCase.BeatBackValue:
          if (BeatBackValue == null) {
            BeatBackValue = new global::MelandGame3.DamageEffectBeatBack();
          }
          BeatBackValue.MergeFrom(other.BeatBackValue);
          break;
        case DataOneofCase.DamageValue:
          if (DamageValue == null) {
            DamageValue = new global::MelandGame3.DamageData();
          }
          DamageValue.MergeFrom(other.DamageValue);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectType = (global::MelandGame3.DamageEffectId) input.ReadEnum();
            break;
          }
          case 16: {
            ExpiredAt = input.ReadInt32();
            break;
          }
          case 80: {
            IntValue = input.ReadInt32();
            break;
          }
          case 90: {
            StrValue = input.ReadString();
            break;
          }
          case 98: {
            global::MelandGame3.DamageEffectBeatBack subBuilder = new global::MelandGame3.DamageEffectBeatBack();
            if (dataCase_ == DataOneofCase.BeatBackValue) {
              subBuilder.MergeFrom(BeatBackValue);
            }
            input.ReadMessage(subBuilder);
            BeatBackValue = subBuilder;
            break;
          }
          case 106: {
            global::MelandGame3.DamageData subBuilder = new global::MelandGame3.DamageData();
            if (dataCase_ == DataOneofCase.DamageValue) {
              subBuilder.MergeFrom(DamageValue);
            }
            input.ReadMessage(subBuilder);
            DamageValue = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EffectType = (global::MelandGame3.DamageEffectId) input.ReadEnum();
            break;
          }
          case 16: {
            ExpiredAt = input.ReadInt32();
            break;
          }
          case 80: {
            IntValue = input.ReadInt32();
            break;
          }
          case 90: {
            StrValue = input.ReadString();
            break;
          }
          case 98: {
            global::MelandGame3.DamageEffectBeatBack subBuilder = new global::MelandGame3.DamageEffectBeatBack();
            if (dataCase_ == DataOneofCase.BeatBackValue) {
              subBuilder.MergeFrom(BeatBackValue);
            }
            input.ReadMessage(subBuilder);
            BeatBackValue = subBuilder;
            break;
          }
          case 106: {
            global::MelandGame3.DamageData subBuilder = new global::MelandGame3.DamageData();
            if (dataCase_ == DataOneofCase.DamageValue) {
              subBuilder.MergeFrom(DamageValue);
            }
            input.ReadMessage(subBuilder);
            DamageValue = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityDamage : pb::IMessage<EntityDamage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityDamage> _parser = new pb::MessageParser<EntityDamage>(() => new EntityDamage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityDamage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.SkillReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityDamage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityDamage(EntityDamage other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      skillId_ = other.skillId_;
      effect_ = other.effect_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityDamage Clone() {
      return new EntityDamage(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::MelandGame3.EntityId entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 2;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "effect" field.</summary>
    public const int EffectFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MelandGame3.DamageEffect> _repeated_effect_codec
        = pb::FieldCodec.ForMessage(26, global::MelandGame3.DamageEffect.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.DamageEffect> effect_ = new pbc::RepeatedField<global::MelandGame3.DamageEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.DamageEffect> Effect {
      get { return effect_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityDamage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityDamage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if (SkillId != other.SkillId) return false;
      if(!effect_.Equals(other.effect_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      hash ^= effect_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (SkillId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillId);
      }
      effect_.WriteTo(output, _repeated_effect_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (SkillId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillId);
      }
      effect_.WriteTo(ref output, _repeated_effect_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      size += effect_.CalculateSize(_repeated_effect_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityDamage other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::MelandGame3.EntityId();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      effect_.Add(other.effect_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 16: {
            SkillId = input.ReadInt32();
            break;
          }
          case 26: {
            effect_.AddEntriesFrom(input, _repeated_effect_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 16: {
            SkillId = input.ReadInt32();
            break;
          }
          case 26: {
            effect_.AddEntriesFrom(ref input, _repeated_effect_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
