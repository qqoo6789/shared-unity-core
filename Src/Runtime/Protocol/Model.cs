// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: model.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MelandGame3 {

  /// <summary>Holder for reflection information generated from model.proto</summary>
  public static partial class ModelReflection {

    #region Descriptor
    /// <summary>File descriptor for model.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgttb2RlbC5wcm90bxILTWVsYW5kR2FtZTMaCWFzdC5wcm90bxoaZW50aXR5",
            "X3Byb2ZpbGVfZmllbGQucHJvdG8aEHR5cGVEZWZpbmUucHJvdG8aDHdpZGdl",
            "dC5wcm90bxoJbWFwLnByb3RvGgthdWRpby5wcm90bxoPYmlnX3dvcmxkLnBy",
            "b3RvGgppdGVtLnByb3RvGgpidWZmLnByb3RvGgx2ZWN0b3IucHJvdG8itgEK",
            "E1BiQmVsbENsYXNzVXNlckluZm8SDwoHSGFzaF9pZBgBIAEoCRIOCgZVc2Vy",
            "SWQYAiABKAUSEAoIVXNlcm5hbWUYAyABKAkSEQoJUmVhbF9uYW1lGAQgASgJ",
            "EhAKCFVzZXJUeXBlGAUgASgJEhAKCE5pY2tuYW1lGAYgASgJEhAKCEdvbGRf",
            "bnVtGAcgASgJEhAKCENvZGVfbnVtGAggASgJEhEKCVVzZXJJZFN0chgJIAEo",
            "CSJBCgtBY2NvdW50SW5mbxIMCgRkYXRhGAEgASgJEhEKCWRhdGFfaGFzaBgC",
            "IAEoCRIRCgl0aW1lc3RhbXAYAyABKAkiOQoGU3R1ZmZzEgsKA2NpZBgBIAEo",
            "BRIQCghxdWFudGl0eRgCIAEoBRIQCghyYW5kQXR0chgDIAEoCCKEAQoMUm9s",
            "ZVNldHRpbmdzEgoKAmlkGAEgASgFEgsKA3NleBgCIAEoBRIVCg1kZWZhdWx0",
            "X3NraWxsGAMgASgFEhUKDWNvbGxlY3Rfc2tpbGwYBCABKAUSFgoOb3Blbl9i",
            "b3hfc2tpbGwYBSABKAUSFQoNYm9keV9jYXBhY2l0eRgGIAEoBSJBCgZSY1Jl",
            "Y3QSIQoCdXAYASABKAsyFS5NZWxhbmRHYW1lMy5WZWN0b3JYWRIJCgF3GAIg",
            "ASgFEgkKAWgYAyABKAUiQwoORW50aXR5TG9jYXRpb24SDgoGbWFwX2lkGAEg",
            "ASgFEiEKA2xvYxgCIAEoCzIULk1lbGFuZEdhbWUzLlZlY3RvcjMiUwoNUGxh",
            "eWVyTG9jSW5mbxIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEigKA2xvYxgD",
            "IAEoCzIbLk1lbGFuZEdhbWUzLkVudGl0eUxvY2F0aW9uIk4KDkVudGl0eU1v",
            "dmVTdGVwEi0KCGxvY2F0aW9uGAEgASgLMhsuTWVsYW5kR2FtZTMuRW50aXR5",
            "TG9jYXRpb24SDQoFc3RhbXAYAiABKAMihAIKDkVudGl0eU1vdmVtZW50EiwK",
            "C2VudGl0eV90eXBlGAEgASgOMhcuTWVsYW5kR2FtZTMuRW50aXR5VHlwZRIR",
            "CgllbnRpdHlfaWQYAiABKAkSMQoMY3VyX2xvY2F0aW9uGAMgASgLMhsuTWVs",
            "YW5kR2FtZTMuRW50aXR5TW92ZVN0ZXASMgoNZGVzdF9sb2NhdGlvbhgEIAEo",
            "CzIbLk1lbGFuZEdhbWUzLkVudGl0eU1vdmVTdGVwEicKBHR5cGUYBSABKA4y",
            "GS5NZWxhbmRHYW1lMy5Nb3ZlbWVudFR5cGUSIQoDRGlyGAYgASgLMhQuTWVs",
            "YW5kR2FtZTMuVmVjdG9yMyJBCgpPYmplY3RBdHRyEhAKCGlzTXV0dWFsGAEg",
            "ASgIEg4KBmlzRWRpdBgCIAEoCBIRCglwaWxlTGltaXQYAyABKAUiPQoIRW50",
            "aXR5SWQSJQoEdHlwZRgBIAEoDjIXLk1lbGFuZEdhbWUzLkVudGl0eVR5cGUS",
            "CgoCaWQYAiABKAkiawoMRW50aXR5SWREYXRhEiUKBHR5cGUYASABKA4yFy5N",
            "ZWxhbmRHYW1lMy5FbnRpdHlUeXBlEgsKA2VpZBgCIAEoCRILCgNjaWQYAyAB",
            "KAUSGgoSZW50aXR5X3RlbXBsYXRlX2lkGAQgASgJIucEChJFbnRpdHlXaXRo",
            "TG9jYXRpb24SJQoEdHlwZRgBIAEoDjIXLk1lbGFuZEdhbWUzLkVudGl0eVR5",
            "cGUSCgoCaWQYAiABKAkSLQoIbG9jYXRpb24YAyABKAsyGy5NZWxhbmRHYW1l",
            "My5FbnRpdHlMb2NhdGlvbhInCglkaXJlY3Rpb24YBCABKAsyFC5NZWxhbmRH",
            "YW1lMy5WZWN0b3IzEiwKCm1hcF9vYmplY3QYBSABKAsyFi5NZWxhbmRHYW1l",
            "My5NYXBPYmplY3RIABIlCgZwbGF5ZXIYBiABKAsyEy5NZWxhbmRHYW1lMy5Q",
            "bGF5ZXJIABIfCgNucGMYByABKAsyEC5NZWxhbmRHYW1lMy5OcGNIABInCgdt",
            "b25zdGVyGAggASgLMhQuTWVsYW5kR2FtZTMuTW9uc3RlckgAEjQKDmZhbGxp",
            "bmdfb2JqZWN0GAkgASgLMhouTWVsYW5kR2FtZTMuRmFsbGluZ09iamVjdEgA",
            "EikKCG1hdGVyaWFsGAogASgLMhUuTWVsYW5kR2FtZTMuTWF0ZXJpYWxIABIf",
            "CgNib3QYCyABKAsyEC5NZWxhbmRHYW1lMy5Cb3RIABIuCgtmYWxsaW5nX2Jv",
            "eBgMIAEoCzIXLk1lbGFuZEdhbWUzLkZhbGxpbmdCb3hIABIjCgVwbGFudBgN",
            "IAEoCzISLk1lbGFuZEdhbWUzLlBsYW50SAASHwoDcGV0GA4gASgLMhAuTWVs",
            "YW5kR2FtZTMuUGV0SAASJQoGcHVwcGV0GA8gASgLMhMuTWVsYW5kR2FtZTMu",
            "UHVwcGV0SABCCAoGZW50aXR5ItYBCg1FbnRpdHlOZnRJbmZvEg4KBm5mdF9p",
            "ZBgBIAEoCRInCghuZnRfdHlwZRgCIAEoDjIVLk1lbGFuZEdhbWUzLkl0ZW1U",
            "eXBlEjUKDnBsYWNlYWJsZV9pbmZvGAMgASgLMh0uTWVsYW5kR2FtZTMuTmZ0",
            "UGxhY2VhYmxlSW5mbxIfChd0aGlyZF9waWN0dXJlX2ZyYW1lX3VybBgEIAEo",
            "CRI0Cg50aGlyZF9uZnRfaW5mbxgFIAEoCzIcLk1lbGFuZEdhbWUzLk5mdFRo",
            "aXJkTmZ0SW5mbyL0BAoGUGxheWVyEgoKAmlkGAEgASgJEhEKCXBsYXllcl9p",
            "ZBgCIAEoCRIMCgRuYW1lGAMgASgJEg8KB3JvbGVfaWQYBCABKAUSDgoGZ2Vu",
            "ZGVyGAUgASgJEhEKCXJvbGVfaWNvbhgGIAEoCRIrCgdmZWF0dXJlGAcgASgL",
            "MhouTWVsYW5kR2FtZTMuUGxheWVyRmVhdHVyZRINCgVndWlkZRgIIAEoBRIr",
            "Cgdwcm9maWxlGAkgASgLMhouTWVsYW5kR2FtZTMuRW50aXR5UHJvZmlsZRIq",
            "CgdhdmF0YXJzGAogAygLMhkuTWVsYW5kR2FtZTMuUGxheWVyQXZhdGFyEg4K",
            "Bmh1bmdyeRgMIAEoBRIPCgd0aGlyc3R5GA0gASgFEg8KB2ZhdGlndWUYDiAB",
            "KAUSEwoLaXNfYnVpbGRpbmcYDyABKAgSDgoGYWN0aXZlGBAgASgIEiEKA2Rp",
            "chgRIAEoCzIULk1lbGFuZEdhbWUzLlZlY3RvcjMSFQoNY3VyX2J1aWxkX251",
            "bRgTIAEoBRIvCgpndWlkZV9pbmZvGBQgASgLMhsuTWVsYW5kR2FtZTMuRW50",
            "aXR5R3VpZGFuY2USEwoLaXNfZ29kX3ZpZXcYFSABKAgSDgoGaXNfaWRlGBYg",
            "ASgIEhcKD2xpc3Rlbl9rZXlwcmVzcxgXIAMoCRISCgpjaWRfYXZhdGFyGBgg",
            "ASgFEg8KB2lzX2hpZGUYGSABKAgSEQoJQldfYXR0YWNrGBogASgIEhAKCGZp",
            "Z2h0aW5nGBsgASgIEioKCWJ1ZmZfbGlzdBgcIAMoCzIXLk1lbGFuZEdhbWUz",
            "LkVudGl0eUJ1ZmYiiAkKCU1hcE9iamVjdBIKCgJpZBgBIAEoCRIoCgNsb2MY",
            "AiABKAsyGy5NZWxhbmRHYW1lMy5FbnRpdHlMb2NhdGlvbhILCgNjaWQYAyAB",
            "KAUSEQoJcGxheWVyX2lkGAQgASgJEiEKA2RpchgFIAEoCzIULk1lbGFuZEdh",
            "bWUzLlZlY3RvcjMSMgoLY29kZV9zdGF0dXMYByABKA4yHS5NZWxhbmRHYW1l",
            "My5FbnRpdHlDb2RlU3RhdHVzEhQKDHJlZnJlc2hfdGltZRgJIAEoAxIzCg1y",
            "dW5fYXR0cmlidXRlGAogASgLMhwuTWVsYW5kR2FtZTMuRW50aXR5QXR0cmli",
            "dXRlEgwKBGZ1ZWwYCyABKAUSJwoGZV90eXBlGAwgASgOMhcuTWVsYW5kR2Ft",
            "ZTMuRW50aXR5VHlwZRIOCgZtaXJyb3IYDSABKAgSEQoJa2V5X2ZyYW1lGA4g",
            "ASgFEhMKC2lzX3N0YW1wZWRlGA8gASgIEg8KB2lzX2NvcHkYESABKAgSEAoI",
            "aXNJbkFyZWEYEiABKAgSDgoGaXNMb2NrGBMgASgIEi4KBmJ1YmJsZRgVIAEo",
            "CzIeLk1lbGFuZEdhbWUzLkVudGl0eVNjZW5lRWZmZWN0Eg4KBmxvY2tlchgW",
            "IAEoCRITCgtjYW5fZGVzdHJveRgXIAEoCBIeChZpc19idWlsZF9mcm9tX3Rl",
            "bXBsYXRlGBggASgIEi8KCmd1aWRlX2luZm8YGSABKAsyGy5NZWxhbmRHYW1l",
            "My5FbnRpdHlHdWlkYW5jZRI0Cg9lbnRpdHlfdGVtcGxhdGUYGiABKAsyGy5N",
            "ZWxhbmRHYW1lMy5FbnRpdHlUZW1wbGF0ZRIUCgxjdXJfd2Fsa19kaXIYGyAB",
            "KAkSDwoHaXNfaGlkZRgcIAEoCBIsCgVhbmltcxgeIAEoCzIdLk1lbGFuZEdh",
            "bWUzLkVudGl0eUFuaW1hdGlvbnMSFQoNY3VyX3BsYXlfYW5pbRgfIAEoBRIu",
            "Cglsb2NrX3R5cGUYICABKA4yGy5NZWxhbmRHYW1lMy5FbnRpdHlMb2NrVHlw",
            "ZRIqCgtmcm9tX2ZhdGhlchghIAEoCzIVLk1lbGFuZEdhbWUzLkVudGl0eUlk",
            "EhQKDHNjZW5lX2VmZmVjdBgiIAEoBRIpCgZhdWRpb3MYIyABKAsyGS5NZWxh",
            "bmRHYW1lMy5FbnRpdHlBdWRpb3MSNwoPb3BlcmF0ZV9idWJibGVzGCQgAygL",
            "Mh4uTWVsYW5kR2FtZTMuT3BlcmF0ZUJ1YmJsZURhdGESNgoMY2FycnlfZW50",
            "aXR5GCUgASgLMiAuTWVsYW5kR2FtZTMuQ2FycnlFbnRpdHlCYXNlRGF0YRIn",
            "Cglmb3JjZV9kaXIYJiADKAsyFC5NZWxhbmRHYW1lMy5WZWN0b3IzEiwKCG5m",
            "dF9pbmZvGCcgASgLMhouTWVsYW5kR2FtZTMuRW50aXR5TmZ0SW5mbxI0Cgxt",
            "YXBfdGVtcGxhdGUYKCABKAsyHi5NZWxhbmRHYW1lMy5FbnRpdHlNYXBUZW1w",
            "bGF0ZSLVBAoFUGxhbnQSEQoJcGxheWVyX2lkGAEgASgJEgsKA2NpZBgCIAEo",
            "BRIKCgJpZBgDIAEoCRIMCgRuYW1lGAQgASgJEicKBmVfdHlwZRgFIAEoDjIX",
            "Lk1lbGFuZEdhbWUzLkVudGl0eVR5cGUSKgoKZW5lbXlfdHlwZRgGIAEoDjIW",
            "Lk1lbGFuZEdhbWUzLkVuZW15VHlwZRIrCgdwcm9maWxlGAcgASgLMhouTWVs",
            "YW5kR2FtZTMuRW50aXR5UHJvZmlsZRItCghsb2NhdGlvbhgIIAEoCzIbLk1l",
            "bGFuZEdhbWUzLkVudGl0eUxvY2F0aW9uEhEKCWZhdGhlcl9pZBgKIAEoCRIP",
            "Cgdpc19jb3B5GAsgASgIEiEKA2RpchgMIAEoCzIULk1lbGFuZEdhbWUzLlZl",
            "Y3RvcjMSEAoIaXNJbkFyZWEYDSABKAgSDgoGaXNMb2NrGA4gASgIEg4KBmxv",
            "Y2tlchgQIAEoCRIvCgpndWlkZV9pbmZvGBEgASgLMhsuTWVsYW5kR2FtZTMu",
            "RW50aXR5R3VpZGFuY2USDwoHaXNfaGlkZRgUIAEoCBI0Cg9lbnRpdHlfdGVt",
            "cGxhdGUYFSABKAsyGy5NZWxhbmRHYW1lMy5FbnRpdHlUZW1wbGF0ZRIUCgxj",
            "dXJfd2Fsa19kaXIYFiABKAkSLgoJbG9ja190eXBlGBcgASgOMhsuTWVsYW5k",
            "R2FtZTMuRW50aXR5TG9ja1R5cGUSKgoLZnJvbV9mYXRoZXIYGCABKAsyFS5N",
            "ZWxhbmRHYW1lMy5FbnRpdHlJZCKQBQoDUGV0EhEKCXBsYXllcl9pZBgBIAEo",
            "CRIKCgJpZBgCIAEoCRILCgNjaWQYAyABKAUSDAoEbmFtZRgEIAEoCRImCgR0",
            "eXBlGAUgASgOMhguTWVsYW5kR2FtZTMuTW9uc3RlclR5cGUSHwoEY2FtcBgG",
            "IAEoDjIRLk1lbGFuZEdhbWUzLkNhbXASDwoHaXNfYm9zcxgHIAEoCBIrCgdw",
            "cm9maWxlGAggASgLMhouTWVsYW5kR2FtZTMuRW50aXR5UHJvZmlsZRItCghh",
            "dHRfdHlwZRgJIAEoDjIbLk1lbGFuZEdhbWUzLk1vbnN0ZXJBdHRUeXBlEjMK",
            "C3BhdHJvbF90eXBlGAogASgOMh4uTWVsYW5kR2FtZTMuTW9uc3RlclBhdHJv",
            "bFR5cGUSDwoHaXNfY29weRgMIAEoCBIhCgNkaXIYDSABKAsyFC5NZWxhbmRH",
            "YW1lMy5WZWN0b3IzEhAKCGlzSW5BcmVhGA4gASgIEg4KBmlzTG9jaxgPIAEo",
            "CBIOCgZsb2NrZXIYESABKAkSLwoKZ3VpZGVfaW5mbxgSIAEoCzIbLk1lbGFu",
            "ZEdhbWUzLkVudGl0eUd1aWRhbmNlEg8KB2lzX2hpZGUYFSABKAgSNAoPZW50",
            "aXR5X3RlbXBsYXRlGBYgASgLMhsuTWVsYW5kR2FtZTMuRW50aXR5VGVtcGxh",
            "dGUSFAoMY3VyX3dhbGtfZGlyGBcgASgJEi4KCWxvY2tfdHlwZRgYIAEoDjIb",
            "Lk1lbGFuZEdhbWUzLkVudGl0eUxvY2tUeXBlEioKC2Zyb21fZmF0aGVyGBkg",
            "ASgLMhUuTWVsYW5kR2FtZTMuRW50aXR5SWQSFAoMc2NlbmVfZWZmZWN0GBog",
            "ASgFIr4KCgZQdXBwZXQSCgoCaWQYASABKAkSCwoDY2lkGAIgASgFEhEKCXBs",
            "YXllcl9pZBgDIAEoCRInCgZlX3R5cGUYBCABKA4yFy5NZWxhbmRHYW1lMy5F",
            "bnRpdHlUeXBlEiYKBHR5cGUYBSABKA4yGC5NZWxhbmRHYW1lMy5Nb25zdGVy",
            "VHlwZRIfCgRjYW1wGAYgASgOMhEuTWVsYW5kR2FtZTMuQ2FtcBIrCgdwcm9m",
            "aWxlGAcgASgLMhouTWVsYW5kR2FtZTMuRW50aXR5UHJvZmlsZRItCghhdHRf",
            "dHlwZRgIIAEoDjIbLk1lbGFuZEdhbWUzLk1vbnN0ZXJBdHRUeXBlEjMKC3Bh",
            "dHJvbF90eXBlGAkgASgOMh4uTWVsYW5kR2FtZTMuTW9uc3RlclBhdHJvbFR5",
            "cGUSEAoIaGF0ZXJfaWQYCiABKAkSEgoKaGF0ZXJfbmFtZRgLIAEoCRIyCgtj",
            "b2RlX3N0YXR1cxgMIAEoDjIdLk1lbGFuZEdhbWUzLkVudGl0eUNvZGVTdGF0",
            "dXMSFAoMcmVmcmVzaF90aW1lGA4gASgDEjMKDXJ1bl9hdHRyaWJ1dGUYDyAB",
            "KAsyHC5NZWxhbmRHYW1lMy5FbnRpdHlBdHRyaWJ1dGUSEQoJa2V5X2ZyYW1l",
            "GBEgASgFEhMKC2lzX3N0YW1wZWRlGBIgASgIEg4KBm1pcnJvchgTIAEoCBIP",
            "Cgdpc19oaWRlGBUgASgIEiEKA2RpchgWIAEoCzIULk1lbGFuZEdhbWUzLlZl",
            "Y3RvcjMSDwoHaXNfY29weRgXIAEoCBIQCghpc0luQXJlYRgYIAEoCBIOCgZp",
            "c0xvY2sYGSABKAgSLgoGYnViYmxlGBsgASgLMh4uTWVsYW5kR2FtZTMuRW50",
            "aXR5U2NlbmVFZmZlY3QSDgoGbG9ja2VyGBwgASgJEhMKC2Nhbl9kZXN0cm95",
            "GB0gASgIEh4KFmlzX2J1aWxkX2Zyb21fdGVtcGxhdGUYHiABKAgSLwoKZ3Vp",
            "ZGVfaW5mbxgfIAEoCzIbLk1lbGFuZEdhbWUzLkVudGl0eUd1aWRhbmNlEjQK",
            "D2VudGl0eV90ZW1wbGF0ZRggIAEoCzIbLk1lbGFuZEdhbWUzLkVudGl0eVRl",
            "bXBsYXRlEhQKDGN1cl93YWxrX2RpchghIAEoCRIsCgVhbmltcxgkIAEoCzId",
            "Lk1lbGFuZEdhbWUzLkVudGl0eUFuaW1hdGlvbnMSFQoNY3VyX3BsYXlfYW5p",
            "bRglIAEoBRIuCglsb2NrX3R5cGUYJiABKA4yGy5NZWxhbmRHYW1lMy5FbnRp",
            "dHlMb2NrVHlwZRIqCgtmcm9tX2ZhdGhlchgnIAEoCzIVLk1lbGFuZEdhbWUz",
            "LkVudGl0eUlkEhQKDHNjZW5lX2VmZmVjdBgoIAEoBRIpCgZhdWRpb3MYKSAB",
            "KAsyGS5NZWxhbmRHYW1lMy5FbnRpdHlBdWRpb3MSEgoKY2lkX2F2YXRhchgq",
            "IAEoBRI3Cg9vcGVyYXRlX2J1YmJsZXMYKyADKAsyHi5NZWxhbmRHYW1lMy5P",
            "cGVyYXRlQnViYmxlRGF0YRIRCgljdXJfZW1vamkYLCABKAUSNgoMY2Fycnlf",
            "ZW50aXR5GC0gASgLMiAuTWVsYW5kR2FtZTMuQ2FycnlFbnRpdHlCYXNlRGF0",
            "YRInCglmb3JjZV9kaXIYLiADKAsyFC5NZWxhbmRHYW1lMy5WZWN0b3IzEiwK",
            "CG5mdF9pbmZvGC8gASgLMhouTWVsYW5kR2FtZTMuRW50aXR5TmZ0SW5mbyLs",
            "AgoHTW9uc3RlchILCgNjaWQYASABKAUSCgoCaWQYAiABKAkSDAoEbmFtZRgD",
            "IAEoCRIOCgZhY3RpdmUYBCABKAgSDQoFb3duZXIYBSABKAkSKwoHcHJvZmls",
            "ZRgGIAEoCzIaLk1lbGFuZEdhbWUzLkVudGl0eVByb2ZpbGUSLQoIYXR0X3R5",
            "cGUYByABKA4yGy5NZWxhbmRHYW1lMy5Nb25zdGVyQXR0VHlwZRIzCgtwYXRy",
            "b2xfdHlwZRgIIAEoDjIeLk1lbGFuZEdhbWUzLk1vbnN0ZXJQYXRyb2xUeXBl",
            "EhAKCGhhdGVyX2lkGAkgASgJEhIKCmhhdGVyX25hbWUYCiABKAkSIQoDZGly",
            "GAsgASgLMhQuTWVsYW5kR2FtZTMuVmVjdG9yMxIvCgpndWlkZV9pbmZvGAwg",
            "ASgLMhsuTWVsYW5kR2FtZTMuRW50aXR5R3VpZGFuY2USEAoIZmlnaHRpbmcY",
            "DSABKAgiiAYKDUZhbGxpbmdPYmplY3QSCgoCaWQYASABKAkSCwoDY2lkGAIg",
            "ASgFEhAKCHF1YW50aXR5GAMgASgFEhEKCXBsYXllcl9pZBgEIAEoCRIOCgZt",
            "aXJyb3IYBSABKAgSLwoJYXR0cmlidXRlGAcgASgLMhwuTWVsYW5kR2FtZTMu",
            "QXZhdGFyQXR0cmlidXRlEhEKCWF1dG9fcGljaxgIIAEoCBIhCgNkaXIYCSAB",
            "KAsyFC5NZWxhbmRHYW1lMy5WZWN0b3IzEhAKCGlzSW5BcmVhGAogASgIEg4K",
            "BmlzTG9jaxgLIAEoCBIOCgZsb2NrZXIYDCABKAkSLwoKZ3VpZGVfaW5mbxgN",
            "IAEoCzIbLk1lbGFuZEdhbWUzLkVudGl0eUd1aWRhbmNlEi4KCWxvY2tfdHlw",
            "ZRgOIAEoDjIbLk1lbGFuZEdhbWUzLkVudGl0eUxvY2tUeXBlEicKBmVfdHlw",
            "ZRgPIAEoDjIXLk1lbGFuZEdhbWUzLkVudGl0eVR5cGUSDwoHaXNfaGlkZRgQ",
            "IAEoCBI0Cg9lbnRpdHlfdGVtcGxhdGUYESABKAsyGy5NZWxhbmRHYW1lMy5F",
            "bnRpdHlUZW1wbGF0ZRIzCg1ydW5fYXR0cmlidXRlGBIgASgLMhwuTWVsYW5k",
            "R2FtZTMuRW50aXR5QXR0cmlidXRlEg8KB2lzX2NvcHkYEyABKAgSKgoLZnJv",
            "bV9mYXRoZXIYFCABKAsyFS5NZWxhbmRHYW1lMy5FbnRpdHlJZBIUCgxzY2Vu",
            "ZV9lZmZlY3QYFSABKAUSKQoGYXVkaW9zGBYgASgLMhkuTWVsYW5kR2FtZTMu",
            "RW50aXR5QXVkaW9zEhkKEWlzX3Jlc291cmNlX3BvaW50GBcgASgIEjcKD29w",
            "ZXJhdGVfYnViYmxlcxgYIAMoCzIeLk1lbGFuZEdhbWUzLk9wZXJhdGVCdWJi",
            "bGVEYXRhEicKCWZvcmNlX2RpchgZIAMoCzIULk1lbGFuZEdhbWUzLlZlY3Rv",
            "cjMSDwoHcXVhbGl0eRgaIAEoBSLgAwoITWF0ZXJpYWwSCwoDY2lkGAEgASgF",
            "EgoKAmlkGAIgASgJEicKBHR5cGUYAyABKA4yGS5NZWxhbmRHYW1lMy5NYXRl",
            "cmlhbFR5cGUSDAoEbmFtZRgEIAEoCRIrCgdwcm9maWxlGAUgASgLMhouTWVs",
            "YW5kR2FtZTMuRW50aXR5UHJvZmlsZRIqCgplbmVteV90eXBlGAYgASgOMhYu",
            "TWVsYW5kR2FtZTMuRW5lbXlUeXBlEhAKCGRyb3BfZXhwGAcgASgFEiEKA2Rp",
            "chgIIAEoCzIULk1lbGFuZEdhbWUzLlZlY3RvcjMSEAoIaXNJbkFyZWEYCSAB",
            "KAgSDgoGaXNMb2NrGAogASgIEg4KBmxvY2tlchgLIAEoCRIvCgpndWlkZV9p",
            "bmZvGAwgASgLMhsuTWVsYW5kR2FtZTMuRW50aXR5R3VpZGFuY2USHAoUZnJv",
            "bV9lbnRpdHlfdGVtcGxhdGUYDSABKAgSNAoPZW50aXR5X3RlbXBsYXRlGA4g",
            "ASgLMhsuTWVsYW5kR2FtZTMuRW50aXR5VGVtcGxhdGUSDwoHaXNfaGlkZRgP",
            "IAEoCBIuCglsb2NrX3R5cGUYECABKA4yGy5NZWxhbmRHYW1lMy5FbnRpdHlM",
            "b2NrVHlwZSLQBAoDQm90EgsKA2NpZBgBIAEoBRIKCgJpZBgCIAEoCRIQCghi",
            "b3RfbmFtZRgDIAEoCRIRCglwbGF5ZXJfaWQYBCABKAkSEgoKcGxheWVyTmFt",
            "ZRgFIAEoCRIrCgdwcm9maWxlGAYgASgLMhouTWVsYW5kR2FtZTMuRW50aXR5",
            "UHJvZmlsZRImCgZzdGF0dXMYByABKA4yFi5NZWxhbmRHYW1lMy5Cb3RTdGF0",
            "dXMSDAoEZnVlbBgIIAEoBRItCghsb2NhdGlvbhgJIAEoCzIbLk1lbGFuZEdh",
            "bWUzLkVudGl0eUxvY2F0aW9uEg8KB25vd1NraW4YCiABKAUSDQoFc2tpbnMY",
            "CyADKAUSLgoGYnViYmxlGAwgASgLMh4uTWVsYW5kR2FtZTMuRW50aXR5U2Nl",
            "bmVFZmZlY3QSIQoDZGlyGA0gASgLMhQuTWVsYW5kR2FtZTMuVmVjdG9yMxIq",
            "CgdhdmF0YXJzGA4gAygLMhkuTWVsYW5kR2FtZTMuUGxheWVyQXZhdGFyEg8K",
            "B2lzX2NvcHkYDyABKAgSMgoLY29kZV9zdGF0dXMYECABKA4yHS5NZWxhbmRH",
            "YW1lMy5FbnRpdHlDb2RlU3RhdHVzEhAKCGlzSW5BcmVhGBEgASgIEg4KBmlz",
            "TG9jaxgSIAEoCBIvCgpndWlkZV9pbmZvGBQgASgLMhsuTWVsYW5kR2FtZTMu",
            "RW50aXR5R3VpZGFuY2USLgoJbG9ja190eXBlGBUgASgOMhsuTWVsYW5kR2Ft",
            "ZTMuRW50aXR5TG9ja1R5cGUitwIKCkZhbGxpbmdCb3gSCgoCaWQYASABKAkS",
            "LQoIbG9jYXRpb24YAiABKAsyGy5NZWxhbmRHYW1lMy5FbnRpdHlMb2NhdGlv",
            "bhIzCg9mYWxsaW5nX29iamVjdHMYAyADKAsyGi5NZWxhbmRHYW1lMy5GYWxs",
            "aW5nT2JqZWN0EhEKCXBsYXllcl9pZBgEIAEoCRITCgtwbGF5ZXJfbmFtZRgF",
            "IAEoCRIQCghpc0luQXJlYRgGIAEoCBIOCgZpc0xvY2sYByABKAgSDgoGbG9j",
            "a2VyGAggASgJEi8KCmd1aWRlX2luZm8YCSABKAsyGy5NZWxhbmRHYW1lMy5F",
            "bnRpdHlHdWlkYW5jZRIuCglsb2NrX3R5cGUYCiABKA4yGy5NZWxhbmRHYW1l",
            "My5FbnRpdHlMb2NrVHlwZSKUAgoORW50aXR5QmFzZURhdGESJwoGZV90eXBl",
            "GAEgASgOMhcuTWVsYW5kR2FtZTMuRW50aXR5VHlwZRIoCgNsb2MYAiABKAsy",
            "Gy5NZWxhbmRHYW1lMy5FbnRpdHlMb2NhdGlvbhILCgNjaWQYAyABKAUSIQoD",
            "ZGlyGAQgASgLMhQuTWVsYW5kR2FtZTMuVmVjdG9yMxIOCgZtaXJyb3IYBSAB",
            "KAgSDwoHaXNfaGlkZRgGIAEoCBIQCghyZXNfbmFtZRgHIAEoCRIVCg1jdXJf",
            "cGxheV9hbmltGAggASgFEgwKBGFyZWEYCSABKAkSJwoJZm9yY2VfZGlyGAog",
            "AygLMhQuTWVsYW5kR2FtZTMuVmVjdG9yMyJ5Cg1FbnRpdHlUdXJuaW5nEiwK",
            "C2VudGl0eV90eXBlGAEgASgOMhcuTWVsYW5kR2FtZTMuRW50aXR5VHlwZRIR",
            "CgllbnRpdHlfaWQYAiABKAkSJwoJZGlyZWN0aW9uGAMgASgLMhQuTWVsYW5k",
            "R2FtZTMuVmVjdG9yMyKBAQoMUGxheWVyQXZhdGFyEi0KCHBvc2l0aW9uGAEg",
            "ASgOMhsuTWVsYW5kR2FtZTMuQXZhdGFyUG9zaXRpb24SEQoJb2JqZWN0X2lk",
            "GAIgASgFEi8KCWF0dHJpYnV0ZRgDIAEoCzIcLk1lbGFuZEdhbWUzLkF2YXRh",
            "ckF0dHJpYnV0ZSKWAQoNUGxheWVyRmVhdHVyZRIPCgdleWVicm93GAEgASgF",
            "Eg0KBW1vdXRoGAIgASgFEgsKA2V5ZRgDIAEoBRIMCgRmYWNlGAQgASgFEgwK",
            "BGhhaXIYBSABKAUSDQoFZ2xvdmUYBiABKAUSDwoHY2xvdGhlcxgHIAEoBRIN",
            "CgVwYW50cxgIIAEoBRINCgVzaG9lcxgJIAEoBSIvCg9OcGNDb252ZXJzYXRp",
            "b24SCgoCaWQYASABKAkSEAoIc2VudGVuY2UYAiADKAkiyAEKA05wYxIKCgJp",
            "ZBgBIAEoCRIMCgRuYW1lGAIgASgJEg4KBmF2YXRhchgDIAEoCRIRCglwbGF5",
            "ZXJfaWQYBCABKAkSDAoEaWNvbhgFIAEoCRI6ChRkZWZhdWx0X2NvbnZlcnNh",
            "dGlvbhgGIAMoCzIcLk1lbGFuZEdhbWUzLk5wY0NvbnZlcnNhdGlvbhIYChB0",
            "YXNrX25vdGljZV90eXBlGAcgASgFEhAKCGlzSW5BcmVhGAggASgIEg4KBmlz",
            "TG9jaxgJIAEoCCIzCgtOcGNMb2NhdGlvbhIOCgZtYXBfaWQYASABKAkSCQoB",
            "chgCIAEoBRIJCgFjGAMgASgFIlwKD05wY1dpdGhMb2NhdGlvbhIdCgNucGMY",
            "ASABKAsyEC5NZWxhbmRHYW1lMy5OcGMSKgoIbG9jYXRpb24YAiABKAsyGC5N",
            "ZWxhbmRHYW1lMy5OcGNMb2NhdGlvbiIkCgxPYmplY3RBbmNob3ISCQoBeBgB",
            "IAEoARIJCgF5GAIgASgBIl4KC09iamVjdFNoYXBlEg8KB3JfY291bnQYASAB",
            "KAUSDwoHY19jb3VudBgCIAEoBRIUCgxhcmVhX2RlZmF1bHQYAyABKAUSFwoP",
            "d2Fsa2Rpcl9kZWZhdWx0GAQgASgFIioKCk9iamVjdEFyZWESCQoBbhgBIAEo",
            "BRIRCgV2YWx1ZRgCIAMoBUICEAEitwEKD09iamVjdEFuaW1hdGlvbhIKCgJp",
            "ZBgBIAEoCRIOCgZzb3VyY2UYAiABKAkSPQoMdHJpZ2dlcl90eXBlGAMgASgO",
            "MicuTWVsYW5kR2FtZTMuT2JqZWN0QW5pbWF0aW9uVHJpZ2dlclR5cGUSNwoJ",
            "c3RvcF90eXBlGAQgASgOMiQuTWVsYW5kR2FtZTMuT2JqZWN0QW5pbWF0aW9u",
            "U3RvcFR5cGUSEAoIcHJpb3JpdHkYBSABKAUibwoLT2JqZWN0U3RhdGUSCgoC",
            "aWQYASABKAUSEgoKaXNfZGVmYXVsdBgCIAEoCBIPCgd0ZXh0dXJlGAMgASgJ",
            "Ei8KCWFuaW1hdGlvbhgEIAEoCzIcLk1lbGFuZEdhbWUzLk9iamVjdEFuaW1h",
            "dGlvbiJpChZDb25zdW1hYmxlSXRlbVNldHRpbmdzEg8KB2l0ZW1faWQYASAB",
            "KAUSCgoCY2QYAiABKAUSEwoLY2FsbF9tZXRob2QYAyADKAkSDAoEYXJncxgE",
            "IAMoBRIPCgdjZF90eXBlGAUgASgFIk0KEk9iamVjdEdlYXJTZXR0aW5ncxIL",
            "CgNjaWQYASABKAUSKgoHc2V0dGluZxgCIAEoCzIZLk1lbGFuZEdhbWUzLkdl",
            "YXJTZXR0aW5ncyL8AgoMR2VhclNldHRpbmdzEi4KCWdlYXJfdHlwZRgBIAEo",
            "DjIbLk1lbGFuZEdhbWUzLk9iamVjdEdlYXJUeXBlEhIKCmR1cmFiaWxpdHkY",
            "AiABKAUSEAoIc2tpbGxfaWQYAyABKAUSFgoOaHBfbGltaXRfYWRkZWQYBCAB",
            "KAUSGQoRaHBfcmVjb3ZlcnlfYWRkZWQYBSABKAUSEQoJYXR0X2FkZGVkGAYg",
            "ASgFEhcKD2F0dF9zcGVlZF9hZGRlZBgHIAEoBRIRCglkZWZfYWRkZWQYCCAB",
            "KAUSFwoPY3JpdF9yYXRlX2FkZGVkGAkgASgFEhYKDmNyaXRfZG1nX2FkZGVk",
            "GAogASgFEhYKDmhpdF9yYXRlX2FkZGVkGAsgASgFEhcKD21pc3NfcmF0ZV9h",
            "ZGRlZBgMIAEoBRIYChBtb3ZlX3NwZWVkX2FkZGVkGA0gASgFEigKC3JlcGFp",
            "cl9uZWVkGA4gAygLMhMuTWVsYW5kR2FtZTMuU3R1ZmZzImEKEVNjZW5lRm9y",
            "Y2VTZXR0aW5nEgsKA2NpZBgBIAEoBRIMCgRkZXNjGAIgASgJEg0KBWZvcmNl",
            "GAMgASgFEiIKA2RpchgEIAEoCzIVLk1lbGFuZEdhbWUzLlZlY3RvclhZIswN",
            "Cg5PYmplY3RTZXR0aW5ncxIKCgJpZBgBIAEoBRIlCgR0eXBlGAIgASgOMhcu",
            "TWVsYW5kR2FtZTMuT2JqZWN0VHlwZRIQCghzdWJfdHlwZRgDIAEoBRIMCgRu",
            "YW1lGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJEg8KB3RleHR1cmUYBiAD",
            "KAkSDwoHdGlsZXNldBgHIAEoCRIwCgpibG9ja190eXBlGAggASgOMhwuTWVs",
            "YW5kR2FtZTMuT2JqZWN0QmxvY2tUeXBlEikKBmFuY2hvchgJIAEoCzIZLk1l",
            "bGFuZEdhbWUzLk9iamVjdEFuY2hvchIlCgRhcmVhGAogASgLMhcuTWVsYW5k",
            "R2FtZTMuT2JqZWN0QXJlYRIOCgZtaXJyb3IYCyABKAgSEAoIc3RhdGVfaWQY",
            "DCABKAUSKAoGc3RhdGVzGA0gAygLMhguTWVsYW5kR2FtZTMuT2JqZWN0U3Rh",
            "dGUSMQoQcHJlX2FydGljbGVfdHlwZRgOIAMoDjIXLk1lbGFuZEdhbWUzLk9i",
            "amVjdFR5cGUSGwoTYmFja3BhY2tfaXRlbV9saW1pdBgPIAEoBRIrCgdxdWFs",
            "aXR5GBAgASgOMhouTWVsYW5kR2FtZTMuT2JqZWN0UXVhbGl0eRIRCgljYW5f",
            "dHJhZGUYESABKAgSEAoIY2FuX3NlbGwYEiABKAgSEAoIY2FuX2Ryb3AYEyAB",
            "KAgSLgoJZ2Vhcl90eXBlGBQgASgOMhsuTWVsYW5kR2FtZTMuT2JqZWN0R2Vh",
            "clR5cGUSEwoLZ2Vhcl9hdmF0YXIYFSABKAkSMwoJYnVpbGRhYmxlGBggASgO",
            "MiAuTWVsYW5kR2FtZTMuT2JqZWN0QnVpbGRhYmxlVHlwZRIwCg1tYXRlcmlh",
            "bF90eXBlGBkgASgOMhkuTWVsYW5kR2FtZTMuTWF0ZXJpYWxUeXBlEhkKEW1h",
            "dGVyaWFsX2hwX2xpbWl0GBogASgFEiMKG21hdGVyaWFsX2ZhbGxpbmdfcmVj",
            "aXBldF9pZBgbIAEoBRIUCgxidWlsZF9oZWlnaHQYHCABKAUSFQoNb2JqZWN0",
            "X2hlaWdodBgdIAEoBRIpCgh3YWxrX2RpchgeIAEoCzIXLk1lbGFuZEdhbWUz",
            "Lk9iamVjdEFyZWESMAoNZ2Vhcl9zZXR0aW5ncxgfIAEoCzIZLk1lbGFuZEdh",
            "bWUzLkdlYXJTZXR0aW5ncxIXCg93YWxrX2xvd19oZWlnaHQYICABKAUSGAoQ",
            "d2Fsa19oaWdoX2hlaWdodBghIAEoBRIqCgplbmVteV90eXBlGCIgASgOMhYu",
            "TWVsYW5kR2FtZTMuRW5lbXlUeXBlEhIKCm9iamVjdF9kZWYYIyABKAUSEAoI",
            "ZHJvcF9leHAYJCABKAUSHAoUaW5pdF9vYmplY3RfcXVhbnRpdHkYJSABKAUS",
            "FAoMZXh0cmFfY29uZmlnGCYgASgJEhEKCWhpZ2hfZWRnZRgnIAEoBRIQCgh1",
            "c2VfZHJvcBgoIAEoBRIPCgdpc19mdWVsGCkgASgIEi4KDHRlcnJhaW5fdHlw",
            "ZRgqIAEoDjIYLk1lbGFuZEdhbWUzLlRlcnJhaW5UeXBlEg4KBnVzZV9sdhgr",
            "IAEoBRIfCgRjYW1wGCwgASgOMhEuTWVsYW5kR2FtZTMuQ2FtcBIMCgRsaWZl",
            "GC0gASgFEhMKC2JvZHlfcmFkaXVzGC4gASgFEigKCXVzZXJfdHlwZRgvIAEo",
            "DjIVLk1lbGFuZEdhbWUzLlVzZXJUeXBlEhEKCWF0dFdpZGdldBgwIAEoBRIk",
            "Cgd3aWRnZXRzGDEgAygLMhMuTWVsYW5kR2FtZTMuV2lkZ2V0Eg4KBmZyYW1l",
            "cxgyIAMoBRIQCghjb2RlX2xpYhgzIAEoBRISCgppc190ZXJyYWluGDQgASgI",
            "EiwKBWFuaW1zGDUgASgLMh0uTWVsYW5kR2FtZTMuRW50aXR5QW5pbWF0aW9u",
            "cxIPCgdpc19pdGVtGDYgASgIEhMKC2RlZl9kcm9wX2lkGDcgASgFEg8KB2Jp",
            "bmRpbmcYOCABKAUSFwoPcmVjdF9idWlsZF9oaWdoGDkgASgFEhUKDXJlY3Rf",
            "d2Fsa19sb3cYOiABKAUSFgoOcmVjdF93YWxrX2hpZ2gYOyABKAUSFAoMcmVj",
            "dF90ZXh0dXJlGDwgAygJEjIKDmVudGl0eV9wcmVsb2FkGD0gASgLMhouTWVs",
            "YW5kR2FtZTMuRW50aXR5UHJlbG9hZBIzCgtzY2VuZV9mb3JjZRg+IAEoCzIe",
            "Lk1lbGFuZEdhbWUzLlNjZW5lRm9yY2VTZXR0aW5nIpYBCgpPYmplY3RJdGVt",
            "EgoKAmlkGAEgASgFEiUKBHR5cGUYAiABKA4yFy5NZWxhbmRHYW1lMy5PYmpl",
            "Y3RUeXBlEhAKCHN1Yl90eXBlGAMgASgFEgwKBG5hbWUYBCABKAkSEwoLZGVz",
            "Y3JpcHRpb24YBSABKAkSDgoGbWlycm9yGAYgASgIEhAKCHN0YXRlX2lkGAcg",
            "ASgFIjIKD0l0ZW1UZW1wbGF0ZUxldBISCgpvYmplY3RfY2lkGAEgASgFEgsK",
            "A3BvcxgCIAEoBSK9AQoLR2FtZVByb2plY3QSCgoCaWQYASABKAkSEQoJcGxh",
            "eWVyX2lkGAIgASgJEiwKBXN0YXRlGAMgASgOMh0uTWVsYW5kR2FtZTMuR2Ft",
            "ZVByb2plY3RTdGF0ZRIqCgR0eXBlGAQgASgOMhwuTWVsYW5kR2FtZTMuR2Ft",
            "ZVByb2plY3RUeXBlEgwKBG5hbWUYBSABKAkSEwoLZGVzY3JpcHRpb24YBiAB",
            "KAkSEgoKY3JlYXRlZF9hdBgHIAEoCSJ5ChJHYW1lUHJvamVjdENvbW1lbnQS",
            "CgoCaWQYASABKAkSFwoPZ2FtZV9wcm9qZWN0X2lkGAIgASgJEhkKEWNvbW1l",
            "bnRfcGxheWVyX2lkGAMgASgJEg8KB2NvbnRlbnQYBCABKAkSEgoKY3JlYXRl",
            "ZF9hdBgFIAEoCSJJCghDdXJyZW5jeRIwCg1jdXJyZW5jeV90eXBlGAEgASgO",
            "MhkuTWVsYW5kR2FtZTMuQ3VycmVuY3lUeXBlEgsKA251bRgCIAEoBSJ8CgZS",
            "ZXdhcmQSEQoJcmV3YXJkX2lkGAEgASgFEikKDHJld2FyZF9pdGVtcxgCIAMo",
            "CzITLk1lbGFuZEdhbWUzLlN0dWZmcxILCgNleHAYAyABKAUSJwoIY3VycmVu",
            "Y3kYBCADKAsyFS5NZWxhbmRHYW1lMy5DdXJyZW5jeSJLCgxDaGF0U2V0dGlu",
            "Z3MSLwoJY2hhdF90eXBlGAEgASgOMhwuTWVsYW5kR2FtZTMuQ2hhdENoYW5u",
            "ZWxUeXBlEgoKAmNkGAIgASgFIrEBCgtDaGF0TWVzc2FnZRIRCglzZW5kZXJf",
            "aWQYASABKAkSEwoLc2VuZGVyX25hbWUYAiABKAkSEwoLc2VuZGVyX2ljb24Y",
            "AyABKAkSLwoJY2hhdF90eXBlGAQgASgOMhwuTWVsYW5kR2FtZTMuQ2hhdENo",
            "YW5uZWxUeXBlEg8KB2NvbnRlbnQYBSABKAkSEwoLcmVjZWl2ZXJfaWQYBiAB",
            "KAkSDgoGbXNnX2lkGAcgASgJIqkBCgtNaW5pbWFwTWFyaxIqCgR0eXBlGAEg",
            "ASgOMhwuTWVsYW5kR2FtZTMuTWluaW1hcE1hcmtUeXBlEjkKDGRpc3BsYXlf",
            "dHlwZRgCIAEoDjIjLk1lbGFuZEdhbWUzLk1pbmltYXBNYXJrRGlzcGxheVR5",
            "cGUSDwoHbWFya19pZBgDIAEoCRIMCgRuYW1lGAQgASgJEgkKAXIYBSABKAUS",
            "CQoBYxgGIAEoBSLwAgoNRW50aXR5UHJvZmlsZRIKCgJsdhgBIAEoBRILCgNl",
            "eHAYAiABKAkSCwoDYXR0GAMgASgFEhEKCWF0dF9zcGVlZBgEIAEoBRILCgNk",
            "ZWYYBSABKAUSEgoKaHBfY3VycmVudBgGIAEoBRIQCghocF9saW1pdBgHIAEo",
            "BRIRCgljcml0X3JhdGUYCCABKAUSEAoIY3JpdF9kbWcYCSABKAUSEAoIaGl0",
            "X3JhdGUYCiABKAUSEQoJbWlzc19yYXRlGAsgASgFEhIKCm1vdmVfc3BlZWQY",
            "DCABKAUSEAoIcHVzaF9kbWcYDSABKAUSEQoJcHVzaF9kaXN0GA4gASgFEhMK",
            "C2hwX3JlY292ZXJ5GBUgASgFEhQKDGh1bmdyeV9saW1pdBgZIAEoBRIVCg10",
            "aGlyc3R5X2xpbWl0GBogASgFEhUKDWZhdGlndWVfbGltaXQYGyABKAUSFwoP",
            "ZmF0aWd1ZV9jdXJyZW50GBwgASgFIokBChNFbnRpdHlQcm9maWxlVXBkYXRl",
            "Ei4KBWZpZWxkGAEgASgOMh8uTWVsYW5kR2FtZTMuRW50aXR5UHJvZmlsZUZp",
            "ZWxkEhEKCWN1cl92YWx1ZRgCIAEoBRIVCg1jdXJfdmFsdWVfc3RyGAMgASgJ",
            "EhgKEHVzZV9zdHJpbmdfdmFsdWUYBCABKAgi2QEKEUVudGl0eVNjZW5lRWZm",
            "ZWN0EjMKCWVmZmVjdF9pZBgBIAEoDjIgLk1lbGFuZEdhbWUzLkVudGl0eVNj",
            "ZW5lRWZmZWN0SWQSFAoMdGV4dF9jb250ZW50GAIgASgJEhIKCmV4cGlyZWRf",
            "YXQYBCABKAUSEwoLZnJvbV9kZXZpY2UYBSABKAUSEQoJZnJvbV9ub2RlGAYg",
            "ASgFEj0KEmJ1YmJsZV9lZmZlY3RfdHlwZRgHIAEoDjIhLk1lbGFuZEdhbWUz",
            "LkJ1YmJsZVRleHRFZmZlY3RUeXBlIr4CCgtCb3RTZXR0aW5ncxIKCgJpZBgB",
            "IAEoBRIMCgRuYW1lGAIgASgJEg8KB2x2X3R5cGUYAyABKAUSDAoEa2luZBgE",
            "IAEoBRIQCghza2lsbDFpZBgFIAEoBRIQCghza2lsbDJpZBgGIAEoBRIVCg1z",
            "a2lsbFNlcXVlbmNlGAcgAygFEhgKEHJvYm90Q29kZUJsb2NrSWQYCCABKAUS",
            "EgoKYmFnR3JpZE51bRgJIAEoBRITCgtmdWVsQ2VpbGluZxgKIAEoBRINCgVz",
            "a2luMRgLIAEoBRINCgVza2luMhgMIAEoBRINCgVza2luMxgNIAEoBRINCgVz",
            "a2luNBgOIAEoBRIMCgRza2luGA8gASgFEhkKEUFjcXVpc2l0aW9uc2tpbGxz",
            "GBAgASgFEhMKC2JvZHlfcmFkaXVzGBEgASgFIoACCgpQbGF5ZXJBcmVhEg4K",
            "Bm1hcF9pZBgBIAEoBRIQCghyX2NlbnRlchgCIAEoBRIQCghjX2NlbnRlchgD",
            "IAEoBRIQCghpdGVtX2NpZBgEIAEoBRIRCglidXlfbWFya3MYBSABKAwSEAoI",
            "b3duZXJfaWQYBiABKAkSEgoKb3duZXJfbmFtZRgHIAEoCRIVCg1yX2NvcmVf",
            "cmFkaXVzGAggASgFEhUKDWNfY29yZV9yYWRpdXMYCSABKAUSFwoPcl9leHRl",
            "bmRfcmFkaXVzGAogASgFEhcKD2NfZXh0ZW5kX3JhZGl1cxgLIAEoBRITCgt0",
            "ZW1wbGF0ZV9pZBgMIAEoBSK7AQoPUGxheWVyQXJlYUJyaWVmEhAKCHJfY2Vu",
            "dGVyGAIgASgFEhAKCGNfY2VudGVyGAMgASgFEhAKCG93bmVyX2lkGAYgASgJ",
            "EhIKCm93bmVyX25hbWUYByABKAkSFQoNcl9jb3JlX3JhZGl1cxgIIAEoBRIV",
            "Cg1jX2NvcmVfcmFkaXVzGAkgASgFEhcKD3JfZXh0ZW5kX3JhZGl1cxgKIAEo",
            "BRIXCg9jX2V4dGVuZF9yYWRpdXMYCyABKAUisQEKEUNvZGVibG9ja1RlbXBs",
            "YXRlEgoKAmlkGAEgASgJEg0KBXRpdGxlGAIgASgJEiwKBGRhdGEYAyABKAsy",
            "Hi5NZWxhbmRHYW1lMy5Db2RlQmxvY2tQcm9ncmFtcxIRCgl0aHVtYm5haWwY",
            "BCABKAkSDgoGaXNfbmV3GAUgASgIEjAKBHR5cGUYBiABKA4yIi5NZWxhbmRH",
            "YW1lMy5Db2RlYmxvY2tUZW1wbGF0ZVR5cGUiQgoEUm9sZRIKCgJpZBgBIAEo",
            "CRIMCgRuYW1lGAIgASgJEg4KBmdlbmRlchgDIAEoCRIQCghza2VsZXRvbhgE",
            "IAEoCSJPCgpTcGF3blBvaW50EgoKAmlkGAEgASgFEg4KBm1hcF9pZBgCIAEo",
            "BRIJCgF4GAMgASgFEgkKAXkYBCABKAUSDwoHaW5pdGlhbBgFIAEoCCKHAQoM",
            "U2NlbmVXZWF0aGVyEhAKCHNjZW5lX2lkGAEgASgFEikKB3dlYXRoZXIYAiAB",
            "KA4yGC5NZWxhbmRHYW1lMy5XZWF0aGVyVHlwZRITCgt0ZW1wZXJhdHVyZRgD",
            "IAEoBRISCgpzdGFydF9yYXRlGAQgASgFEhEKCXN0b3BfcmF0ZRgFIAEoBSJl",
            "CgxXZWF0aGVyU3RhdGUSEAoIc2NlbmVfaWQYASABKAUSLgoMd2VhdGhlcl90",
            "eXBlGAIgASgOMhguTWVsYW5kR2FtZTMuV2VhdGhlclR5cGUSEwoLdGVtcGVy",
            "YXR1cmUYAyABKAUiNgoMQWNoaWV2ZUluZGV4EhMKC3JlcXVpcmVfbnVtGAEg",
            "ASgFEhEKCXJld2FyZF9pZBgCIAEoBSJ/CgdBY2hpZXZlEhIKCmFjaGlldmVf",
            "aWQYASABKAUSLgoMYWNoaWV2ZV90eXBlGAIgASgOMhguTWVsYW5kR2FtZTMu",
            "QWNoaWV2ZVR5cGUSMAoNYWNoaWV2ZV9pbmRleBgDIAMoCzIZLk1lbGFuZEdh",
            "bWUzLkFjaGlldmVJbmRleCKaAgoQRW50aXR5THZTZXR0aW5ncxIKCgJsdhgB",
            "IAEoBRILCgNleHAYAiABKAUSCwoDYXR0GAMgASgFEhEKCWF0dF9zcGVlZBgE",
            "IAEoBRILCgNkZWYYBSABKAUSEwoLaHBfcmVjb3ZlcnkYBiABKAUSEAoIaHBf",
            "bGltaXQYByABKAUSEQoJY3JpdF9yYXRlGAggASgFEhAKCGNyaXRfZG1nGAkg",
            "ASgFEhAKCGhpdF9yYXRlGAogASgFEhEKCW1pc3NfcmF0ZRgLIAEoBRISCgpt",
            "b3ZlX3NwZWVkGAwgASgFEhAKCHB1c2hfZG1nGA0gASgFEhEKCXB1c2hfZGlz",
            "dBgOIAEoBRIWCg5kZWF0aF9sb3NzX2V4cBgPIAEoBSJnCg1Cb3RMdlNldHRp",
            "bmdzEgoKAmlkGAEgASgFEg8KB2x2X3R5cGUYAiABKAUSOQoSZW50aXR5X2x2",
            "X3NldHRpbmdzGAMgASgLMh0uTWVsYW5kR2FtZTMuRW50aXR5THZTZXR0aW5n",
            "cyJvCgdJdGVtTGV0Eg8KB2l0ZW1faWQYASABKAUSEAoIcXVhbnRpdHkYAiAB",
            "KAUSEAoITmVlZFJhbmQYAyABKAgSLwoJYXR0cmlidXRlGAQgASgLMhwuTWVs",
            "YW5kR2FtZTMuQXZhdGFyQXR0cmlidXRlIsQBCgRNYWlsEg8KB21haWxfaWQY",
            "ASABKAkSDQoFdGl0bGUYAiABKAkSDwoHY29udGVudBgDIAEoCRISCgpwYXJh",
            "bWV0ZXJzGAQgAygJEgsKA3RvcBgFIAEoBRIOCgZzZW5kZXIYBiABKAkSEgoK",
            "ZXhwaXJlZF9hdBgHIAEoAxIMCgRyZWFkGAggASgIEg0KBXRha2VuGAkgASgI",
            "EikKC2F0dGFjaG1lbnRzGAogAygLMhQuTWVsYW5kR2FtZTMuSXRlbUxldCJu",
            "CghNYWlsSGVhZBIPCgdtYWlsX2lkGAEgASgJEg0KBXRpdGxlGAIgASgJEhIK",
            "CmV4cGlyZWRfYXQYAyABKAMSCwoDdG9wGAQgASgFEgwKBHJlYWQYBSABKAgS",
            "EwoLYXR0YWNobWVudHMYBiABKAgiiwEKDE1haWxUZW1wbGF0ZRITCgt0ZW1w",
            "bGF0ZV9pZBgBIAEoBRIMCgRuYW1lGAIgASgJEhAKCHRlbXBsYXRlGAMgASgJ",
            "EgsKA3RvcBgEIAEoBRIWCg5yZXdhcmRfZ2lmdF9pZBgFIAEoBRIPCgdpbml0",
            "aWFsGAYgASgFEhAKCGR1cmF0aW9uGAcgASgDIjIKDFBsYXllckh1bmdyeRIN",
            "CgVsaW1pdBgBIAEoBRITCgtjdXJyZW50X3ZhbBgCIAEoBSIzCg1QbGF5ZXJU",
            "aGlyc3R5Eg0KBWxpbWl0GAEgASgFEhMKC2N1cnJlbnRfdmFsGAIgASgFIjMK",
            "DVBsYXllckZhdGlndWUSDQoFbGltaXQYASABKAUSEwoLY3VycmVudF92YWwY",
            "AiABKAUihQIKFFNwZWNpYWxCdWlsZFNldHRpbmdzEgoKAmlkGAEgASgFEhEK",
            "CWRhdGFfZnJvbRgCIAEoBRIuCgR0eXBlGAMgASgOMiAuTWVsYW5kR2FtZTMu",
            "U3BlY2lhbEJ1aWxkU3ViVHlwZRIQCghmb3JtdWxhcxgEIAMoBRIQCghncmlk",
            "X251bRgFIAEoBRIRCgluZWVkX2Z1ZWwYBiADKAUSFgoOYnVybmluZ19yYXRp",
            "b24YByABKAUSEQoJbWF4X2NoYXJzGAggASgFEg8KB2NvbnRlbnQYCSABKAkS",
            "FAoMZGlzcGxheV90aW1lGAogASgFEhUKDXRyaWdnZXJfcmFuZ2UYCyABKAUi",
            "KAoIR2Fpbkl0ZW0SCgoCaWQYASABKAUSEAoIcXVhbnRpdHkYAiABKAUiaAoH",
            "Qm90R2FpbhIOCgZib3RfaWQYASABKAMSEQoJbGV2ZWxfZGlzGAIgASgFEhAK",
            "CGZ1ZWxfZGlzGAMgASgFEigKCWl0ZW1fbGlzdBgEIAMoCzIVLk1lbGFuZEdh",
            "bWUzLkdhaW5JdGVtIl4KD0VudGl0eUF0dHJpYnV0ZRIlCgZlbnRpdHkYASAB",
            "KAsyFS5NZWxhbmRHYW1lMy5FbnRpdHlJZBIkCgd3aWRnZXRzGAMgAygLMhMu",
            "TWVsYW5kR2FtZTMuV2lkZ2V0IjgKEEVudGl0eUF0dHJpYnV0ZXMSJAoHd2lk",
            "Z2V0cxgBIAMoCzITLk1lbGFuZEdhbWUzLldpZGdldCJvCgdTdHVkZW50EgoK",
            "AmlkGAEgASgJEhEKCWdhbWVfbmFtZRgCIAEoCRIPCgdoYXNoX2lkGAMgASgJ",
            "EhEKCXJlYWxfbmFtZRgEIAEoCRIhCgJyYxgFIAEoCzIVLk1lbGFuZEdhbWUz",
            "LlZlY3RvclhZIlQKDUJ1aWxkaW5nUG9pbnQSCQoBeBgBIAEoBRIJCgF5GAIg",
            "ASgFEgkKAXoYAyABKAUSIgoDZGlyGAQgASgLMhUuTWVsYW5kR2FtZTMuVmVj",
            "dG9yWFkisAIKCUVudGl0eUFkZBIUCgxidWlsZF9wdXBwZXQYASABKAgSDwoH",
            "aXRlbV9pZBgCIAEoCRIhCgNQb3MYAyABKAsyFC5NZWxhbmRHYW1lMy5WZWN0",
            "b3IzEiEKA2RpchgEIAEoCzIULk1lbGFuZEdhbWUzLlZlY3RvcjMSDgoGbWly",
            "cm9yGAUgASgIEhwKFGZyb21fZW50aXR5X3RlbXBsYXRlGAYgASgIEhAKCHN0",
            "YXRlX2lkGAcgASgFEgsKA2NpZBgIIAEoBRIOCgZpc0l0ZW0YCSABKAgSJwoJ",
            "Zm9yY2VfZGlyGAogAygLMhQuTWVsYW5kR2FtZTMuVmVjdG9yMxIVCg1zdXJ2",
            "aXZhbF90aW1lGAsgASgFEhkKEXBpY3R1cmVfZnJhbWVfdXJsGAwgASgJIrAB",
            "CgpFbnRpdHlDb3B5EiMKBGZyb20YASABKAsyFS5NZWxhbmRHYW1lMy5FbnRp",
            "dHlJZBIhCgNwb3MYAiABKAsyFC5NZWxhbmRHYW1lMy5WZWN0b3IzEiEKA2Rp",
            "chgDIAEoCzIULk1lbGFuZEdhbWUzLlZlY3RvcjMSDgoGbWlycm9yGAUgASgI",
            "EicKCWZvcmNlX2RpchgGIAMoCzIULk1lbGFuZEdhbWUzLlZlY3RvcjMisgEK",
            "CkVudGl0eU1vdmUSJQoGZW50aXR5GAEgASgLMhUuTWVsYW5kR2FtZTMuRW50",
            "aXR5SWQSIQoDcG9zGAIgASgLMhQuTWVsYW5kR2FtZTMuVmVjdG9yMxIhCgNk",
            "aXIYAyABKAsyFC5NZWxhbmRHYW1lMy5WZWN0b3IzEg4KBm1pcnJvchgEIAEo",
            "BRInCglmb3JjZV9kaXIYByADKAsyFC5NZWxhbmRHYW1lMy5WZWN0b3IzInsK",
            "DEVudGl0eURlbFJlcxIlCgZlbnRpdHkYASABKAsyFS5NZWxhbmRHYW1lMy5F",
            "bnRpdHlJZBIhCgNwb3MYAiABKAsyFC5NZWxhbmRHYW1lMy5WZWN0b3IzEiEK",
            "A2RpchgDIAEoCzIULk1lbGFuZEdhbWUzLlZlY3RvcjMiiwEKD0J1aWxkaW5n",
            "TW9kZVBvcxILCgNjaWQYASABKAUSJQoGZW50aXR5GAIgASgLMhUuTWVsYW5k",
            "R2FtZTMuRW50aXR5SWQSGgoSZW50aXR5X3RlbXBsYXRlX2lkGAMgASgJEigK",
            "BGRpcnMYBCADKAsyGi5NZWxhbmRHYW1lMy5CdWlsZGluZ1BvaW50IkAKDUFu",
            "aW1hdGlvbkJvbmUSCgoCaWQYASABKAkSEQoJYW5pbV9uYW1lGAIgASgJEhAK",
            "CHJlc19uYW1lGAMgASgJIlgKDkFuaW1hdGlvbkZyYW1lEgoKAmlkGAEgASgJ",
            "EgwKBG5hbWUYAiABKAkSDQoFaW5kZXgYAyABKAUSCwoDdXJsGAQgASgJEhAK",
            "CHJlY3RfdXJsGAUgASgJIroBCglBbmltYXRpb24SCgoCaWQYASABKAkSDAoE",
            "bmFtZRgCIAEoCRINCgVpbmRleBgDIAEoBRIoCgR0eXBlGAQgASgOMhouTWVs",
            "YW5kR2FtZTMuQW5pbWF0aW9uVHlwZRIrCgZmcmFtZXMYBSADKAsyGy5NZWxh",
            "bmRHYW1lMy5BbmltYXRpb25GcmFtZRItCglib25lX2FuaW0YBiABKAsyGi5N",
            "ZWxhbmRHYW1lMy5BbmltYXRpb25Cb25lImYKEEVudGl0eUFuaW1hdGlvbnMS",
            "KgoKYW5pbWF0aW9ucxgBIAMoCzIWLk1lbGFuZEdhbWUzLkFuaW1hdGlvbhIm",
            "CgZFbW9qaXMYAiADKAsyFi5NZWxhbmRHYW1lMy5BbmltYXRpb24i7gMKDkVu",
            "dGl0eVRlbXBsYXRlEhMKC3BsYXllcl9uYW1lGAEgASgJEhMKC3RlbXBsYXRl",
            "X2lkGAIgASgJEgwKBG5hbWUYAyABKAkSDAoEZGVzYxgEIAEoCRIQCgh3YWxr",
            "X2RpchgFIAEoCRIQCghpY29uX3VybBgGIAEoCRIRCglpbWFnZV91cmwYByAB",
            "KAkSEAoIYW5pbV91cmwYCCADKAkSDAoEYXJlYRgJIAEoCRIRCglkaXJlY3Rp",
            "b24YCiABKAUSFAoMYnVpbGRfaGVpZ2h0GAsgASgFEhIKCmJ1aWxkX3R5cGUY",
            "DCABKAUSEAoIZnJvbV9jaWQYDSABKAUSFgoOY3JlYXRlX3R5cGVfaWQYDiAB",
            "KAUSEwoLY29kZV9saWJfaWQYDyABKAUSMQoKYW5pbWF0aW9ucxgQIAEoCzId",
            "Lk1lbGFuZEdhbWUzLkVudGl0eUFuaW1hdGlvbnMSMAoJYXR0cmlidXRlGBEg",
            "ASgLMh0uTWVsYW5kR2FtZTMuRW50aXR5QXR0cmlidXRlcxIpCgZhdWRpb3MY",
            "EiABKAsyGS5NZWxhbmRHYW1lMy5FbnRpdHlBdWRpb3MSMwoKdGltZV9saW5l",
            "cxgTIAEoCzIfLk1lbGFuZEdhbWUzLkVudGl0eVRpbWVMaW5lTGlzdCJICg5F",
            "bnRpdHlQb3NpdGlvbhITCgt0ZW1wbGF0ZV9pZBgBIAEoCRIhCgN2ZWMYAiAB",
            "KAsyFC5NZWxhbmRHYW1lMy5WZWN0b3IzIrQBChNFbnRpdHlUZW1wbGF0ZUdy",
            "b3VwEhMKC3RlbXBsYXRlX2lkGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEZGVz",
            "YxgDIAEoCRIQCghpY29uX3VybBgEIAEoCRIvCgpldGVtcGxhdGVzGAUgAygL",
            "MhsuTWVsYW5kR2FtZTMuRW50aXR5VGVtcGxhdGUSKQoEZXBvcxgGIAMoCzIb",
            "Lk1lbGFuZEdhbWUzLkVudGl0eVBvc2l0aW9uIkoKDUtleXByZXNzRXZlbnQS",
            "DgoGa2V5X2lkGAEgASgFEikKBXN0YXRlGAIgASgOMhouTWVsYW5kR2FtZTMu",
            "S2V5cHJlc3NTdGF0ZSJCCghLZXlwcmVzcxILCgNrZXkYASABKAkSKQoFc3Rh",
            "dGUYAiABKA4yGi5NZWxhbmRHYW1lMy5LZXlwcmVzc1N0YXRlIpUBCgpJbnB1",
            "dEV2ZW50EikKBHR5cGUYASABKA4yGy5NZWxhbmRHYW1lMy5JbnB1dEV2ZW50",
            "VHlwZRIuCghrZXlwcmVzcxgyIAEoCzIaLk1lbGFuZEdhbWUzLktleXByZXNz",
            "RXZlbnRIABIkCgNrZXkYMyABKAsyFS5NZWxhbmRHYW1lMy5LZXlwcmVzc0gA",
            "QgYKBGRhdGEipAMKDFBhbmVsUHJvZmlsZRIxCgpwYW5lbF90eXBlGAEgASgO",
            "Mh0uTWVsYW5kR2FtZTMuUGFuZWxQcm9maWxlVHlwZRIqCgVzdHlsZRgKIAEo",
            "CzIZLk1lbGFuZEdhbWUzLlBhbmVsQkdTdHlsZUgAEhEKB3Jvd19udW0YCyAB",
            "KAVIABIRCgdjb2xfbnVtGAwgASgFSAASKAoFdGl0bGUYDSABKAsyFy5NZWxh",
            "bmRHYW1lMy5QYW5lbFRpdGxlSAASNQoMZ3JpZF9wcm9maWxlGA4gASgLMh0u",
            "TWVsYW5kR2FtZTMuUGFuZWxHcmlkUHJvZmlsZUgAEjIKCnJvd19oZWlnaHQY",
            "DyABKAsyHC5NZWxhbmRHYW1lMy5QYW5lbFJvd0NvbFNpemVIABIxCgljb2xf",
            "d2lkdGgYECABKAsyHC5NZWxhbmRHYW1lMy5QYW5lbFJvd0NvbFNpemVIABIq",
            "CgZhbmNob3IYESABKAsyGC5NZWxhbmRHYW1lMy5QYW5lbEFuY2hvckgAEhMK",
            "CWlzX2hpZGRlbhgSIAEoCEgAQgYKBGRhdGEiagoMUGFuZWxCR1N0eWxlEiMK",
            "BXN0eWxlGAEgASgOMhQuTWVsYW5kR2FtZTMuQkdTdHlsZRIJCgFyGAIgASgF",
            "EgkKAWcYAyABKAUSCQoBYhgEIAEoBRIUCgx0cmFuc3BhcmVuY3kYBSABKAUi",
            "dgoKUGFuZWxUaXRsZRIQCghjYW5fZm9sZBgBIAEoCBIJCgFyGAIgASgFEgkK",
            "AWcYAyABKAUSCQoBYhgEIAEoBRIUCgx0cmFuc3BhcmVuY3kYBSABKAUSDwoH",
            "Y29udGVudBgGIAEoCRIOCgZoZWlnaHQYByABKAUijwEKEFBhbmVsR3JpZFBy",
            "b2ZpbGUSDwoHY29udGVudBgBIAEoCRImCgVhbGlnbhgCIAEoDjIXLk1lbGFu",
            "ZEdhbWUzLkFsaWduU3R5bGUSDwoHcGljdHVyZRgDIAEoCRIPCgdwZXJjZW50",
            "GAQgASgFEg8KB2NvbF9udW0YBSABKAUSDwoHcm93X251bRgGIAEoBSIuCg9Q",
            "YW5lbFJvd0NvbFNpemUSDQoFd2hpY2gYASABKAUSDAoEc2l6ZRgCIAEoBSJd",
            "CgtQYW5lbEFuY2hvchIoCgNwb3MYASABKA4yGy5NZWxhbmRHYW1lMy5QYW5l",
            "bEFuY2hvclBvcxISCgpob3Jpem9udGFsGAIgASgFEhAKCHZlcnRpY2FsGAMg",
            "ASgFInwKDFNob3dWaWV3RGF0YRIjCgR0eXBlGAEgASgOMhUuTWVsYW5kR2Ft",
            "ZTMuVmlld1R5cGUSPwoSZHVuZ2Vvbl9zY29yZV9kYXRhGAogASgLMiEuTWVs",
            "YW5kR2FtZTMuVmlld0R1bmdlb25TY29yZURhdGFIAEIGCgRkYXRhIqcBChRW",
            "aWV3RHVuZ2VvblNjb3JlRGF0YRISCgpkdW5nZW9uX2lkGAEgASgFEg0KBXNj",
            "b3JlGAIgASgFEhwKFHJlY2VpdmVkX2Jhc2VfcmV3YXJkGAMgAygFEhAKCHN1",
            "cGVyX2x2GAQgASgFEh0KFXJlY2VpdmVkX3N1cGVyX3Jld2FyZBgFIAMoBRId",
            "ChVyZWNlaXZlZF9maW5hbF9yZXdhcmQYBiABKAgiPAoSRHVuZ2VvblN1cGVy",
            "UmV3YXJkEhEKCXJld2FyZF9pZBgBIAEoBRITCgtuZWVkX3ZpcF9sdhgCIAEo",
            "BSI6ChFSZXNvdXJjZVBvaW50SW5mbxIQCghyY19pbmRleBgBIAEoBRITCgty",
            "ZXNvdXJjZV9pZBgCIAEoBSIuCg1Cb3JuUG9pbnRJbmZvEhAKCHJjX2luZGV4",
            "GAEgASgFEgsKA2NpZBgCIAEoBSJcCgVTY29wZRInCgh0b3Bfbm9kZRgBIAEo",
            "CzIVLk1lbGFuZEdhbWUzLlZlY3RvclhZEioKC2JvdHRvbV9ub2RlGAIgASgL",
            "MhUuTWVsYW5kR2FtZTMuVmVjdG9yWFki+wIKCkxlc3NvbkFyZWESFgoObGVz",
            "c29uX2FyZWFfaWQYASABKAkSGwoTbGVzc29uX2FyZWFfY29tbWVudBgCIAEo",
            "CRIYChBsZXNzb25fYXJlYV9uYW1lGAMgASgJEiEKBXNjb3BlGAQgASgLMhIu",
            "TWVsYW5kR2FtZTMuU2NvcGUSJQoGdHBfcG9zGAUgASgLMhUuTWVsYW5kR2Ft",
            "ZTMuVmVjdG9yWFkSFAoMbmV4dF9hcmVhX2lkGAYgASgJEhQKDHByZXZfYXJh",
            "ZV9pZBgHIAEoCRIUCgx0ZXJyYWluc19jaWQYCCABKAUSLgoJc2hvd190eXBl",
            "GAkgASgOMhsuTWVsYW5kR2FtZTMuTGVzc29uU2hvd1R5cGUSLgoJYXJlYV9t",
            "b2RlGAogASgOMhsuTWVsYW5kR2FtZTMuTGVzc29uQXJlYU1vZGUSMgoNY29k",
            "ZV9lbnRpdGllcxgLIAMoCzIbLk1lbGFuZEdhbWUzLkNvZGVFbnRpdHlEYXRh",
            "InwKDkNvZGVFbnRpdHlEYXRhEiAKAWUYASABKAsyFS5NZWxhbmRHYW1lMy5F",
            "bnRpdHlJZBIOCgZlX25hbWUYAiABKAkSCwoDY2lkGAMgASgFEgwKBGljb24Y",
            "BCABKAkSCwoDdGFiGAUgASgFEhAKCHRhYl9uYW1lGAYgASgJIngKFExlc3Nv",
            "bkFyZWFFbnRpdHlEYXRhEiAKAWUYASABKAsyFS5NZWxhbmRHYW1lMy5FbnRp",
            "dHlJZBILCgNjaWQYAiABKAUSDgoGZV9kZXNjGAMgASgJEiEKAnJjGAQgASgL",
            "MhUuTWVsYW5kR2FtZTMuVmVjdG9yWFkixAEKDkxlc3NvbkFyZWFJbmZvEiUK",
            "BGFyZWEYASABKAsyFy5NZWxhbmRHYW1lMy5MZXNzb25BcmVhEjQKCXRwX3Bv",
            "aW50cxgCIAMoCzIhLk1lbGFuZEdhbWUzLkxlc3NvbkFyZWFFbnRpdHlEYXRh",
            "EhQKDGlzX3Jlc2V0dGluZxgDIAEoCBIqCgpsb2NrX3N0YXRlGAQgASgOMhYu",
            "TWVsYW5kR2FtZTMuTG9ja1N0YXRlEhMKC2hhc19hcnJpdmVkGAUgASgIIowD",
            "Cg5MZXNzb25BcmVhRGF0YRI+ChVsZXNzb25fYXJlYV9kYXRhX3R5cGUYASAB",
            "KA4yHy5NZWxhbmRHYW1lMy5MZXNzb25BcmVhRGF0YVR5cGUSDgoEbmFtZRgK",
            "IAEoCUgAEhEKB2NvbW1lbnQYCyABKAlIABIjCgVzY29wZRgMIAEoCzISLk1l",
            "bGFuZEdhbWUzLlNjb3BlSAASJwoGdHBfcG9zGA0gASgLMhUuTWVsYW5kR2Ft",
            "ZTMuVmVjdG9yWFlIABIRCgdhcmVhX2lkGA4gASgJSAASFgoMdGVycmFpbnNf",
            "Y2lkGA8gASgFSAASMgoLZW50aXR5X2RhdGEYECABKAsyGy5NZWxhbmRHYW1l",
            "My5Db2RlRW50aXR5RGF0YUgAEjAKCXNob3dfdHlwZRgRIAEoDjIbLk1lbGFu",
            "ZEdhbWUzLkxlc3NvblNob3dUeXBlSAASMAoJYXJlYV9tb2RlGBIgASgOMhsu",
            "TWVsYW5kR2FtZTMuTGVzc29uQXJlYU1vZGVIAEIGCgRkYXRhIlMKDkFyZWFV",
            "cGRhdGVEYXRhEg8KB2FyZWFfaWQYASABKAkSMAoLdXBkYXRlX2RhdGEYAiAD",
            "KAsyGy5NZWxhbmRHYW1lMy5MZXNzb25BcmVhRGF0YSI5CgxFbnRpdHlPZlRp",
            "bGUSEAoIcmNfaW5kZXgYASABKAUSFwoPcmFuZG9tX2VudGl0aWVzGAIgAygD",
            "In0KE0NhcnJ5RW50aXR5QmFzZURhdGESIQoCaWQYASABKAsyFS5NZWxhbmRH",
            "YW1lMy5FbnRpdHlJZBIoCgNsb2MYAiABKAsyGy5NZWxhbmRHYW1lMy5FbnRp",
            "dHlMb2NhdGlvbhILCgNjaWQYAyABKAUSDAoEaWNvbhgEIAEoCSLmAQoNRW50",
            "aXR5UHJlbG9hZBILCgNjaWQYASABKAUSOgoScHJlbG9hZF9jb2RlX2Jsb2Nr",
            "GAIgASgLMh4uTWVsYW5kR2FtZTMuQ29kZUJsb2NrUHJvZ3JhbXMSOQoTcHJl",
            "bG9hZF9lbnRpdHlfYXR0chgDIAEoCzIcLk1lbGFuZEdhbWUzLkVudGl0eUF0",
            "dHJpYnV0ZRI+ChVwcmVsb2FkX3RpbWVsaW5lX2xpc3QYBCABKAsyHy5NZWxh",
            "bmRHYW1lMy5FbnRpdHlUaW1lTGluZUxpc3QSEQoJZW50aXR5X2lkGAUgASgJ",
            "ImMKDUVudGl0eUN1c0RhdGESCwoDY2lkGAEgASgFEhEKCWZpbGVfbmFtZRgC",
            "IAEoCRIyCg5lbnRpdHlfcHJlbG9hZBgDIAEoCzIaLk1lbGFuZEdhbWUzLkVu",
            "dGl0eVByZWxvYWQigwEKFEVudGl0aWVzUXVpY2tDb2RlVGFiEiUKBmVudGl0",
            "eRgBIAEoCzIVLk1lbGFuZEdhbWUzLkVudGl0eUlkEg4KBnRhYl9pZBgCIAEo",
            "BRITCgtlbnRpdHlfbmFtZRgDIAEoCRIRCglhdmF0YXJDaWQYBCABKAUSDAoE",
            "aWNvbhgFIAEoCSpuCg9TZXJ2ZXJDbG9zZVR5cGUSKQolU2VydmVyQ2xvc2VU",
            "eXBlX1NlcnZlckNsb3NlVHlwZU5vcm1hbBAAEjAKLFNlcnZlckNsb3NlVHlw",
            "ZV9TZXJ2ZXJDbG9zZVR5cGVNYXN0ZXJTaWduT3V0EAEqyAEKC0tpY2tPdXRU",
            "eXBlEiEKHUtpY2tPdXRUeXBlX0tpY2tPdXRUeXBlVW5rbm93EAASKAokS2lj",
            "a091dFR5cGVfS2lja091dFR5cGVSZXBlYXRDb25uZWN0EAESIQodS2lja091",
            "dFR5cGVfS2lja091dFR5cGVPbkhvb2sQAhIiCh5LaWNrT3V0VHlwZV9LaWNr",
            "T3V0VHlwZU92ZXJNYXgQAxIlCiFLaWNrT3V0VHlwZV9LaWNrT3V0VHlwZVJl",
            "c3RhcnRNYXAQBCrsAgoJRW5lbXlUeXBlEiMKH0VuZW15VHlwZV9FbmVteVR5",
            "cGVVbmF0dGFja2FibGUQABIdChlFbmVteVR5cGVfRW5lbXlUeXBlUGxheWVy",
            "EAESGwoXRW5lbXlUeXBlX0VuZW15VHlwZVRyZWUQAhIcChhFbmVteVR5cGVf",
            "RW5lbXlUeXBlR3Jhc3MQAxIcChhFbmVteVR5cGVfRW5lbXlUeXBlU3RvbmUQ",
            "BBIfChtFbmVteVR5cGVfRW5lbXlUeXBlQnVpbGRpbmcQBRIaChZFbmVteVR5",
            "cGVfRW5lbXlUeXBlQm90EAYSHgoaRW5lbXlUeXBlX0VuZW15VHlwZU1vbnN0",
            "ZXIQBxIiCh5FbmVteVR5cGVfRW5lbXlUeXBlVHJlYXN1cmVCb3gQCBIeChpF",
            "bmVteVR5cGVfRW5lbXlUeXBlRmFsbGluZxAJEiEKHUVuZW15VHlwZV9FbmVt",
            "eVR5cGVGYWxsaW5nQm94EAoqlAEKEEVudGl0eUNvZGVTdGF0dXMSKwonRW50",
            "aXR5Q29kZVN0YXR1c19FbnRpdHlDb2RlU3RhdHVzVW5rbm93EAASKAokRW50",
            "aXR5Q29kZVN0YXR1c19FbnRpdHlDb2RlU3RhdHVzUnVuEAESKQolRW50aXR5",
            "Q29kZVN0YXR1c19FbnRpdHlDb2RlU3RhdHVzU3RvcBACKjwKCE1vdmVUeXBl",
            "EhcKE01vdmVUeXBlX01vdmVUeXBlWFkQABIXChNNb3ZlVHlwZV9Nb3ZlVHlw",
            "ZVJDEAEqnAEKDE1vdmVtZW50VHlwZRIkCiBNb3ZlbWVudFR5cGVfTW92ZW1l",
            "bnRUeXBlVW5rbm93bhAAEiEKHU1vdmVtZW50VHlwZV9Nb3ZlbWVudFR5cGVX",
            "YWxrEAESIAocTW92ZW1lbnRUeXBlX01vdmVtZW50VHlwZVJ1bhACEiEKHU1v",
            "dmVtZW50VHlwZV9Nb3ZlbWVudFR5cGVJZGxlEAMqjQUKCk9iamVjdFR5cGUS",
            "IAocT2JqZWN0VHlwZV9PYmplY3RUeXBlVW5rbm93bhAAEh0KGU9iamVjdFR5",
            "cGVfT2JqZWN0VHlwZUdlYXIQARIgChxPYmplY3RUeXBlX09iamVjdFR5cGVC",
            "cmlkZ2V0EAISIAocT2JqZWN0VHlwZV9PYmplY3RUeXBlQ29uc3VtZRADEiEK",
            "HU9iamVjdFR5cGVfT2JqZWN0VHlwZU1hdGVyaWFsEAQSJQohT2JqZWN0VHlw",
            "ZV9PYmplY3RUeXBlQ29uc3RydWN0aW9uEAUSHgoaT2JqZWN0VHlwZV9PYmpl",
            "Y3RUeXBlV2F0ZXIQBhIfChtPYmplY3RUeXBlX09iamVjdFR5cGVHcm91bmQQ",
            "BxIhCh1PYmplY3RUeXBlX09iamVjdFR5cGVSZXNvdXJjZRAIEiEKHU9iamVj",
            "dFR5cGVfT2JqZWN0VHlwZUN1cnJlbmN5EAkSHgoaT2JqZWN0VHlwZV9PYmpl",
            "Y3RUeXBlRmxvb3IQChIdChlPYmplY3RUeXBlX09iamVjdFR5cGVXYWxsEAsS",
            "HwobT2JqZWN0VHlwZV9PYmplY3RUeXBlV2luZG93EAwSJwojT2JqZWN0VHlw",
            "ZV9PYmplY3RUeXBlUGxheWVyQXJlYUZsYWcQDRIcChhPYmplY3RUeXBlX09i",
            "amVjdFR5cGVCb3gQDhIgChxPYmplY3RUeXBlX09iamVjdFR5cGVGb3JtdWxh",
            "EA8SHQoZT2JqZWN0VHlwZV9PYmplY3RUeXBlVm9pZBAQEiAKHE9iamVjdFR5",
            "cGVfT2JqZWN0VHlwZVN1cmZhY2UQERIfChtPYmplY3RUeXBlX09iamVjdFR5",
            "cGVQdXBwZXQQEirMAQoRV2FsbE9iamVjdFN1YlR5cGUSLgoqV2FsbE9iamVj",
            "dFN1YlR5cGVfV2FsbE9iamVjdFN1YlR5cGVVbmtub3duEAASLAooV2FsbE9i",
            "amVjdFN1YlR5cGVfV2FsbE9iamVjdFN1YlR5cGVCYXNpYxABEiwKKFdhbGxP",
            "YmplY3RTdWJUeXBlX1dhbGxPYmplY3RTdWJUeXBlRmVuY2UQAhIrCidXYWxs",
            "T2JqZWN0U3ViVHlwZV9XYWxsT2JqZWN0U3ViVHlwZURvb3IQAyq1AQoTT2Jq",
            "ZWN0QnVpbGRhYmxlVHlwZRI2CjJPYmplY3RCdWlsZGFibGVUeXBlX09iamVj",
            "dEJ1aWxkYWJsZVR5cGVVbmJ1aWxkYWJsZRAAEjQKME9iamVjdEJ1aWxkYWJs",
            "ZVR5cGVfT2JqZWN0QnVpbGRhYmxlVHlwZUJ1aWxkYWJsZRABEjAKLE9iamVj",
            "dEJ1aWxkYWJsZVR5cGVfT2JqZWN0QnVpbGRhYmxlVHlwZU1lcmdlEAIqkAEK",
            "D09iamVjdEJsb2NrVHlwZRInCiNPYmplY3RCbG9ja1R5cGVfT2JqZWN0Qmxv",
            "Y2tUeXBlRnJlZRAAEigKJE9iamVjdEJsb2NrVHlwZV9PYmplY3RCbG9ja1R5",
            "cGVCbG9jaxABEioKJk9iamVjdEJsb2NrVHlwZV9PYmplY3RCbG9ja1R5cGVE",
            "eW5hbWljEAIqmgIKDU9iamVjdFF1YWxpdHkSJgoiT2JqZWN0UXVhbGl0eV9P",
            "YmplY3RRdWFsaXR5VW5rbm93bhAAEiQKIE9iamVjdFF1YWxpdHlfT2JqZWN0",
            "UXVhbGl0eVdoaXRlEAESJAogT2JqZWN0UXVhbGl0eV9PYmplY3RRdWFsaXR5",
            "R3JlZW4QAhIjCh9PYmplY3RRdWFsaXR5X09iamVjdFF1YWxpdHlCbHVlEAMS",
            "JQohT2JqZWN0UXVhbGl0eV9PYmplY3RRdWFsaXR5UHVycGxlEAQSJQohT2Jq",
            "ZWN0UXVhbGl0eV9PYmplY3RRdWFsaXR5T3JhbmdlEAUSIgoeT2JqZWN0UXVh",
            "bGl0eV9PYmplY3RRdWFsaXR5UmVkEAYqmQQKDk9iamVjdEdlYXJUeXBlEigK",
            "JE9iamVjdEdlYXJUeXBlX09iamVjdEdlYXJUeXBlVW5rbm93bhAAEiUKIU9i",
            "amVjdEdlYXJUeXBlX09iamVjdEdlYXJUeXBlSGVhZBABEiUKIU9iamVjdEdl",
            "YXJUeXBlX09iamVjdEdlYXJUeXBlQ29hdBACEiUKIU9iamVjdEdlYXJUeXBl",
            "X09iamVjdEdlYXJUeXBlUGFudBADEiUKIU9iamVjdEdlYXJUeXBlX09iamVj",
            "dEdlYXJUeXBlU2hvZRAEEiUKIU9iamVjdEdlYXJUeXBlX09iamVjdEdlYXJU",
            "eXBlSGFuZBAFEiQKIE9iamVjdEdlYXJUeXBlX09iamVjdEdlYXJUeXBlQXhl",
            "EAYSKAokT2JqZWN0R2VhclR5cGVfT2JqZWN0R2VhclR5cGVQaWNrYXhlEAcS",
            "JgoiT2JqZWN0R2VhclR5cGVfT2JqZWN0R2VhclR5cGVTd29yZBAIEiQKIE9i",
            "amVjdEdlYXJUeXBlX09iamVjdEdlYXJUeXBlQm93EAkSKgomT2JqZWN0R2Vh",
            "clR5cGVfT2JqZWN0R2VhclR5cGVBY2Nlc3NvcnkQChIkCiBPYmplY3RHZWFy",
            "VHlwZV9PYmplY3RHZWFyVHlwZUd1bhALEioKJk9iamVjdEdlYXJUeXBlX09i",
            "amVjdEdlYXJUeXBlRG91YmxlR3VuEAwqqAMKGk9iamVjdEFuaW1hdGlvblRy",
            "aWdnZXJUeXBlEkAKPE9iamVjdEFuaW1hdGlvblRyaWdnZXJUeXBlX09iamVj",
            "dEFuaW1hdGlvblRyaWdnZXJUeXBlVW5rbm93bhAAEj0KOU9iamVjdEFuaW1h",
            "dGlvblRyaWdnZXJUeXBlX09iamVjdEFuaW1hdGlvblRyaWdnZXJUeXBlQXV0",
            "bxABEkEKPU9iamVjdEFuaW1hdGlvblRyaWdnZXJUeXBlX09iamVjdEFuaW1h",
            "dGlvblRyaWdnZXJUeXBlSW50ZXJhY3QQAhI+CjpPYmplY3RBbmltYXRpb25U",
            "cmlnZ2VyVHlwZV9PYmplY3RBbmltYXRpb25UcmlnZ2VyVHlwZVRvdWNoEAMS",
            "Pgo6T2JqZWN0QW5pbWF0aW9uVHJpZ2dlclR5cGVfT2JqZWN0QW5pbWF0aW9u",
            "VHJpZ2dlclR5cGVMZWF2ZRAEEkYKQk9iamVjdEFuaW1hdGlvblRyaWdnZXJU",
            "eXBlX09iamVjdEFuaW1hdGlvblRyaWdnZXJUeXBlT25TdGF0ZUNoYW5nZRAF",
            "KvsCChdPYmplY3RBbmltYXRpb25TdG9wVHlwZRI6CjZPYmplY3RBbmltYXRp",
            "b25TdG9wVHlwZV9PYmplY3RBbmltYXRpb25TdG9wVHlwZVVua25vd24QABI3",
            "CjNPYmplY3RBbmltYXRpb25TdG9wVHlwZV9PYmplY3RBbmltYXRpb25TdG9w",
            "VHlwZUF1dG8QARI7CjdPYmplY3RBbmltYXRpb25TdG9wVHlwZV9PYmplY3RB",
            "bmltYXRpb25TdG9wVHlwZUludGVyYWN0EAISOAo0T2JqZWN0QW5pbWF0aW9u",
            "U3RvcFR5cGVfT2JqZWN0QW5pbWF0aW9uU3RvcFR5cGVMZWF2ZRADEjgKNE9i",
            "amVjdEFuaW1hdGlvblN0b3BUeXBlX09iamVjdEFuaW1hdGlvblN0b3BUeXBl",
            "VG91Y2gQBBI6CjZPYmplY3RBbmltYXRpb25TdG9wVHlwZV9PYmplY3RBbmlt",
            "YXRpb25TdG9wVHlwZU5vblN0b3AQBSp5CghVc2VyVHlwZRIcChhVc2VyVHlw",
            "ZV9Vc2VyVHlwZVVua25vd24QABIbChdVc2VyVHlwZV9Vc2VyVHlwZVBsYXll",
            "chABEhgKFFVzZXJUeXBlX1VzZXJUeXBlQm90EAISGAoUVXNlclR5cGVfVXNl",
            "clR5cGVQZXQQAyqbAgoLVGVycmFpblR5cGUSGwoXVGVycmFpblR5cGVfVGVy",
            "cmFpbk5vbmUQABIcChhUZXJyYWluVHlwZV9UZXJyYWluR3Jhc3MQARIfChtU",
            "ZXJyYWluVHlwZV9UZXJyYWluU3VidGlsaXMQAhIcChhUZXJyYWluVHlwZV9U",
            "ZXJyYWluU2xhdGUQAxIaChZUZXJyYWluVHlwZV9UZXJyYWluTXVkEAQSGwoX",
            "VGVycmFpblR5cGVfVGVycmFpblNub3cQBRIdChlUZXJyYWluVHlwZV9UZXJy",
            "YWluRGVzZXJ0EAYSHAoYVGVycmFpblR5cGVfVGVycmFpblBsYW5rEAcSHAoY",
            "VGVycmFpblR5cGVfVGVycmFpbldhdGVyEAgqnAEKEEdhbWVQcm9qZWN0U3Rh",
            "dGUSKgomR2FtZVByb2plY3RTdGF0ZV9HYW1lUHJvamVjdFN0YXRlRHJhZnQQ",
            "ABIsCihHYW1lUHJvamVjdFN0YXRlX0dhbWVQcm9qZWN0U3RhdGVEZWxldGVk",
            "EAESLgoqR2FtZVByb2plY3RTdGF0ZV9HYW1lUHJvamVjdFN0YXRlUHVibGlz",
            "aGVkEAIqjwEKD0dhbWVQcm9qZWN0VHlwZRIqCiZHYW1lUHJvamVjdFR5cGVf",
            "R2FtZVByb2plY3RUeXBlVW5rbm93bhAAEikKJUdhbWVQcm9qZWN0VHlwZV9H",
            "YW1lUHJvamVjdFR5cGVQbGFuZXQQARIlCiFHYW1lUHJvamVjdFR5cGVfR2Ft",
            "ZVByb2plY3RUeXBlMkQQAipXCgxDdXJyZW5jeVR5cGUSJAogQ3VycmVuY3lU",
            "eXBlX0N1cnJlbmN5VHlwZVVua25vd24QABIhCh1DdXJyZW5jeVR5cGVfQ3Vy",
            "cmVuY3lUeXBlR29sZBABKrgBChRBY2hpZXZlT2JqZWN0aXZlVHlwZRIzCi9B",
            "Y2hpZXZlT2JqZWN0aXZlVHlwZV9BY2hpZXZlT2JqZWN0aXZlVHlwZVVua25v",
            "dxAAEjUKMUFjaGlldmVPYmplY3RpdmVUeXBlX0FjaGlldmVPYmplY3RpdmVU",
            "eXBlRXhwbG9yZWQQARI0CjBBY2hpZXZlT2JqZWN0aXZlVHlwZV9BY2hpZXZl",
            "T2JqZWN0aXZlVHlwZU1vbnN0ZXIQAiqgAwoPQ2hhdENoYW5uZWxUeXBlEioK",
            "JkNoYXRDaGFubmVsVHlwZV9DaGF0Q2hhbm5lbFR5cGVVbmtub3duEAASKQol",
            "Q2hhdENoYW5uZWxUeXBlX0NoYXRDaGFubmVsVHlwZVN5c3RlbRABEigKJENo",
            "YXRDaGFubmVsVHlwZV9DaGF0Q2hhbm5lbFR5cGVXb3JsZBACEiYKIkNoYXRD",
            "aGFubmVsVHlwZV9DaGF0Q2hhbm5lbFR5cGVNYXAQAxIrCidDaGF0Q2hhbm5l",
            "bFR5cGVfQ2hhdENoYW5uZWxUeXBlSW5zdGFuY2UQBBIpCiVDaGF0Q2hhbm5l",
            "bFR5cGVfQ2hhdENoYW5uZWxUeXBlTmVhcmJ5EAUSKgomQ2hhdENoYW5uZWxU",
            "eXBlX0NoYXRDaGFubmVsVHlwZVByaXZhdGUQBhIwCixDaGF0Q2hhbm5lbFR5",
            "cGVfQ2hhdENoYW5uZWxUeXBlQ29tcHJlaGVuc2l2ZRAHEi4KKkNoYXRDaGFu",
            "bmVsVHlwZV9DaGF0Q2hhbm5lbFR5cGVOZWFyYnlUb0JvdBAIKkYKCUNoYXRT",
            "dGF0ZRIdChlDaGF0U3RhdGVfQ2hhdFN0YXRlTm9ybWFsEAASGgoWQ2hhdFN0",
            "YXRlX0NoYXRTdGF0ZUJhbhABKusCCg9NaW5pbWFwTWFya1R5cGUSKgomTWlu",
            "aW1hcE1hcmtUeXBlX01pbmltYXBNYXJrVHlwZVVua25vd24QABImCiJNaW5p",
            "bWFwTWFya1R5cGVfTWluaW1hcE1hcmtUeXBlTnBjEAESJwojTWluaW1hcE1h",
            "cmtUeXBlX01pbmltYXBNYXJrVHlwZVRvd24QAhInCiNNaW5pbWFwTWFya1R5",
            "cGVfTWluaW1hcE1hcmtUeXBlSG9tZRADEikKJU1pbmltYXBNYXJrVHlwZV9N",
            "aW5pbWFwTWFya1R5cGVDdXN0b20QBBIwCixNaW5pbWFwTWFya1R5cGVfTWlu",
            "aW1hcE1hcmtUeXBlVHJhbnNmZXJQb2ludBAFEi0KKU1pbmltYXBNYXJrVHlw",
            "ZV9NaW5pbWFwTWFya1R5cGVEZWF0aFBvaW50EAYSJgoiTWluaW1hcE1hcmtU",
            "eXBlX01pbmltYXBNYXJrVHlwZUJvdBAHKrwFChZNaW5pbWFwTWFya0Rpc3Bs",
            "YXlUeXBlEjgKNE1pbmltYXBNYXJrRGlzcGxheVR5cGVfTWluaW1hcE1hcmtE",
            "aXNwbGF5VHlwZVVua25vd24QABI8CjhNaW5pbWFwTWFya0Rpc3BsYXlUeXBl",
            "X01pbmltYXBNYXJrRGlzcGxheVR5cGVCbHVlQmFsbG9vbhABEj4KOk1pbmlt",
            "YXBNYXJrRGlzcGxheVR5cGVfTWluaW1hcE1hcmtEaXNwbGF5VHlwZVllbGxv",
            "d0JhbGxvb24QAhI+CjpNaW5pbWFwTWFya0Rpc3BsYXlUeXBlX01pbmltYXBN",
            "YXJrRGlzcGxheVR5cGVQdXJwbGVCYWxsb29uEAMSOwo3TWluaW1hcE1hcmtE",
            "aXNwbGF5VHlwZV9NaW5pbWFwTWFya0Rpc3BsYXlUeXBlWWVsbG93U3RhchAE",
            "EjsKN01pbmltYXBNYXJrRGlzcGxheVR5cGVfTWluaW1hcE1hcmtEaXNwbGF5",
            "VHlwZUJsdWVBbmNob3IQBRI8CjhNaW5pbWFwTWFya0Rpc3BsYXlUeXBlX01p",
            "bmltYXBNYXJrRGlzcGxheVR5cGVQdXJwbGVIZWFydBAGEjsKN01pbmltYXBN",
            "YXJrRGlzcGxheVR5cGVfTWluaW1hcE1hcmtEaXNwbGF5VHlwZU9yYW5nZUZs",
            "YWcQBxI7CjdNaW5pbWFwTWFya0Rpc3BsYXlUeXBlX01pbmltYXBNYXJrRGlz",
            "cGxheVR5cGVHcmVlblRyYWluEAgSPwo7TWluaW1hcE1hcmtEaXNwbGF5VHlw",
            "ZV9NaW5pbWFwTWFya0Rpc3BsYXlUeXBlUHVycGxlVHJpYW5nbGUQCRI3CjNN",
            "aW5pbWFwTWFya0Rpc3BsYXlUeXBlX01pbmltYXBNYXJrRGlzcGxheVR5cGVC",
            "bGFja1gQCip/ChNFbnRpdHlTY2VuZUVmZmVjdElkEjIKLkVudGl0eVNjZW5l",
            "RWZmZWN0SWRfRW50aXR5U2NlbmVFZmZlY3RJZFVua25vd24QABI0Ci9FbnRp",
            "dHlTY2VuZUVmZmVjdElkX0VudGl0eVNjZW5lRWZmZWN0QnViYmxlVGV4dBDp",
            "ByqyAQoUQnViYmxlVGV4dEVmZmVjdFR5cGUSMwovQnViYmxlVGV4dEVmZmVj",
            "dFR5cGVfQnViYmxlVGV4dEVmZmVjdFR5cGVOb3JtYWwQABIyCi5CdWJibGVU",
            "ZXh0RWZmZWN0VHlwZV9CdWJibGVUZXh0RWZmZWN0VHlwZUNsb3VkEAESMQot",
            "QnViYmxlVGV4dEVmZmVjdFR5cGVfQnViYmxlVGV4dEVmZmVjdFR5cGVWaWJl",
            "EAIqMgoEQ2FtcBIUChBDYW1wX0NhbXBOZXV0cmFsEAASFAoPQ2FtcF9DYW1w",
            "UGxheWVyEOgHKsYBCgxNb25zdGVyU3RhdGUSJAogTW9uc3RlclN0YXRlX01v",
            "bnN0ZXJTdGF0ZVVuS25vd24QABIjCh9Nb25zdGVyU3RhdGVfTW9uc3RlclN0",
            "YXRlUGF0cm9sEAESIwofTW9uc3RlclN0YXRlX01vbnN0ZXJTdGF0ZUNvbWJh",
            "dBACEiMKH01vbnN0ZXJTdGF0ZV9Nb25zdGVyU3RhdGVFc2NhcGUQAxIhCh1N",
            "b25zdGVyU3RhdGVfTW9uc3RlclN0YXRlQmFjaxAEKrgBCg5Nb25zdGVyQXR0",
            "VHlwZRIoCiRNb25zdGVyQXR0VHlwZV9Nb25zdGVyQXR0VHlwZVVua25vd24Q",
            "ABIrCidNb25zdGVyQXR0VHlwZV9Nb25zdGVyQXR0VHlwZUluaXRpYXRpdmUQ",
            "ARIoCiRNb25zdGVyQXR0VHlwZV9Nb25zdGVyQXR0VHlwZVBhc3NpdmUQAhIl",
            "CiFNb25zdGVyQXR0VHlwZV9Nb25zdGVyQXR0VHlwZUR1bWIQAyrLAQoRTW9u",
            "c3RlclBhdHJvbFR5cGUSLgoqTW9uc3RlclBhdHJvbFR5cGVfTW9uc3RlclBh",
            "dHJvbFR5cGVVbmtub3duEAASKwonTW9uc3RlclBhdHJvbFR5cGVfTW9uc3Rl",
            "clBhdHJvbFR5cGVEdW1iEAESLQopTW9uc3RlclBhdHJvbFR5cGVfTW9uc3Rl",
            "clBhdHJvbFR5cGVSYW5kb20QAhIqCiZNb25zdGVyUGF0cm9sVHlwZV9Nb25z",
            "dGVyUGF0cm9sVHlwZUZpeBADKlQKC01vbnN0ZXJUeXBlEiIKHk1vbnN0ZXJU",
            "eXBlX01vbnN0ZXJUeXBlVW5rbm93bhAAEiEKHU1vbnN0ZXJUeXBlX01vbnN0",
            "ZXJUeXBlTGl2aW5nEAEq0AEKDE1hdGVyaWFsVHlwZRIkCiBNYXRlcmlhbFR5",
            "cGVfTWF0ZXJpYWxUeXBlVW5rbm93bhAAEjEKLU1hdGVyaWFsVHlwZV9NYXRl",
            "cmlhbFR5cGVSZXNvdXJjZUNvbGxlY3RCeUhvZRABEjEKLU1hdGVyaWFsVHlw",
            "ZV9NYXRlcmlhbFR5cGVSZXNvdXJjZUNvbGxlY3RCeUF4ZRACEjQKME1hdGVy",
            "aWFsVHlwZV9NYXRlcmlhbFR5cGVSZXNvdXJjZUNvbGxlY3REaXJlY3RseRAD",
            "KqgBCglCb3RTdGF0dXMSHgoaQm90U3RhdHVzX0JvdFN0YXR1c1Vua25vd24Q",
            "ABIbChdCb3RTdGF0dXNfQm90U3RhdHVzU3RvcBABEh4KGkJvdFN0YXR1c19C",
            "b3RTdGF0dXNTdXNwZW5kEAISHgoaQm90U3RhdHVzX0JvdFN0YXR1c1J1bm5p",
            "bmcQAxIeChpCb3RTdGF0dXNfQm90U3RhdHVzT2ZmbGluZRAEKp4BCglEaXJl",
            "Y3Rpb24SHgoaRGlyZWN0aW9uX0RpcmVjdGlvblVua25vd24QABIZChVEaXJl",
            "Y3Rpb25fRGlyZWN0aW9uVXAQARIbChdEaXJlY3Rpb25fRGlyZWN0aW9uTGVm",
            "dBACEhsKF0RpcmVjdGlvbl9EaXJlY3Rpb25Eb3duEAMSHAoYRGlyZWN0aW9u",
            "X0RpcmVjdGlvblJpZ2h0EAQquwEKFUNvZGVibG9ja1RlbXBsYXRlVHlwZRI2",
            "CjJDb2RlYmxvY2tUZW1wbGF0ZVR5cGVfQ29kZWJsb2NrVGVtcGxhdGVUeXBl",
            "VW5rbm93bhAAEjUKMUNvZGVibG9ja1RlbXBsYXRlVHlwZV9Db2RlYmxvY2tU",
            "ZW1wbGF0ZVR5cGVTeXN0ZW0QARIzCi9Db2RlYmxvY2tUZW1wbGF0ZVR5cGVf",
            "Q29kZWJsb2NrVGVtcGxhdGVUeXBlVXNlchACKtQBCgtXZWF0aGVyVHlwZRIf",
            "ChtXZWF0aGVyVHlwZV9XZWF0aGVyVHlwZU5vbmUQABIfChtXZWF0aGVyVHlw",
            "ZV9XZWF0aGVyVHlwZVJhaW4QARIfChtXZWF0aGVyVHlwZV9XZWF0aGVyVHlw",
            "ZVNub3cQAhIfChtXZWF0aGVyVHlwZV9XZWF0aGVyVHlwZVdpbmQQAxIfChtX",
            "ZWF0aGVyVHlwZV9XZWF0aGVyVHlwZUZpcmUQBBIgChxXZWF0aGVyVHlwZV9X",
            "ZWF0aGVyVHlwZU1pYXNtEAUqyAEKDkRhaWx5Q3ljbGVUeXBlEiMKH0RhaWx5",
            "Q3ljbGVUeXBlX0RhaWx5Q3ljbGVVbmtub3cQABIkCiBEYWlseUN5Y2xlVHlw",
            "ZV9EYWlseUN5Y2xlRGF5VGltZRABEiIKHkRhaWx5Q3ljbGVUeXBlX0RhaWx5",
            "Q3ljbGVOaWdodBACEiQKIERhaWx5Q3ljbGVUeXBlX0RhaWx5Q3ljbGVNb3Ju",
            "aW5nEAMSIQodRGFpbHlDeWNsZVR5cGVfRGFpbHlDeWNsZUR1c2sQBCp5CgtB",
            "Y2hpZXZlVHlwZRIhCh1BY2hpZXZlVHlwZV9BY2hpZXZlVHlwZVVua25vdxAA",
            "EiMKH0FjaGlldmVUeXBlX0FjaGlldmVUeXBlRXhwbG9yZWQQARIiCh5BY2hp",
            "ZXZlVHlwZV9BY2hpZXZlVHlwZU1vbnN0ZXIQAip7CgxPcGVyYXRvclR5cGUS",
            "JAogT3BlcmF0b3JUeXBlX09wZXJhdG9yVHlwZVVua25vd24QABIjCh9PcGVy",
            "YXRvclR5cGVfT3BlcmF0b3JUeXBlUGxheWVyEAESIAocT3BlcmF0b3JUeXBl",
            "X09wZXJhdG9yVHlwZUJvdBACKpoBCgZPU1R5cGUSFwoTT1NUeXBlX09TVHlw",
            "ZVVua25vdxAAEhgKFE9TVHlwZV9PU1R5cGVBbmRyb2lkEAESFAoQT1NUeXBl",
            "X09TVHlwZUlPUxACEhQKEE9TVHlwZV9PU1R5cGVNYWMQAxIZChVPU1R5cGVf",
            "T1NUeXBlV2luUGhvbmUQBBIWChJPU1R5cGVfT1NUeXBlV2luUGMQBSpQCgxQ",
            "bGF0Zm9ybVR5cGUSHwobUGxhdGZvcm1UeXBlX1BsYXRmb3JtVW5Lbm93EAAS",
            "HwobUGxhdGZvcm1UeXBlX1BsYXRmb3JtVGFwVGFwEAEqYwoJUG93ZXJUeXBl",
            "EhoKFlBvd2VyVHlwZV9Qb3dlclR5cGVBbGwQABIdChlQb3dlclR5cGVfUG93",
            "ZXJUeXBlRnJpZW5kEAESGwoXUG93ZXJUeXBlX1Bvd2VyVHlwZVNlbGYQAipw",
            "CgpCdWlsZE1vZGVsEiAKHEJ1aWxkTW9kZWxfQnVpbGRNb2RlbFVua25vd24Q",
            "ABIfChtCdWlsZE1vZGVsX0J1aWxkTW9kZWxDcmVhdGUQARIfChtCdWlsZE1v",
            "ZGVsX0J1aWxkTW9kZWxSZW1vdmUQAiq8AQoKRW50aXR5RnJvbRIeChpFbnRp",
            "dHlGcm9tX0VudGl0eUZyb21CdWlsZBAAEh0KGUVudGl0eUZyb21fRW50aXR5",
            "RnJvbURyb3AQARIgChxFbnRpdHlGcm9tX0VudGl0eUZyb21EaXNjYXJkEAIS",
            "JgoiRW50aXR5RnJvbV9FbnRpdHlGcm9tUmVzb3VyY2VQb2ludBADEiUKIUVu",
            "dGl0eUZyb21fRW50aXR5RnJvbVVzZUl0ZW1CdWlsZBAEKoIBCg1BbmltYXRp",
            "b25UeXBlEiYKIkFuaW1hdGlvblR5cGVfQW5pbWF0aW9uVHlwZVVua25vd24Q",
            "ABIkCiBBbmltYXRpb25UeXBlX0FuaW1hdGlvblR5cGVGcmFtZRABEiMKH0Fu",
            "aW1hdGlvblR5cGVfQW5pbWF0aW9uVHlwZUJvbmUQAiqTAQoOSW5wdXRFdmVu",
            "dFR5cGUSKAokSW5wdXRFdmVudFR5cGVfSW5wdXRFdmVudFR5cGVVbmtub3du",
            "EAASLAooSW5wdXRFdmVudFR5cGVfSW5wdXRFdmVudFR5cGVTcGVjaWZpY0tl",
            "eRABEikKJUlucHV0RXZlbnRUeXBlX0lucHV0RXZlbnRUeXBlS2V5cHJlc3MQ",
            "AipYCg1LZXlwcmVzc1N0YXRlEhQKEEtleXByZXNzU3RhdGVfVXAQABIWChJL",
            "ZXlwcmVzc1N0YXRlX0Rvd24QARIZChVLZXlwcmVzc1N0YXRlX0Rvd25pbmcQ",
            "AirlAQoLU3BlY2lmaWNLZXkSIgoeU3BlY2lmaWNLZXlfU3BlY2lmaWNLZXlJ",
            "bnZhbGlkEAASIAobU3BlY2lmaWNLZXlfU3BlY2lmaWNLZXlUaWNrEKxNEicK",
            "IlNwZWNpZmljS2V5X1NwZWNpZmljS2V5Q2lyY3VsYXJpdHkQrU0SHQoYU3Bl",
            "Y2lmaWNLZXlfU3BlY2lmaWNLZXlYEK5NEiIKHVNwZWNpZmljS2V5X1NwZWNp",
            "ZmljS2V5U3F1YXJlEK9NEiQKH1NwZWNpZmljS2V5X1NwZWNpZmljS2V5VHJp",
            "YW5nbGUQsE0qmgMKEFBhbmVsUHJvZmlsZVR5cGUSJQohUGFuZWxQcm9maWxl",
            "VHlwZV9QYW5lbFR5cGVCR1N0eWxlEAASJAogUGFuZWxQcm9maWxlVHlwZV9Q",
            "YW5lbFR5cGVSb3dOdW0QARIkCiBQYW5lbFByb2ZpbGVUeXBlX1BhbmVsVHlw",
            "ZUNvbE51bRACEiMKH1BhbmVsUHJvZmlsZVR5cGVfUGFuZWxUeXBlVGl0bGUQ",
            "AxIpCiVQYW5lbFByb2ZpbGVUeXBlX1BhbmVsVHlwZUdyaWRQcm9maWxlEAQS",
            "JAogUGFuZWxQcm9maWxlVHlwZV9QYW5lbFR5cGVIZWlnaHQQBRIjCh9QYW5l",
            "bFByb2ZpbGVUeXBlX1BhbmVsVHlwZVdpZHRoEAYSJAogUGFuZWxQcm9maWxl",
            "VHlwZV9QYW5lbFR5cGVBbmNob3IQBxImCiJQYW5lbFByb2ZpbGVUeXBlX1Bh",
            "bmVsVHlwZUlzSGlkZGVuEAgSKgomUGFuZWxQcm9maWxlVHlwZV9QYW5lbFR5",
            "cGVUaXRsZUJHQ29sb3IQCSpoCgdCR1N0eWxlEhIKDkJHU3R5bGVfTm9ybWFs",
            "EAASFgoSQkdTdHlsZV9HcmFkdWFsTFRSEAESFgoSQkdTdHlsZV9HcmFkdWFs",
            "UlRMEAISGQoVQkdTdHlsZV9HcmFkdWFsU3ByZWFkEAMqTgoKQWxpZ25TdHls",
            "ZRITCg9BbGlnblN0eWxlX0xlZnQQABIUChBBbGlnblN0eWxlX1JpZ2h0EAES",
            "FQoRQWxpZ25TdHlsZV9DZW50ZXIQAiqMAgoOUGFuZWxBbmNob3JQb3MSGQoV",
            "UGFuZWxBbmNob3JQb3NfTGVmdFVwEAASGAoUUGFuZWxBbmNob3JQb3NfTWlk",
            "VXAQARIaChZQYW5lbEFuY2hvclBvc19SaWdodFVwEAISGgoWUGFuZWxBbmNo",
            "b3JQb3NfTGVmdE1pZBADEhkKFVBhbmVsQW5jaG9yUG9zX01pZE1pZBAEEhsK",
            "F1BhbmVsQW5jaG9yUG9zX1JpZ2h0TWlkEAUSGwoXUGFuZWxBbmNob3JQb3Nf",
            "TGVmdERvd24QBhIaChZQYW5lbEFuY2hvclBvc19NaWREb3duEAcSHAoYUGFu",
            "ZWxBbmNob3JQb3NfUmlnaHREb3duEAgqjQEKDkVudGl0eUxvY2tUeXBlEigK",
            "JEVudGl0eUxvY2tUeXBlX0VudGl0eUxvY2tUeXBlVW5rbm93bhAAEicKI0Vu",
            "dGl0eUxvY2tUeXBlX0VudGl0eUxvY2tUeXBlQ29kaW5nEAESKAokRW50aXR5",
            "TG9ja1R5cGVfRW50aXR5TG9ja1R5cGVFZGl0aW5nEAIq/AEKD0NvZGVSZXN0",
            "YXJ0VHlwZRIsCihDb2RlUmVzdGFydFR5cGVfQ29kZVJlc3RhcnRUeXBlUHVi",
            "bGljTWFwEAASLQopQ29kZVJlc3RhcnRUeXBlX0NvZGVSZXN0YXJ0VHlwZVBs",
            "YXllckFyZWEQARIpCiVDb2RlUmVzdGFydFR5cGVfQ29kZVJlc3RhcnRUeXBl",
            "RW50aXR5EAISLQopQ29kZVJlc3RhcnRUeXBlX0NvZGVSZXN0YXJ0VHlwZUxl",
            "c3NvbkFyZWEQAxIyCi5Db2RlUmVzdGFydFR5cGVfQ29kZVJlc3RhcnRUeXBl",
            "RW50aXR5UXVpY2tDb2RlEAQqsgIKCFZpZXdUeXBlEhsKF1ZpZXdUeXBlX1Zp",
            "ZXdUeXBlVW5rbm93EAASIQodVmlld1R5cGVfVmlld1R5cGVEdW5nZW9uU2Nv",
            "cmUQARIjCh9WaWV3VHlwZV9WaWV3VHlwZVRlbXBsYXRlQ3JlYXRlEAISHQoZ",
            "Vmlld1R5cGVfVmlld1R5cGVCYWNrcGFjaxADEh8KG1ZpZXdUeXBlX1ZpZXdU",
            "eXBlTGVzc29uUGxhbhAEEh8KG1ZpZXdUeXBlX1ZpZXdUeXBlSWRlVGVycmFp",
            "bhAFEh0KGVZpZXdUeXBlX1ZpZXdUeXBlSWRlQnVpbGQQBhIhCh1WaWV3VHlw",
            "ZV9WaWV3VHlwZUlkZUF0dHJpYnV0ZRAHEh4KGlZpZXdUeXBlX1ZpZXdUeXBl",
            "Q29kZUJsb2NrEAgqywEKEUR1bmdlb25SZXdhcmRUeXBlEi0KKUR1bmdlb25S",
            "ZXdhcmRUeXBlX0R1bmdlb25SZXdhcmRUeXBlVW5rbm93EAASKwonRHVuZ2Vv",
            "blJld2FyZFR5cGVfRHVuZ2VvblJld2FyZFR5cGVCYXNlEAESLAooRHVuZ2Vv",
            "blJld2FyZFR5cGVfRHVuZ2VvblJld2FyZFR5cGVTdXBlchACEiwKKER1bmdl",
            "b25SZXdhcmRUeXBlX0R1bmdlb25SZXdhcmRUeXBlRmluYWwQAyqfAQoLT3Bl",
            "blVybFR5cGUSIQodT3BlblVybFR5cGVfT3BlblVybFR5cGVXaW5kb3cQABIi",
            "Ch5PcGVuVXJsVHlwZV9PcGVuVXJsVHlwZVdlYlZpZXcQARIlCiFPcGVuVXJs",
            "VHlwZV9PcGVuVXJsVHlwZUZ1bGxTY3JlZW4QAhIiCh5PcGVuVXJsVHlwZV9P",
            "cGVuVXJsVHlwZVdlYlBhZ2UQAyqNAQoOTGVzc29uQXJlYU1vZGUSJwojTGVz",
            "c29uQXJlYU1vZGVfTGVzc29uQXJlYU1vZGVOb3JtYWwQABIqCiZMZXNzb25B",
            "cmVhTW9kZV9MZXNzb25BcmVhTW9kZVF1aWNrQ29kZRABEiYKIkxlc3NvbkFy",
            "ZWFNb2RlX0xlc3NvbkFyZWFNb2RlVmlkZW8QAipgCg5MZXNzb25TaG93VHlw",
            "ZRIkCiBMZXNzb25TaG93VHlwZV9MZXNzb25TaG93VHlwZUFsbBAAEigKJExl",
            "c3NvblNob3dUeXBlX0xlc3NvblNob3dUeXBlVGVhY2hlchABKoUBCglMb2Nr",
            "U3RhdGUSHQoZTG9ja1N0YXRlX0xvY2tTdGF0ZVVua293bhAAEhoKFkxvY2tT",
            "dGF0ZV9Mb2NrU3RhdGVBbGwQARIeChpMb2NrU3RhdGVfTG9ja1N0YXRlU3R1",
            "ZGVudBACEh0KGUxvY2tTdGF0ZV9Mb2NrU3RhdGVOb0JvZHkQAyqGBQoSTGVz",
            "c29uQXJlYURhdGFUeXBlEi0KKUxlc3NvbkFyZWFEYXRhVHlwZV9MZXNzb25B",
            "cmVhRGF0YVR5cGVOYW1lEAASLgoqTGVzc29uQXJlYURhdGFUeXBlX0xlc3Nv",
            "bkFyZWFEYXRhVHlwZVNjb3BlEAESLgoqTGVzc29uQXJlYURhdGFUeXBlX0xl",
            "c3NvbkFyZWFEYXRhVHlwZVRwUG9zEAISMAosTGVzc29uQXJlYURhdGFUeXBl",
            "X0xlc3NvbkFyZWFEYXRhVHlwZUNvbW1lbnQQAxIxCi1MZXNzb25BcmVhRGF0",
            "YVR5cGVfTGVzc29uQXJlYURhdGFUeXBlTmV4dEFyZWEQBBIxCi1MZXNzb25B",
            "cmVhRGF0YVR5cGVfTGVzc29uQXJlYURhdGFUeXBlUHJldkFyZWEQBRI0CjBM",
            "ZXNzb25BcmVhRGF0YVR5cGVfTGVzc29uQXJlYURhdGFUeXBlVGVycmFpbnND",
            "aWQQBhI2CjJMZXNzb25BcmVhRGF0YVR5cGVfTGVzc29uQXJlYURhdGFUeXBl",
            "QWRkQ29kZUVudGl0eRAHEjcKM0xlc3NvbkFyZWFEYXRhVHlwZV9MZXNzb25B",
            "cmVhRGF0YVR5cGVFZGl0Q29kZUVudGl0eRAIEjYKMkxlc3NvbkFyZWFEYXRh",
            "VHlwZV9MZXNzb25BcmVhRGF0YVR5cGVEZWxDb2RlRW50aXR5EAkSNwozTGVz",
            "c29uQXJlYURhdGFUeXBlX0xlc3NvbkFyZWFEYXRhVHlwZUxlc3NvblNob3dU",
            "eXBlEAoSMQotTGVzc29uQXJlYURhdGFUeXBlX0xlc3NvbkFyZWFEYXRhVHlw",
            "ZUFyZWFNb2RlEAsqngIKFExlc3NvbkFyZWFVcGRhdGVUeXBlEjMKL0xlc3Nv",
            "bkFyZWFVcGRhdGVUeXBlX0xlc3NvbkFyZWFVcGRhdGVUeXBlTm9ybWFsEAAS",
            "MAosTGVzc29uQXJlYVVwZGF0ZVR5cGVfTGVzc29uQXJlYVVwZGF0ZVR5cGVB",
            "ZGQQARIwCixMZXNzb25BcmVhVXBkYXRlVHlwZV9MZXNzb25BcmVhVXBkYXRl",
            "VHlwZURlbBACEjgKNExlc3NvbkFyZWFVcGRhdGVUeXBlX0xlc3NvbkFyZWFV",
            "cGRhdGVUeXBlSW5kZXhDaGFuZ2UQAxIzCi9MZXNzb25BcmVhVXBkYXRlVHlw",
            "ZV9MZXNzb25BcmVhVXBkYXRlVHlwZVVubG9jaxAEKs4BChFDaGFuZ2VTY2Vu",
            "ZUVmZmVjdBItCilDaGFuZ2VTY2VuZUVmZmVjdF9DaGFuZ2VTY2VuZUVmZmVj",
            "dFVua293bhAAEisKJ0NoYW5nZVNjZW5lRWZmZWN0X0NoYW5nZVNjZW5lRWZm",
            "ZWN0TWlzdBABEiwKKENoYW5nZVNjZW5lRWZmZWN0X0NoYW5nZVNjZW5lRWZm",
            "ZWN0QmxhY2sQAhIvCitDaGFuZ2VTY2VuZUVmZmVjdF9DaGFuZ2VTY2VuZUVm",
            "ZmVjdERvcmFlbW9uEAMqjAEKDUV4Y2x1c2lvblR5cGUSHgoaRXhjbHVzaW9u",
            "VHlwZV9FeFR5cGVVbmtvd24QABIgChxFeGNsdXNpb25UeXBlX0V4VHlwZU5v",
            "dEJ1aWxkEAESGwoXRXhjbHVzaW9uVHlwZV9FeFR5cGVEZWwQAhIcChhFeGNs",
            "dXNpb25UeXBlX0V4VHlwZU1vdmUQA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MelandGame3.AstReflection.Descriptor, global::MelandGame3.EntityProfileFieldReflection.Descriptor, global::MelandGame3.TypeDefineReflection.Descriptor, global::MelandGame3.WidgetReflection.Descriptor, global::MelandGame3.MapReflection.Descriptor, global::MelandGame3.AudioReflection.Descriptor, global::MelandGame3.BigWorldReflection.Descriptor, global::MelandGame3.ItemReflection.Descriptor, global::MelandGame3.BuffReflection.Descriptor, global::MelandGame3.VectorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MelandGame3.ServerCloseType), typeof(global::MelandGame3.KickOutType), typeof(global::MelandGame3.EnemyType), typeof(global::MelandGame3.EntityCodeStatus), typeof(global::MelandGame3.MoveType), typeof(global::MelandGame3.MovementType), typeof(global::MelandGame3.ObjectType), typeof(global::MelandGame3.WallObjectSubType), typeof(global::MelandGame3.ObjectBuildableType), typeof(global::MelandGame3.ObjectBlockType), typeof(global::MelandGame3.ObjectQuality), typeof(global::MelandGame3.ObjectGearType), typeof(global::MelandGame3.ObjectAnimationTriggerType), typeof(global::MelandGame3.ObjectAnimationStopType), typeof(global::MelandGame3.UserType), typeof(global::MelandGame3.TerrainType), typeof(global::MelandGame3.GameProjectState), typeof(global::MelandGame3.GameProjectType), typeof(global::MelandGame3.CurrencyType), typeof(global::MelandGame3.AchieveObjectiveType), typeof(global::MelandGame3.ChatChannelType), typeof(global::MelandGame3.ChatState), typeof(global::MelandGame3.MinimapMarkType), typeof(global::MelandGame3.MinimapMarkDisplayType), typeof(global::MelandGame3.EntitySceneEffectId), typeof(global::MelandGame3.BubbleTextEffectType), typeof(global::MelandGame3.Camp), typeof(global::MelandGame3.MonsterState), typeof(global::MelandGame3.MonsterAttType), typeof(global::MelandGame3.MonsterPatrolType), typeof(global::MelandGame3.MonsterType), typeof(global::MelandGame3.MaterialType), typeof(global::MelandGame3.BotStatus), typeof(global::MelandGame3.Direction), typeof(global::MelandGame3.CodeblockTemplateType), typeof(global::MelandGame3.WeatherType), typeof(global::MelandGame3.DailyCycleType), typeof(global::MelandGame3.AchieveType), typeof(global::MelandGame3.OperatorType), typeof(global::MelandGame3.OSType), typeof(global::MelandGame3.PlatformType), typeof(global::MelandGame3.PowerType), typeof(global::MelandGame3.BuildModel), typeof(global::MelandGame3.EntityFrom), typeof(global::MelandGame3.AnimationType), typeof(global::MelandGame3.InputEventType), typeof(global::MelandGame3.KeypressState), typeof(global::MelandGame3.SpecificKey), typeof(global::MelandGame3.PanelProfileType), typeof(global::MelandGame3.BGStyle), typeof(global::MelandGame3.AlignStyle), typeof(global::MelandGame3.PanelAnchorPos), typeof(global::MelandGame3.EntityLockType), typeof(global::MelandGame3.CodeRestartType), typeof(global::MelandGame3.ViewType), typeof(global::MelandGame3.DungeonRewardType), typeof(global::MelandGame3.OpenUrlType), typeof(global::MelandGame3.LessonAreaMode), typeof(global::MelandGame3.LessonShowType), typeof(global::MelandGame3.LockState), typeof(global::MelandGame3.LessonAreaDataType), typeof(global::MelandGame3.LessonAreaUpdateType), typeof(global::MelandGame3.ChangeSceneEffect), typeof(global::MelandGame3.ExclusionType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PbBellClassUserInfo), global::MelandGame3.PbBellClassUserInfo.Parser, new[]{ "HashId", "UserId", "Username", "RealName", "UserType", "Nickname", "GoldNum", "CodeNum", "UserIdStr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.AccountInfo), global::MelandGame3.AccountInfo.Parser, new[]{ "Data", "DataHash", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Stuffs), global::MelandGame3.Stuffs.Parser, new[]{ "Cid", "Quantity", "RandAttr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.RoleSettings), global::MelandGame3.RoleSettings.Parser, new[]{ "Id", "Sex", "DefaultSkill", "CollectSkill", "OpenBoxSkill", "BodyCapacity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.RcRect), global::MelandGame3.RcRect.Parser, new[]{ "Up", "W", "H" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityLocation), global::MelandGame3.EntityLocation.Parser, new[]{ "MapId", "Loc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PlayerLocInfo), global::MelandGame3.PlayerLocInfo.Parser, new[]{ "Id", "Name", "Loc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityMoveStep), global::MelandGame3.EntityMoveStep.Parser, new[]{ "Location", "Stamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityMovement), global::MelandGame3.EntityMovement.Parser, new[]{ "EntityType", "EntityId", "CurLocation", "DestLocation", "Type", "Dir" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectAttr), global::MelandGame3.ObjectAttr.Parser, new[]{ "IsMutual", "IsEdit", "PileLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityId), global::MelandGame3.EntityId.Parser, new[]{ "Type", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityIdData), global::MelandGame3.EntityIdData.Parser, new[]{ "Type", "Eid", "Cid", "EntityTemplateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityWithLocation), global::MelandGame3.EntityWithLocation.Parser, new[]{ "Type", "Id", "Location", "Direction", "MapObject", "Player", "Npc", "Monster", "FallingObject", "Material", "Bot", "FallingBox", "Plant", "Pet", "Puppet" }, new[]{ "Entity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityNftInfo), global::MelandGame3.EntityNftInfo.Parser, new[]{ "NftId", "NftType", "PlaceableInfo", "ThirdPictureFrameUrl", "ThirdNftInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Player), global::MelandGame3.Player.Parser, new[]{ "Id", "PlayerId", "Name", "RoleId", "Gender", "RoleIcon", "Feature", "Guide", "Profile", "Avatars", "Hungry", "Thirsty", "Fatigue", "IsBuilding", "Active", "Dir", "CurBuildNum", "GuideInfo", "IsGodView", "IsIde", "ListenKeypress", "CidAvatar", "IsHide", "BWAttack", "Fighting", "BuffList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MapObject), global::MelandGame3.MapObject.Parser, new[]{ "Id", "Loc", "Cid", "PlayerId", "Dir", "CodeStatus", "RefreshTime", "RunAttribute", "Fuel", "EType", "Mirror", "KeyFrame", "IsStampede", "IsCopy", "IsInArea", "IsLock", "Bubble", "Locker", "CanDestroy", "IsBuildFromTemplate", "GuideInfo", "EntityTemplate", "CurWalkDir", "IsHide", "Anims", "CurPlayAnim", "LockType", "FromFather", "SceneEffect", "Audios", "OperateBubbles", "CarryEntity", "ForceDir", "NftInfo", "MapTemplate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Plant), global::MelandGame3.Plant.Parser, new[]{ "PlayerId", "Cid", "Id", "Name", "EType", "EnemyType", "Profile", "Location", "FatherId", "IsCopy", "Dir", "IsInArea", "IsLock", "Locker", "GuideInfo", "IsHide", "EntityTemplate", "CurWalkDir", "LockType", "FromFather" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Pet), global::MelandGame3.Pet.Parser, new[]{ "PlayerId", "Id", "Cid", "Name", "Type", "Camp", "IsBoss", "Profile", "AttType", "PatrolType", "IsCopy", "Dir", "IsInArea", "IsLock", "Locker", "GuideInfo", "IsHide", "EntityTemplate", "CurWalkDir", "LockType", "FromFather", "SceneEffect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Puppet), global::MelandGame3.Puppet.Parser, new[]{ "Id", "Cid", "PlayerId", "EType", "Type", "Camp", "Profile", "AttType", "PatrolType", "HaterId", "HaterName", "CodeStatus", "RefreshTime", "RunAttribute", "KeyFrame", "IsStampede", "Mirror", "IsHide", "Dir", "IsCopy", "IsInArea", "IsLock", "Bubble", "Locker", "CanDestroy", "IsBuildFromTemplate", "GuideInfo", "EntityTemplate", "CurWalkDir", "Anims", "CurPlayAnim", "LockType", "FromFather", "SceneEffect", "Audios", "CidAvatar", "OperateBubbles", "CurEmoji", "CarryEntity", "ForceDir", "NftInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Monster), global::MelandGame3.Monster.Parser, new[]{ "Cid", "Id", "Name", "Active", "Owner", "Profile", "AttType", "PatrolType", "HaterId", "HaterName", "Dir", "GuideInfo", "Fighting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.FallingObject), global::MelandGame3.FallingObject.Parser, new[]{ "Id", "Cid", "Quantity", "PlayerId", "Mirror", "Attribute", "AutoPick", "Dir", "IsInArea", "IsLock", "Locker", "GuideInfo", "LockType", "EType", "IsHide", "EntityTemplate", "RunAttribute", "IsCopy", "FromFather", "SceneEffect", "Audios", "IsResourcePoint", "OperateBubbles", "ForceDir", "Quality" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Material), global::MelandGame3.Material.Parser, new[]{ "Cid", "Id", "Type", "Name", "Profile", "EnemyType", "DropExp", "Dir", "IsInArea", "IsLock", "Locker", "GuideInfo", "FromEntityTemplate", "EntityTemplate", "IsHide", "LockType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Bot), global::MelandGame3.Bot.Parser, new[]{ "Cid", "Id", "BotName", "PlayerId", "PlayerName", "Profile", "Status", "Fuel", "Location", "NowSkin", "Skins", "Bubble", "Dir", "Avatars", "IsCopy", "CodeStatus", "IsInArea", "IsLock", "GuideInfo", "LockType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.FallingBox), global::MelandGame3.FallingBox.Parser, new[]{ "Id", "Location", "FallingObjects", "PlayerId", "PlayerName", "IsInArea", "IsLock", "Locker", "GuideInfo", "LockType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityBaseData), global::MelandGame3.EntityBaseData.Parser, new[]{ "EType", "Loc", "Cid", "Dir", "Mirror", "IsHide", "ResName", "CurPlayAnim", "Area", "ForceDir" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityTurning), global::MelandGame3.EntityTurning.Parser, new[]{ "EntityType", "EntityId", "Direction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PlayerAvatar), global::MelandGame3.PlayerAvatar.Parser, new[]{ "Position", "ObjectId", "Attribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PlayerFeature), global::MelandGame3.PlayerFeature.Parser, new[]{ "Eyebrow", "Mouth", "Eye", "Face", "Hair", "Glove", "Clothes", "Pants", "Shoes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.NpcConversation), global::MelandGame3.NpcConversation.Parser, new[]{ "Id", "Sentence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Npc), global::MelandGame3.Npc.Parser, new[]{ "Id", "Name", "Avatar", "PlayerId", "Icon", "DefaultConversation", "TaskNoticeType", "IsInArea", "IsLock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.NpcLocation), global::MelandGame3.NpcLocation.Parser, new[]{ "MapId", "R", "C" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.NpcWithLocation), global::MelandGame3.NpcWithLocation.Parser, new[]{ "Npc", "Location" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectAnchor), global::MelandGame3.ObjectAnchor.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectShape), global::MelandGame3.ObjectShape.Parser, new[]{ "RCount", "CCount", "AreaDefault", "WalkdirDefault" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectArea), global::MelandGame3.ObjectArea.Parser, new[]{ "N", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectAnimation), global::MelandGame3.ObjectAnimation.Parser, new[]{ "Id", "Source", "TriggerType", "StopType", "Priority" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectState), global::MelandGame3.ObjectState.Parser, new[]{ "Id", "IsDefault", "Texture", "Animation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ConsumableItemSettings), global::MelandGame3.ConsumableItemSettings.Parser, new[]{ "ItemId", "Cd", "CallMethod", "Args", "CdType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectGearSettings), global::MelandGame3.ObjectGearSettings.Parser, new[]{ "Cid", "Setting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.GearSettings), global::MelandGame3.GearSettings.Parser, new[]{ "GearType", "Durability", "SkillId", "HpLimitAdded", "HpRecoveryAdded", "AttAdded", "AttSpeedAdded", "DefAdded", "CritRateAdded", "CritDmgAdded", "HitRateAdded", "MissRateAdded", "MoveSpeedAdded", "RepairNeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.SceneForceSetting), global::MelandGame3.SceneForceSetting.Parser, new[]{ "Cid", "Desc", "Force", "Dir" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectSettings), global::MelandGame3.ObjectSettings.Parser, new[]{ "Id", "Type", "SubType", "Name", "Description", "Texture", "Tileset", "BlockType", "Anchor", "Area", "Mirror", "StateId", "States", "PreArticleType", "BackpackItemLimit", "Quality", "CanTrade", "CanSell", "CanDrop", "GearType", "GearAvatar", "Buildable", "MaterialType", "MaterialHpLimit", "MaterialFallingRecipetId", "BuildHeight", "ObjectHeight", "WalkDir", "GearSettings", "WalkLowHeight", "WalkHighHeight", "EnemyType", "ObjectDef", "DropExp", "InitObjectQuantity", "ExtraConfig", "HighEdge", "UseDrop", "IsFuel", "TerrainType", "UseLv", "Camp", "Life", "BodyRadius", "UserType", "AttWidget", "Widgets", "Frames", "CodeLib", "IsTerrain", "Anims", "IsItem", "DefDropId", "Binding", "RectBuildHigh", "RectWalkLow", "RectWalkHigh", "RectTexture", "EntityPreload", "SceneForce" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ObjectItem), global::MelandGame3.ObjectItem.Parser, new[]{ "Id", "Type", "SubType", "Name", "Description", "Mirror", "StateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ItemTemplateLet), global::MelandGame3.ItemTemplateLet.Parser, new[]{ "ObjectCid", "Pos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.GameProject), global::MelandGame3.GameProject.Parser, new[]{ "Id", "PlayerId", "State", "Type", "Name", "Description", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.GameProjectComment), global::MelandGame3.GameProjectComment.Parser, new[]{ "Id", "GameProjectId", "CommentPlayerId", "Content", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Currency), global::MelandGame3.Currency.Parser, new[]{ "CurrencyType", "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Reward), global::MelandGame3.Reward.Parser, new[]{ "RewardId", "RewardItems", "Exp", "Currency" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ChatSettings), global::MelandGame3.ChatSettings.Parser, new[]{ "ChatType", "Cd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ChatMessage), global::MelandGame3.ChatMessage.Parser, new[]{ "SenderId", "SenderName", "SenderIcon", "ChatType", "Content", "ReceiverId", "MsgId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MinimapMark), global::MelandGame3.MinimapMark.Parser, new[]{ "Type", "DisplayType", "MarkId", "Name", "R", "C" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityProfile), global::MelandGame3.EntityProfile.Parser, new[]{ "Lv", "Exp", "Att", "AttSpeed", "Def", "HpCurrent", "HpLimit", "CritRate", "CritDmg", "HitRate", "MissRate", "MoveSpeed", "PushDmg", "PushDist", "HpRecovery", "HungryLimit", "ThirstyLimit", "FatigueLimit", "FatigueCurrent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityProfileUpdate), global::MelandGame3.EntityProfileUpdate.Parser, new[]{ "Field", "CurValue", "CurValueStr", "UseStringValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntitySceneEffect), global::MelandGame3.EntitySceneEffect.Parser, new[]{ "EffectId", "TextContent", "ExpiredAt", "FromDevice", "FromNode", "BubbleEffectType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.BotSettings), global::MelandGame3.BotSettings.Parser, new[]{ "Id", "Name", "LvType", "Kind", "Skill1Id", "Skill2Id", "SkillSequence", "RobotCodeBlockId", "BagGridNum", "FuelCeiling", "Skin1", "Skin2", "Skin3", "Skin4", "Skin", "Acquisitionskills", "BodyRadius" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PlayerArea), global::MelandGame3.PlayerArea.Parser, new[]{ "MapId", "RCenter", "CCenter", "ItemCid", "BuyMarks", "OwnerId", "OwnerName", "RCoreRadius", "CCoreRadius", "RExtendRadius", "CExtendRadius", "TemplateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PlayerAreaBrief), global::MelandGame3.PlayerAreaBrief.Parser, new[]{ "RCenter", "CCenter", "OwnerId", "OwnerName", "RCoreRadius", "CCoreRadius", "RExtendRadius", "CExtendRadius" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.CodeblockTemplate), global::MelandGame3.CodeblockTemplate.Parser, new[]{ "Id", "Title", "Data", "Thumbnail", "IsNew", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Role), global::MelandGame3.Role.Parser, new[]{ "Id", "Name", "Gender", "Skeleton" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.SpawnPoint), global::MelandGame3.SpawnPoint.Parser, new[]{ "Id", "MapId", "X", "Y", "Initial" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.SceneWeather), global::MelandGame3.SceneWeather.Parser, new[]{ "SceneId", "Weather", "Temperature", "StartRate", "StopRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.WeatherState), global::MelandGame3.WeatherState.Parser, new[]{ "SceneId", "WeatherType", "Temperature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.AchieveIndex), global::MelandGame3.AchieveIndex.Parser, new[]{ "RequireNum", "RewardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Achieve), global::MelandGame3.Achieve.Parser, new[]{ "AchieveId", "AchieveType", "AchieveIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityLvSettings), global::MelandGame3.EntityLvSettings.Parser, new[]{ "Lv", "Exp", "Att", "AttSpeed", "Def", "HpRecovery", "HpLimit", "CritRate", "CritDmg", "HitRate", "MissRate", "MoveSpeed", "PushDmg", "PushDist", "DeathLossExp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.BotLvSettings), global::MelandGame3.BotLvSettings.Parser, new[]{ "Id", "LvType", "EntityLvSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ItemLet), global::MelandGame3.ItemLet.Parser, new[]{ "ItemId", "Quantity", "NeedRand", "Attribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Mail), global::MelandGame3.Mail.Parser, new[]{ "MailId", "Title", "Content", "Parameters", "Top", "Sender", "ExpiredAt", "Read", "Taken", "Attachments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MailHead), global::MelandGame3.MailHead.Parser, new[]{ "MailId", "Title", "ExpiredAt", "Top", "Read", "Attachments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.MailTemplate), global::MelandGame3.MailTemplate.Parser, new[]{ "TemplateId", "Name", "Template", "Top", "RewardGiftId", "Initial", "Duration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PlayerHungry), global::MelandGame3.PlayerHungry.Parser, new[]{ "Limit", "CurrentVal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PlayerThirsty), global::MelandGame3.PlayerThirsty.Parser, new[]{ "Limit", "CurrentVal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PlayerFatigue), global::MelandGame3.PlayerFatigue.Parser, new[]{ "Limit", "CurrentVal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.SpecialBuildSettings), global::MelandGame3.SpecialBuildSettings.Parser, new[]{ "Id", "DataFrom", "Type", "Formulas", "GridNum", "NeedFuel", "BurningRation", "MaxChars", "Content", "DisplayTime", "TriggerRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.GainItem), global::MelandGame3.GainItem.Parser, new[]{ "Id", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.BotGain), global::MelandGame3.BotGain.Parser, new[]{ "BotId", "LevelDis", "FuelDis", "ItemList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityAttribute), global::MelandGame3.EntityAttribute.Parser, new[]{ "Entity", "Widgets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityAttributes), global::MelandGame3.EntityAttributes.Parser, new[]{ "Widgets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Student), global::MelandGame3.Student.Parser, new[]{ "Id", "GameName", "HashId", "RealName", "Rc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.BuildingPoint), global::MelandGame3.BuildingPoint.Parser, new[]{ "X", "Y", "Z", "Dir" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityAdd), global::MelandGame3.EntityAdd.Parser, new[]{ "BuildPuppet", "ItemId", "Pos", "Dir", "Mirror", "FromEntityTemplate", "StateId", "Cid", "IsItem", "ForceDir", "SurvivalTime", "PictureFrameUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityCopy), global::MelandGame3.EntityCopy.Parser, new[]{ "From", "Pos", "Dir", "Mirror", "ForceDir" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityMove), global::MelandGame3.EntityMove.Parser, new[]{ "Entity", "Pos", "Dir", "Mirror", "ForceDir" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityDelRes), global::MelandGame3.EntityDelRes.Parser, new[]{ "Entity", "Pos", "Dir" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.BuildingModePos), global::MelandGame3.BuildingModePos.Parser, new[]{ "Cid", "Entity", "EntityTemplateId", "Dirs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.AnimationBone), global::MelandGame3.AnimationBone.Parser, new[]{ "Id", "AnimName", "ResName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.AnimationFrame), global::MelandGame3.AnimationFrame.Parser, new[]{ "Id", "Name", "Index", "Url", "RectUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Animation), global::MelandGame3.Animation.Parser, new[]{ "Id", "Name", "Index", "Type", "Frames", "BoneAnim" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityAnimations), global::MelandGame3.EntityAnimations.Parser, new[]{ "Animations", "Emojis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityTemplate), global::MelandGame3.EntityTemplate.Parser, new[]{ "PlayerName", "TemplateId", "Name", "Desc", "WalkDir", "IconUrl", "ImageUrl", "AnimUrl", "Area", "Direction", "BuildHeight", "BuildType", "FromCid", "CreateTypeId", "CodeLibId", "Animations", "Attribute", "Audios", "TimeLines" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityPosition), global::MelandGame3.EntityPosition.Parser, new[]{ "TemplateId", "Vec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityTemplateGroup), global::MelandGame3.EntityTemplateGroup.Parser, new[]{ "TemplateId", "Name", "Desc", "IconUrl", "Etemplates", "Epos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.KeypressEvent), global::MelandGame3.KeypressEvent.Parser, new[]{ "KeyId", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Keypress), global::MelandGame3.Keypress.Parser, new[]{ "Key", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.InputEvent), global::MelandGame3.InputEvent.Parser, new[]{ "Type", "Keypress", "Key" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PanelProfile), global::MelandGame3.PanelProfile.Parser, new[]{ "PanelType", "Style", "RowNum", "ColNum", "Title", "GridProfile", "RowHeight", "ColWidth", "Anchor", "IsHidden" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PanelBGStyle), global::MelandGame3.PanelBGStyle.Parser, new[]{ "Style", "R", "G", "B", "Transparency" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PanelTitle), global::MelandGame3.PanelTitle.Parser, new[]{ "CanFold", "R", "G", "B", "Transparency", "Content", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PanelGridProfile), global::MelandGame3.PanelGridProfile.Parser, new[]{ "Content", "Align", "Picture", "Percent", "ColNum", "RowNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PanelRowColSize), global::MelandGame3.PanelRowColSize.Parser, new[]{ "Which", "Size" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.PanelAnchor), global::MelandGame3.PanelAnchor.Parser, new[]{ "Pos", "Horizontal", "Vertical" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ShowViewData), global::MelandGame3.ShowViewData.Parser, new[]{ "Type", "DungeonScoreData" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ViewDungeonScoreData), global::MelandGame3.ViewDungeonScoreData.Parser, new[]{ "DungeonId", "Score", "ReceivedBaseReward", "SuperLv", "ReceivedSuperReward", "ReceivedFinalReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.DungeonSuperReward), global::MelandGame3.DungeonSuperReward.Parser, new[]{ "RewardId", "NeedVipLv" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.ResourcePointInfo), global::MelandGame3.ResourcePointInfo.Parser, new[]{ "RcIndex", "ResourceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.BornPointInfo), global::MelandGame3.BornPointInfo.Parser, new[]{ "RcIndex", "Cid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.Scope), global::MelandGame3.Scope.Parser, new[]{ "TopNode", "BottomNode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.LessonArea), global::MelandGame3.LessonArea.Parser, new[]{ "LessonAreaId", "LessonAreaComment", "LessonAreaName", "Scope", "TpPos", "NextAreaId", "PrevAraeId", "TerrainsCid", "ShowType", "AreaMode", "CodeEntities" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.CodeEntityData), global::MelandGame3.CodeEntityData.Parser, new[]{ "E", "EName", "Cid", "Icon", "Tab", "TabName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.LessonAreaEntityData), global::MelandGame3.LessonAreaEntityData.Parser, new[]{ "E", "Cid", "EDesc", "Rc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.LessonAreaInfo), global::MelandGame3.LessonAreaInfo.Parser, new[]{ "Area", "TpPoints", "IsResetting", "LockState", "HasArrived" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.LessonAreaData), global::MelandGame3.LessonAreaData.Parser, new[]{ "LessonAreaDataType", "Name", "Comment", "Scope", "TpPos", "AreaId", "TerrainsCid", "EntityData", "ShowType", "AreaMode" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.AreaUpdateData), global::MelandGame3.AreaUpdateData.Parser, new[]{ "AreaId", "UpdateData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityOfTile), global::MelandGame3.EntityOfTile.Parser, new[]{ "RcIndex", "RandomEntities" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.CarryEntityBaseData), global::MelandGame3.CarryEntityBaseData.Parser, new[]{ "Id", "Loc", "Cid", "Icon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityPreload), global::MelandGame3.EntityPreload.Parser, new[]{ "Cid", "PreloadCodeBlock", "PreloadEntityAttr", "PreloadTimelineList", "EntityId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntityCusData), global::MelandGame3.EntityCusData.Parser, new[]{ "Cid", "FileName", "EntityPreload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.EntitiesQuickCodeTab), global::MelandGame3.EntitiesQuickCodeTab.Parser, new[]{ "Entity", "TabId", "EntityName", "AvatarCid", "Icon" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ServerCloseType {
    [pbr::OriginalName("ServerCloseType_ServerCloseTypeNormal")] ServerCloseTypeNormal = 0,
    [pbr::OriginalName("ServerCloseType_ServerCloseTypeMasterSignOut")] ServerCloseTypeMasterSignOut = 1,
  }

  public enum KickOutType {
    /// <summary>
    /// 未知类型
    /// </summary>
    [pbr::OriginalName("KickOutType_KickOutTypeUnknow")] KickOutTypeUnknow = 0,
    /// <summary>
    /// 重复登录（顶号）
    /// </summary>
    [pbr::OriginalName("KickOutType_KickOutTypeRepeatConnect")] KickOutTypeRepeatConnect = 1,
    /// <summary>
    /// 挂机
    /// </summary>
    [pbr::OriginalName("KickOutType_KickOutTypeOnHook")] KickOutTypeOnHook = 2,
    /// <summary>
    /// 超过人数上限
    /// </summary>
    [pbr::OriginalName("KickOutType_KickOutTypeOverMax")] KickOutTypeOverMax = 3,
    /// <summary>
    /// 场景重启
    /// </summary>
    [pbr::OriginalName("KickOutType_KickOutTypeRestartMap")] KickOutTypeRestartMap = 4,
  }

  public enum EnemyType {
    /// <summary>
    /// 未知类型
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeUnattackable")] EnemyTypeUnattackable = 0,
    /// <summary>
    ///玩家
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypePlayer")] EnemyTypePlayer = 1,
    /// <summary>
    /// 树
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeTree")] EnemyTypeTree = 2,
    /// <summary>
    /// 草
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeGrass")] EnemyTypeGrass = 3,
    /// <summary>
    /// 石头
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeStone")] EnemyTypeStone = 4,
    /// <summary>
    /// 建筑物
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeBuilding")] EnemyTypeBuilding = 5,
    /// <summary>
    /// 机器人
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeBot")] EnemyTypeBot = 6,
    /// <summary>
    /// 怪物
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeMonster")] EnemyTypeMonster = 7,
    /// <summary>
    /// 宝箱
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeTreasureBox")] EnemyTypeTreasureBox = 8,
    /// <summary>
    /// 掉落物
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeFalling")] EnemyTypeFalling = 9,
    /// <summary>
    /// 玩家/机器人 死亡掉落物
    /// </summary>
    [pbr::OriginalName("EnemyType_EnemyTypeFallingBox")] EnemyTypeFallingBox = 10,
  }

  public enum EntityCodeStatus {
    [pbr::OriginalName("EntityCodeStatus_EntityCodeStatusUnknow")] EntityCodeStatusUnknow = 0,
    [pbr::OriginalName("EntityCodeStatus_EntityCodeStatusRun")] EntityCodeStatusRun = 1,
    [pbr::OriginalName("EntityCodeStatus_EntityCodeStatusStop")] EntityCodeStatusStop = 2,
  }

  /// <summary>
  ///移动方式
  /// </summary>
  public enum MoveType {
    [pbr::OriginalName("MoveType_MoveTypeXY")] MoveTypeXy = 0,
    [pbr::OriginalName("MoveType_MoveTypeRC")] MoveTypeRc = 1,
  }

  public enum MovementType {
    [pbr::OriginalName("MovementType_MovementTypeUnknown")] MovementTypeUnknown = 0,
    /// <summary>
    /// 行走
    /// </summary>
    [pbr::OriginalName("MovementType_MovementTypeWalk")] MovementTypeWalk = 1,
    /// <summary>
    /// 奔跑
    /// </summary>
    [pbr::OriginalName("MovementType_MovementTypeRun")] MovementTypeRun = 2,
    /// <summary>
    /// 保持现在的外观移动
    /// </summary>
    [pbr::OriginalName("MovementType_MovementTypeIdle")] MovementTypeIdle = 3,
  }

  /// <summary>
  /// 物品类型
  /// </summary>
  public enum ObjectType {
    /// <summary>
    /// 未定义类型
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeUnknown")] ObjectTypeUnknown = 0,
    /// <summary>
    /// 装备
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeGear")] ObjectTypeGear = 1,
    /// <summary>
    /// 桥
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeBridget")] ObjectTypeBridget = 2,
    /// <summary>
    /// 消耗品（食物）
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeConsume")] ObjectTypeConsume = 3,
    /// <summary>
    /// 材料
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeMaterial")] ObjectTypeMaterial = 4,
    /// <summary>
    /// 建筑物品
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeConstruction")] ObjectTypeConstruction = 5,
    /// <summary>
    /// 水
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeWater")] ObjectTypeWater = 6,
    /// <summary>
    /// 地块
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeGround")] ObjectTypeGround = 7,
    /// <summary>
    /// 资源 （地图上刷出来的资源）
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeResource")] ObjectTypeResource = 8,
    /// <summary>
    /// 货币
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeCurrency")] ObjectTypeCurrency = 9,
    /// <summary>
    /// 地板
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeFloor")] ObjectTypeFloor = 10,
    /// <summary>
    /// 墙面
    /// NOTE: 有子类型
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeWall")] ObjectTypeWall = 11,
    /// <summary>
    /// 窗户
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeWindow")] ObjectTypeWindow = 12,
    /// <summary>
    /// 玩家领地插旗道具
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypePlayerAreaFlag")] ObjectTypePlayerAreaFlag = 13,
    /// <summary>
    /// 宝箱
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeBox")] ObjectTypeBox = 14,
    /// <summary>
    /// 配方
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeFormula")] ObjectTypeFormula = 15,
    /// <summary>
    /// 虚空
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeVoid")] ObjectTypeVoid = 16,
    /// <summary>
    /// 地表
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypeSurface")] ObjectTypeSurface = 17,
    /// <summary>
    /// 生物
    /// </summary>
    [pbr::OriginalName("ObjectType_ObjectTypePuppet")] ObjectTypePuppet = 18,
  }

  /// <summary>
  /// 墙面物品子类型
  /// </summary>
  public enum WallObjectSubType {
    [pbr::OriginalName("WallObjectSubType_WallObjectSubTypeUnknown")] WallObjectSubTypeUnknown = 0,
    /// <summary>
    /// 普通墙面（自动建造会围绕着地板）
    /// </summary>
    [pbr::OriginalName("WallObjectSubType_WallObjectSubTypeBasic")] WallObjectSubTypeBasic = 1,
    /// <summary>
    /// 栅栏（自动建造不围绕着地板）
    /// </summary>
    [pbr::OriginalName("WallObjectSubType_WallObjectSubTypeFence")] WallObjectSubTypeFence = 2,
    /// <summary>
    /// 门（自动建造会围绕着地板）
    /// </summary>
    [pbr::OriginalName("WallObjectSubType_WallObjectSubTypeDoor")] WallObjectSubTypeDoor = 3,
  }

  /// <summary>
  /// 物件上方是否可以建造
  /// </summary>
  public enum ObjectBuildableType {
    /// <summary>
    /// 上方不可建造
    /// </summary>
    [pbr::OriginalName("ObjectBuildableType_ObjectBuildableTypeUnbuildable")] ObjectBuildableTypeUnbuildable = 0,
    /// <summary>
    /// 可以建造但是不能被覆盖
    /// </summary>
    [pbr::OriginalName("ObjectBuildableType_ObjectBuildableTypeBuildable")] ObjectBuildableTypeBuildable = 1,
    /// <summary>
    /// 建造时会被覆盖
    /// </summary>
    [pbr::OriginalName("ObjectBuildableType_ObjectBuildableTypeMerge")] ObjectBuildableTypeMerge = 2,
  }

  public enum ObjectBlockType {
    /// <summary>
    /// 无阻挡
    /// </summary>
    [pbr::OriginalName("ObjectBlockType_ObjectBlockTypeFree")] ObjectBlockTypeFree = 0,
    /// <summary>
    /// 阻挡
    /// </summary>
    [pbr::OriginalName("ObjectBlockType_ObjectBlockTypeBlock")] ObjectBlockTypeBlock = 1,
    /// <summary>
    /// 动态阻挡
    /// </summary>
    [pbr::OriginalName("ObjectBlockType_ObjectBlockTypeDynamic")] ObjectBlockTypeDynamic = 2,
  }

  public enum ObjectQuality {
    [pbr::OriginalName("ObjectQuality_ObjectQualityUnknown")] ObjectQualityUnknown = 0,
    [pbr::OriginalName("ObjectQuality_ObjectQualityWhite")] ObjectQualityWhite = 1,
    [pbr::OriginalName("ObjectQuality_ObjectQualityGreen")] ObjectQualityGreen = 2,
    [pbr::OriginalName("ObjectQuality_ObjectQualityBlue")] ObjectQualityBlue = 3,
    [pbr::OriginalName("ObjectQuality_ObjectQualityPurple")] ObjectQualityPurple = 4,
    [pbr::OriginalName("ObjectQuality_ObjectQualityOrange")] ObjectQualityOrange = 5,
    [pbr::OriginalName("ObjectQuality_ObjectQualityRed")] ObjectQualityRed = 6,
  }

  public enum ObjectGearType {
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeUnknown")] ObjectGearTypeUnknown = 0,
    /// <summary>
    /// 头
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeHead")] ObjectGearTypeHead = 1,
    /// <summary>
    /// 衣服
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeCoat")] ObjectGearTypeCoat = 2,
    /// <summary>
    /// 裤子
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypePant")] ObjectGearTypePant = 3,
    /// <summary>
    /// 鞋
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeShoe")] ObjectGearTypeShoe = 4,
    /// <summary>
    /// 手套
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeHand")] ObjectGearTypeHand = 5,
    /// <summary>
    /// 斧
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeAxe")] ObjectGearTypeAxe = 6,
    /// <summary>
    /// 镐
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypePickaxe")] ObjectGearTypePickaxe = 7,
    /// <summary>
    /// 剑
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeSword")] ObjectGearTypeSword = 8,
    /// <summary>
    /// 弓
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeBow")] ObjectGearTypeBow = 9,
    /// <summary>
    /// 饰品
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeAccessory")] ObjectGearTypeAccessory = 10,
    /// <summary>
    /// 枪
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeGun")] ObjectGearTypeGun = 11,
    /// <summary>
    /// 双手枪
    /// </summary>
    [pbr::OriginalName("ObjectGearType_ObjectGearTypeDoubleGun")] ObjectGearTypeDoubleGun = 12,
  }

  public enum ObjectAnimationTriggerType {
    [pbr::OriginalName("ObjectAnimationTriggerType_ObjectAnimationTriggerTypeUnknown")] ObjectAnimationTriggerTypeUnknown = 0,
    /// <summary>
    /// 自动开启播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationTriggerType_ObjectAnimationTriggerTypeAuto")] ObjectAnimationTriggerTypeAuto = 1,
    /// <summary>
    /// 交互开启播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationTriggerType_ObjectAnimationTriggerTypeInteract")] ObjectAnimationTriggerTypeInteract = 2,
    /// <summary>
    /// 接触开启播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationTriggerType_ObjectAnimationTriggerTypeTouch")] ObjectAnimationTriggerTypeTouch = 3,
    /// <summary>
    /// 离开开启播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationTriggerType_ObjectAnimationTriggerTypeLeave")] ObjectAnimationTriggerTypeLeave = 4,
    /// <summary>
    /// 状态改变时开启播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationTriggerType_ObjectAnimationTriggerTypeOnStateChange")] ObjectAnimationTriggerTypeOnStateChange = 5,
  }

  public enum ObjectAnimationStopType {
    [pbr::OriginalName("ObjectAnimationStopType_ObjectAnimationStopTypeUnknown")] ObjectAnimationStopTypeUnknown = 0,
    /// <summary>
    /// 自动停止播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationStopType_ObjectAnimationStopTypeAuto")] ObjectAnimationStopTypeAuto = 1,
    /// <summary>
    /// 交互停止播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationStopType_ObjectAnimationStopTypeInteract")] ObjectAnimationStopTypeInteract = 2,
    /// <summary>
    /// 离开停止播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationStopType_ObjectAnimationStopTypeLeave")] ObjectAnimationStopTypeLeave = 3,
    /// <summary>
    /// 接触停止播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationStopType_ObjectAnimationStopTypeTouch")] ObjectAnimationStopTypeTouch = 4,
    /// <summary>
    /// 不停止播放
    /// </summary>
    [pbr::OriginalName("ObjectAnimationStopType_ObjectAnimationStopTypeNonStop")] ObjectAnimationStopTypeNonStop = 5,
  }

  public enum UserType {
    /// <summary>
    /// 无限制
    /// </summary>
    [pbr::OriginalName("UserType_UserTypeUnknown")] UserTypeUnknown = 0,
    /// <summary>
    /// 玩家
    /// </summary>
    [pbr::OriginalName("UserType_UserTypePlayer")] UserTypePlayer = 1,
    /// <summary>
    /// 机器人
    /// </summary>
    [pbr::OriginalName("UserType_UserTypeBot")] UserTypeBot = 2,
    /// <summary>
    /// 宠物
    /// </summary>
    [pbr::OriginalName("UserType_UserTypePet")] UserTypePet = 3,
  }

  public enum TerrainType {
    [pbr::OriginalName("TerrainType_TerrainNone")] TerrainNone = 0,
    /// <summary>
    /// 草地
    /// </summary>
    [pbr::OriginalName("TerrainType_TerrainGrass")] TerrainGrass = 1,
    /// <summary>
    /// 枯草
    /// </summary>
    [pbr::OriginalName("TerrainType_TerrainSubtilis")] TerrainSubtilis = 2,
    /// <summary>
    /// 石板
    /// </summary>
    [pbr::OriginalName("TerrainType_TerrainSlate")] TerrainSlate = 3,
    /// <summary>
    /// 泥地
    /// </summary>
    [pbr::OriginalName("TerrainType_TerrainMud")] TerrainMud = 4,
    /// <summary>
    /// 雪地
    /// </summary>
    [pbr::OriginalName("TerrainType_TerrainSnow")] TerrainSnow = 5,
    /// <summary>
    /// 沙漠
    /// </summary>
    [pbr::OriginalName("TerrainType_TerrainDesert")] TerrainDesert = 6,
    /// <summary>
    /// 木板
    /// </summary>
    [pbr::OriginalName("TerrainType_TerrainPlank")] TerrainPlank = 7,
    /// <summary>
    /// 水
    /// </summary>
    [pbr::OriginalName("TerrainType_TerrainWater")] TerrainWater = 8,
  }

  /// <summary>
  /// 游戏作品状态
  /// </summary>
  public enum GameProjectState {
    /// <summary>
    /// 未发布状态
    /// </summary>
    [pbr::OriginalName("GameProjectState_GameProjectStateDraft")] GameProjectStateDraft = 0,
    /// <summary>
    /// 删除状态
    /// </summary>
    [pbr::OriginalName("GameProjectState_GameProjectStateDeleted")] GameProjectStateDeleted = 1,
    /// <summary>
    /// 发布状态
    /// </summary>
    [pbr::OriginalName("GameProjectState_GameProjectStatePublished")] GameProjectStatePublished = 2,
  }

  /// <summary>
  /// 游戏作品类型
  /// </summary>
  public enum GameProjectType {
    /// <summary>
    /// 未知类型
    /// </summary>
    [pbr::OriginalName("GameProjectType_GameProjectTypeUnknown")] GameProjectTypeUnknown = 0,
    /// <summary>
    /// 星球作品类型
    /// </summary>
    [pbr::OriginalName("GameProjectType_GameProjectTypePlanet")] GameProjectTypePlanet = 1,
    /// <summary>
    /// 平面作品类型
    /// </summary>
    [pbr::OriginalName("GameProjectType_GameProjectType2D")] GameProjectType2D = 2,
  }

  /// <summary>
  /// 货币类型( TODO ... )
  /// </summary>
  public enum CurrencyType {
    [pbr::OriginalName("CurrencyType_CurrencyTypeUnknown")] CurrencyTypeUnknown = 0,
    /// <summary>
    ///金币
    /// </summary>
    [pbr::OriginalName("CurrencyType_CurrencyTypeGold")] CurrencyTypeGold = 1,
  }

  public enum AchieveObjectiveType {
    [pbr::OriginalName("AchieveObjectiveType_AchieveObjectiveTypeUnknow")] AchieveObjectiveTypeUnknow = 0,
    [pbr::OriginalName("AchieveObjectiveType_AchieveObjectiveTypeExplored")] AchieveObjectiveTypeExplored = 1,
    [pbr::OriginalName("AchieveObjectiveType_AchieveObjectiveTypeMonster")] AchieveObjectiveTypeMonster = 2,
  }

  /// <summary>
  /// 频道类型
  /// </summary>
  public enum ChatChannelType {
    [pbr::OriginalName("ChatChannelType_ChatChannelTypeUnknown")] ChatChannelTypeUnknown = 0,
    /// <summary>
    /// 系统
    /// </summary>
    [pbr::OriginalName("ChatChannelType_ChatChannelTypeSystem")] ChatChannelTypeSystem = 1,
    /// <summary>
    /// 世界
    /// </summary>
    [pbr::OriginalName("ChatChannelType_ChatChannelTypeWorld")] ChatChannelTypeWorld = 2,
    /// <summary>
    /// 分线
    /// </summary>
    [pbr::OriginalName("ChatChannelType_ChatChannelTypeMap")] ChatChannelTypeMap = 3,
    /// <summary>
    /// 副本
    /// </summary>
    [pbr::OriginalName("ChatChannelType_ChatChannelTypeInstance")] ChatChannelTypeInstance = 4,
    /// <summary>
    /// 附近
    /// </summary>
    [pbr::OriginalName("ChatChannelType_ChatChannelTypeNearby")] ChatChannelTypeNearby = 5,
    /// <summary>
    /// 私聊
    /// </summary>
    [pbr::OriginalName("ChatChannelType_ChatChannelTypePrivate")] ChatChannelTypePrivate = 6,
    /// <summary>
    /// 综合
    /// </summary>
    [pbr::OriginalName("ChatChannelType_ChatChannelTypeComprehensive")] ChatChannelTypeComprehensive = 7,
    /// <summary>
    /// 机器人
    /// </summary>
    [pbr::OriginalName("ChatChannelType_ChatChannelTypeNearbyToBot")] ChatChannelTypeNearbyToBot = 8,
  }

  public enum ChatState {
    [pbr::OriginalName("ChatState_ChatStateNormal")] ChatStateNormal = 0,
    [pbr::OriginalName("ChatState_ChatStateBan")] ChatStateBan = 1,
  }

  /// <summary>
  /// 小地图标记类型
  /// </summary>
  public enum MinimapMarkType {
    [pbr::OriginalName("MinimapMarkType_MinimapMarkTypeUnknown")] MinimapMarkTypeUnknown = 0,
    /// <summary>
    /// NPC
    /// </summary>
    [pbr::OriginalName("MinimapMarkType_MinimapMarkTypeNpc")] MinimapMarkTypeNpc = 1,
    /// <summary>
    /// 城镇
    /// </summary>
    [pbr::OriginalName("MinimapMarkType_MinimapMarkTypeTown")] MinimapMarkTypeTown = 2,
    /// <summary>
    ///家
    /// </summary>
    [pbr::OriginalName("MinimapMarkType_MinimapMarkTypeHome")] MinimapMarkTypeHome = 3,
    /// <summary>
    /// 玩家自定义标记
    /// </summary>
    [pbr::OriginalName("MinimapMarkType_MinimapMarkTypeCustom")] MinimapMarkTypeCustom = 4,
    /// <summary>
    /// 传送点
    /// </summary>
    [pbr::OriginalName("MinimapMarkType_MinimapMarkTypeTransferPoint")] MinimapMarkTypeTransferPoint = 5,
    /// <summary>
    /// 玩家死亡点
    /// </summary>
    [pbr::OriginalName("MinimapMarkType_MinimapMarkTypeDeathPoint")] MinimapMarkTypeDeathPoint = 6,
    /// <summary>
    /// Bot
    /// </summary>
    [pbr::OriginalName("MinimapMarkType_MinimapMarkTypeBot")] MinimapMarkTypeBot = 7,
  }

  /// <summary>
  /// 小地图标记展示类型
  /// </summary>
  public enum MinimapMarkDisplayType {
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypeUnknown")] MinimapMarkDisplayTypeUnknown = 0,
    /// <summary>
    /// 蓝色的气球
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypeBlueBalloon")] MinimapMarkDisplayTypeBlueBalloon = 1,
    /// <summary>
    /// 黄色的气球
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypeYellowBalloon")] MinimapMarkDisplayTypeYellowBalloon = 2,
    /// <summary>
    /// 紫色的气球
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypePurpleBalloon")] MinimapMarkDisplayTypePurpleBalloon = 3,
    /// <summary>
    /// 黄色的星星
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypeYellowStar")] MinimapMarkDisplayTypeYellowStar = 4,
    /// <summary>
    /// 黄色的锚
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypeBlueAnchor")] MinimapMarkDisplayTypeBlueAnchor = 5,
    /// <summary>
    /// 紫色的心💖
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypePurpleHeart")] MinimapMarkDisplayTypePurpleHeart = 6,
    /// <summary>
    /// 橙色的旗帜
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypeOrangeFlag")] MinimapMarkDisplayTypeOrangeFlag = 7,
    /// <summary>
    /// 绿色的列车
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypeGreenTrain")] MinimapMarkDisplayTypeGreenTrain = 8,
    /// <summary>
    /// 紫色的三角形
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypePurpleTriangle")] MinimapMarkDisplayTypePurpleTriangle = 9,
    /// <summary>
    /// 黑色的×
    /// </summary>
    [pbr::OriginalName("MinimapMarkDisplayType_MinimapMarkDisplayTypeBlackX")] MinimapMarkDisplayTypeBlackX = 10,
  }

  public enum EntitySceneEffectId {
    [pbr::OriginalName("EntitySceneEffectId_EntitySceneEffectIdUnknown")] EntitySceneEffectIdUnknown = 0,
    /// <summary>
    /// 头顶文字气泡
    /// </summary>
    [pbr::OriginalName("EntitySceneEffectId_EntitySceneEffectBubbleText")] EntitySceneEffectBubbleText = 1001,
  }

  public enum BubbleTextEffectType {
    [pbr::OriginalName("BubbleTextEffectType_BubbleTextEffectTypeNormal")] BubbleTextEffectTypeNormal = 0,
    [pbr::OriginalName("BubbleTextEffectType_BubbleTextEffectTypeCloud")] BubbleTextEffectTypeCloud = 1,
    [pbr::OriginalName("BubbleTextEffectType_BubbleTextEffectTypeVibe")] BubbleTextEffectTypeVibe = 2,
  }

  /// <summary>
  /// 阵营
  ///怪物阵营：1~999
  ///玩家默认阵营：1000
  ///机器人默认阵营：1000
  ///玩家培养的宠物：1000
  /// </summary>
  public enum Camp {
    /// <summary>
    ///中立
    /// </summary>
    [pbr::OriginalName("Camp_CampNeutral")] CampNeutral = 0,
    [pbr::OriginalName("Camp_CampPlayer")] CampPlayer = 1000,
  }

  public enum MonsterState {
    [pbr::OriginalName("MonsterState_MonsterStateUnKnown")] MonsterStateUnKnown = 0,
    /// <summary>
    /// 怪物巡逻状态
    /// </summary>
    [pbr::OriginalName("MonsterState_MonsterStatePatrol")] MonsterStatePatrol = 1,
    /// <summary>
    /// 怪物战斗状态
    /// </summary>
    [pbr::OriginalName("MonsterState_MonsterStateCombat")] MonsterStateCombat = 2,
    /// <summary>
    /// 怪物逃跑状态
    /// </summary>
    [pbr::OriginalName("MonsterState_MonsterStateEscape")] MonsterStateEscape = 3,
    /// <summary>
    /// 怪物返回状态
    /// </summary>
    [pbr::OriginalName("MonsterState_MonsterStateBack")] MonsterStateBack = 4,
  }

  public enum MonsterAttType {
    [pbr::OriginalName("MonsterAttType_MonsterAttTypeUnknown")] MonsterAttTypeUnknown = 0,
    /// <summary>
    /// 主动攻击型
    /// </summary>
    [pbr::OriginalName("MonsterAttType_MonsterAttTypeInitiative")] MonsterAttTypeInitiative = 1,
    /// <summary>
    /// 被动攻击型
    /// </summary>
    [pbr::OriginalName("MonsterAttType_MonsterAttTypePassive")] MonsterAttTypePassive = 2,
    /// <summary>
    /// 不攻击型
    /// </summary>
    [pbr::OriginalName("MonsterAttType_MonsterAttTypeDumb")] MonsterAttTypeDumb = 3,
  }

  public enum MonsterPatrolType {
    [pbr::OriginalName("MonsterPatrolType_MonsterPatrolTypeUnknown")] MonsterPatrolTypeUnknown = 0,
    /// <summary>
    /// 不巡逻
    /// </summary>
    [pbr::OriginalName("MonsterPatrolType_MonsterPatrolTypeDumb")] MonsterPatrolTypeDumb = 1,
    /// <summary>
    /// 随机路线巡逻
    /// </summary>
    [pbr::OriginalName("MonsterPatrolType_MonsterPatrolTypeRandom")] MonsterPatrolTypeRandom = 2,
    /// <summary>
    /// 固定路线巡逻
    /// </summary>
    [pbr::OriginalName("MonsterPatrolType_MonsterPatrolTypeFix")] MonsterPatrolTypeFix = 3,
  }

  public enum MonsterType {
    [pbr::OriginalName("MonsterType_MonsterTypeUnknown")] MonsterTypeUnknown = 0,
    /// <summary>
    /// 生物
    /// </summary>
    [pbr::OriginalName("MonsterType_MonsterTypeLiving")] MonsterTypeLiving = 1,
  }

  public enum MaterialType {
    [pbr::OriginalName("MaterialType_MaterialTypeUnknown")] MaterialTypeUnknown = 0,
    /// <summary>
    /// 用锄头采集的资源
    /// </summary>
    [pbr::OriginalName("MaterialType_MaterialTypeResourceCollectByHoe")] MaterialTypeResourceCollectByHoe = 1,
    /// <summary>
    /// 用斧头采集的资源
    /// </summary>
    [pbr::OriginalName("MaterialType_MaterialTypeResourceCollectByAxe")] MaterialTypeResourceCollectByAxe = 2,
    /// <summary>
    /// 不用工具采集的资源
    /// </summary>
    [pbr::OriginalName("MaterialType_MaterialTypeResourceCollectDirectly")] MaterialTypeResourceCollectDirectly = 3,
  }

  public enum BotStatus {
    [pbr::OriginalName("BotStatus_BotStatusUnknown")] BotStatusUnknown = 0,
    /// <summary>
    /// 停止状态
    /// </summary>
    [pbr::OriginalName("BotStatus_BotStatusStop")] BotStatusStop = 1,
    /// <summary>
    /// 休眠状态, 燃料不足时会进入休眠
    /// </summary>
    [pbr::OriginalName("BotStatus_BotStatusSuspend")] BotStatusSuspend = 2,
    /// <summary>
    /// 执行代码块中
    /// </summary>
    [pbr::OriginalName("BotStatus_BotStatusRunning")] BotStatusRunning = 3,
    /// <summary>
    /// 机器人离线
    /// </summary>
    [pbr::OriginalName("BotStatus_BotStatusOffline")] BotStatusOffline = 4,
  }

  public enum Direction {
    [pbr::OriginalName("Direction_DirectionUnknown")] DirectionUnknown = 0,
    [pbr::OriginalName("Direction_DirectionUp")] DirectionUp = 1,
    [pbr::OriginalName("Direction_DirectionLeft")] DirectionLeft = 2,
    [pbr::OriginalName("Direction_DirectionDown")] DirectionDown = 3,
    [pbr::OriginalName("Direction_DirectionRight")] DirectionRight = 4,
  }

  public enum CodeblockTemplateType {
    [pbr::OriginalName("CodeblockTemplateType_CodeblockTemplateTypeUnknown")] CodeblockTemplateTypeUnknown = 0,
    [pbr::OriginalName("CodeblockTemplateType_CodeblockTemplateTypeSystem")] CodeblockTemplateTypeSystem = 1,
    [pbr::OriginalName("CodeblockTemplateType_CodeblockTemplateTypeUser")] CodeblockTemplateTypeUser = 2,
  }

  public enum WeatherType {
    [pbr::OriginalName("WeatherType_WeatherTypeNone")] WeatherTypeNone = 0,
    [pbr::OriginalName("WeatherType_WeatherTypeRain")] WeatherTypeRain = 1,
    [pbr::OriginalName("WeatherType_WeatherTypeSnow")] WeatherTypeSnow = 2,
    [pbr::OriginalName("WeatherType_WeatherTypeWind")] WeatherTypeWind = 3,
    [pbr::OriginalName("WeatherType_WeatherTypeFire")] WeatherTypeFire = 4,
    [pbr::OriginalName("WeatherType_WeatherTypeMiasm")] WeatherTypeMiasm = 5,
  }

  public enum DailyCycleType {
    [pbr::OriginalName("DailyCycleType_DailyCycleUnknow")] DailyCycleUnknow = 0,
    [pbr::OriginalName("DailyCycleType_DailyCycleDayTime")] DailyCycleDayTime = 1,
    [pbr::OriginalName("DailyCycleType_DailyCycleNight")] DailyCycleNight = 2,
    [pbr::OriginalName("DailyCycleType_DailyCycleMorning")] DailyCycleMorning = 3,
    [pbr::OriginalName("DailyCycleType_DailyCycleDusk")] DailyCycleDusk = 4,
  }

  public enum AchieveType {
    [pbr::OriginalName("AchieveType_AchieveTypeUnknow")] AchieveTypeUnknow = 0,
    [pbr::OriginalName("AchieveType_AchieveTypeExplored")] AchieveTypeExplored = 1,
    [pbr::OriginalName("AchieveType_AchieveTypeMonster")] AchieveTypeMonster = 2,
  }

  /// <summary>
  /// 使用者类型
  /// </summary>
  public enum OperatorType {
    /// <summary>
    ///空闲(未使用)
    /// </summary>
    [pbr::OriginalName("OperatorType_OperatorTypeUnknown")] OperatorTypeUnknown = 0,
    /// <summary>
    ///玩家
    /// </summary>
    [pbr::OriginalName("OperatorType_OperatorTypePlayer")] OperatorTypePlayer = 1,
    /// <summary>
    ///机器人
    /// </summary>
    [pbr::OriginalName("OperatorType_OperatorTypeBot")] OperatorTypeBot = 2,
  }

  public enum OSType {
    [pbr::OriginalName("OSType_OSTypeUnknow")] OstypeUnknow = 0,
    [pbr::OriginalName("OSType_OSTypeAndroid")] OstypeAndroid = 1,
    [pbr::OriginalName("OSType_OSTypeIOS")] OstypeIos = 2,
    [pbr::OriginalName("OSType_OSTypeMac")] OstypeMac = 3,
    [pbr::OriginalName("OSType_OSTypeWinPhone")] OstypeWinPhone = 4,
    [pbr::OriginalName("OSType_OSTypeWinPc")] OstypeWinPc = 5,
  }

  public enum PlatformType {
    [pbr::OriginalName("PlatformType_PlatformUnKnow")] PlatformUnKnow = 0,
    [pbr::OriginalName("PlatformType_PlatformTapTap")] PlatformTapTap = 1,
  }

  /// <summary>
  /// 物件控制权限
  /// </summary>
  public enum PowerType {
    [pbr::OriginalName("PowerType_PowerTypeAll")] PowerTypeAll = 0,
    [pbr::OriginalName("PowerType_PowerTypeFriend")] PowerTypeFriend = 1,
    [pbr::OriginalName("PowerType_PowerTypeSelf")] PowerTypeSelf = 2,
  }

  public enum BuildModel {
    /// <summary>
    /// 正常模式
    /// </summary>
    [pbr::OriginalName("BuildModel_BuildModelUnknown")] BuildModelUnknown = 0,
    /// <summary>
    /// 建造物件模式
    /// </summary>
    [pbr::OriginalName("BuildModel_BuildModelCreate")] BuildModelCreate = 1,
    /// <summary>
    /// 删除物件模式
    /// </summary>
    [pbr::OriginalName("BuildModel_BuildModelRemove")] BuildModelRemove = 2,
  }

  /// <summary>
  /// 创建实体时 实体来源
  /// </summary>
  public enum EntityFrom {
    /// <summary>
    /// 玩家or代码块建造
    /// </summary>
    [pbr::OriginalName("EntityFrom_EntityFromBuild")] EntityFromBuild = 0,
    /// <summary>
    /// 实体死亡掉落
    /// </summary>
    [pbr::OriginalName("EntityFrom_EntityFromDrop")] EntityFromDrop = 1,
    /// <summary>
    /// 玩家丢弃的背包item
    /// </summary>
    [pbr::OriginalName("EntityFrom_EntityFromDiscard")] EntityFromDiscard = 2,
    /// <summary>
    /// 资源点刷新
    /// </summary>
    [pbr::OriginalName("EntityFrom_EntityFromResourcePoint")] EntityFromResourcePoint = 3,
    /// <summary>
    /// 使用背包item建造
    /// </summary>
    [pbr::OriginalName("EntityFrom_EntityFromUseItemBuild")] EntityFromUseItemBuild = 4,
  }

  public enum AnimationType {
    /// <summary>
    /// 无效
    /// </summary>
    [pbr::OriginalName("AnimationType_AnimationTypeUnknown")] AnimationTypeUnknown = 0,
    /// <summary>
    /// 帧动画
    /// </summary>
    [pbr::OriginalName("AnimationType_AnimationTypeFrame")] AnimationTypeFrame = 1,
    /// <summary>
    /// 骨骼动画
    /// </summary>
    [pbr::OriginalName("AnimationType_AnimationTypeBone")] AnimationTypeBone = 2,
  }

  public enum InputEventType {
    [pbr::OriginalName("InputEventType_InputEventTypeUnknown")] InputEventTypeUnknown = 0,
    /// <summary>
    /// 输入事件
    /// </summary>
    [pbr::OriginalName("InputEventType_InputEventTypeSpecificKey")] InputEventTypeSpecificKey = 1,
    /// <summary>
    /// 键盘事件
    /// </summary>
    [pbr::OriginalName("InputEventType_InputEventTypeKeypress")] InputEventTypeKeypress = 2,
  }

  public enum KeypressState {
    [pbr::OriginalName("KeypressState_Up")] Up = 0,
    [pbr::OriginalName("KeypressState_Down")] Down = 1,
    [pbr::OriginalName("KeypressState_Downing")] Downing = 2,
  }

  public enum SpecificKey {
    [pbr::OriginalName("SpecificKey_SpecificKeyInvalid")] SpecificKeyInvalid = 0,
    /// <summary>
    ///√
    /// </summary>
    [pbr::OriginalName("SpecificKey_SpecificKeyTick")] SpecificKeyTick = 9900,
    /// <summary>
    ///○
    /// </summary>
    [pbr::OriginalName("SpecificKey_SpecificKeyCircularity")] SpecificKeyCircularity = 9901,
    /// <summary>
    ///×
    /// </summary>
    [pbr::OriginalName("SpecificKey_SpecificKeyX")] SpecificKeyX = 9902,
    /// <summary>
    ///□
    /// </summary>
    [pbr::OriginalName("SpecificKey_SpecificKeySquare")] SpecificKeySquare = 9903,
    /// <summary>
    ///△
    /// </summary>
    [pbr::OriginalName("SpecificKey_SpecificKeyTriangle")] SpecificKeyTriangle = 9904,
  }

  /// <summary>
  /// 自定义面板属性类型
  /// </summary>
  public enum PanelProfileType {
    /// <summary>
    ///背景样式
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeBGStyle")] PanelTypeBgstyle = 0,
    /// <summary>
    ///行数
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeRowNum")] PanelTypeRowNum = 1,
    /// <summary>
    ///列数
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeColNum")] PanelTypeColNum = 2,
    /// <summary>
    ///标题属性
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeTitle")] PanelTypeTitle = 3,
    /// <summary>
    ///格子属性
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeGridProfile")] PanelTypeGridProfile = 4,
    /// <summary>
    ///行高设置
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeHeight")] PanelTypeHeight = 5,
    /// <summary>
    ///列高设置
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeWidth")] PanelTypeWidth = 6,
    /// <summary>
    ///锚点属性
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeAnchor")] PanelTypeAnchor = 7,
    /// <summary>
    ///是否隐藏
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeIsHidden")] PanelTypeIsHidden = 8,
    /// <summary>
    /// 标题颜色
    /// </summary>
    [pbr::OriginalName("PanelProfileType_PanelTypeTitleBGColor")] PanelTypeTitleBgcolor = 9,
  }

  public enum BGStyle {
    /// <summary>
    ///普通样式
    /// </summary>
    [pbr::OriginalName("BGStyle_Normal")] Normal = 0,
    /// <summary>
    ///从左到右渐变
    /// </summary>
    [pbr::OriginalName("BGStyle_GradualLTR")] GradualLtr = 1,
    /// <summary>
    ///从右到左渐变
    /// </summary>
    [pbr::OriginalName("BGStyle_GradualRTL")] GradualRtl = 2,
    /// <summary>
    ///扩散渐变
    /// </summary>
    [pbr::OriginalName("BGStyle_GradualSpread")] GradualSpread = 3,
  }

  public enum AlignStyle {
    [pbr::OriginalName("AlignStyle_Left")] Left = 0,
    [pbr::OriginalName("AlignStyle_Right")] Right = 1,
    [pbr::OriginalName("AlignStyle_Center")] Center = 2,
  }

  public enum PanelAnchorPos {
    [pbr::OriginalName("PanelAnchorPos_LeftUp")] LeftUp = 0,
    [pbr::OriginalName("PanelAnchorPos_MidUp")] MidUp = 1,
    [pbr::OriginalName("PanelAnchorPos_RightUp")] RightUp = 2,
    [pbr::OriginalName("PanelAnchorPos_LeftMid")] LeftMid = 3,
    [pbr::OriginalName("PanelAnchorPos_MidMid")] MidMid = 4,
    [pbr::OriginalName("PanelAnchorPos_RightMid")] RightMid = 5,
    [pbr::OriginalName("PanelAnchorPos_LeftDown")] LeftDown = 6,
    [pbr::OriginalName("PanelAnchorPos_MidDown")] MidDown = 7,
    [pbr::OriginalName("PanelAnchorPos_RightDown")] RightDown = 8,
  }

  public enum EntityLockType {
    [pbr::OriginalName("EntityLockType_EntityLockTypeUnknown")] EntityLockTypeUnknown = 0,
    [pbr::OriginalName("EntityLockType_EntityLockTypeCoding")] EntityLockTypeCoding = 1,
    [pbr::OriginalName("EntityLockType_EntityLockTypeEditing")] EntityLockTypeEditing = 2,
  }

  public enum CodeRestartType {
    /// <summary>
    /// 公共领地
    /// </summary>
    [pbr::OriginalName("CodeRestartType_CodeRestartTypePublicMap")] CodeRestartTypePublicMap = 0,
    /// <summary>
    /// 私有领地
    /// </summary>
    [pbr::OriginalName("CodeRestartType_CodeRestartTypePlayerArea")] CodeRestartTypePlayerArea = 1,
    /// <summary>
    /// 指定实体
    /// </summary>
    [pbr::OriginalName("CodeRestartType_CodeRestartTypeEntity")] CodeRestartTypeEntity = 2,
    /// <summary>
    /// 课程区域的快速编码实体
    /// </summary>
    [pbr::OriginalName("CodeRestartType_CodeRestartTypeLessonArea")] CodeRestartTypeLessonArea = 3,
    /// <summary>
    /// 运行快速变吗的开始实际
    /// </summary>
    [pbr::OriginalName("CodeRestartType_CodeRestartTypeEntityQuickCode")] CodeRestartTypeEntityQuickCode = 4,
  }

  /// <summary>
  /// 声望界面,模板创作界面,背包界面,教案界面,IDE界面地形模式,ide界面创作模式,ide界面属性模式,ide界面代码块模式
  /// </summary>
  public enum ViewType {
    /// <summary>
    /// 未知类型
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeUnknow")] ViewTypeUnknow = 0,
    /// <summary>
    /// 声望界面
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeDungeonScore")] ViewTypeDungeonScore = 1,
    /// <summary>
    /// 模板创作界面
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeTemplateCreate")] ViewTypeTemplateCreate = 2,
    /// <summary>
    /// 背包界面
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeBackpack")] ViewTypeBackpack = 3,
    /// <summary>
    /// 教案界面
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeLessonPlan")] ViewTypeLessonPlan = 4,
    /// <summary>
    /// IDE界面地形模式
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeIdeTerrain")] ViewTypeIdeTerrain = 5,
    /// <summary>
    /// IDE界面创作模式
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeIdeBuild")] ViewTypeIdeBuild = 6,
    /// <summary>
    /// ide界面属性模式
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeIdeAttribute")] ViewTypeIdeAttribute = 7,
    /// <summary>
    /// ide界面代码块模式
    /// </summary>
    [pbr::OriginalName("ViewType_ViewTypeCodeBlock")] ViewTypeCodeBlock = 8,
  }

  public enum DungeonRewardType {
    /// <summary>
    /// 未知类型
    /// </summary>
    [pbr::OriginalName("DungeonRewardType_DungeonRewardTypeUnknow")] DungeonRewardTypeUnknow = 0,
    /// <summary>
    /// 普通奖励
    /// </summary>
    [pbr::OriginalName("DungeonRewardType_DungeonRewardTypeBase")] DungeonRewardTypeBase = 1,
    /// <summary>
    /// 超级奖励
    /// </summary>
    [pbr::OriginalName("DungeonRewardType_DungeonRewardTypeSuper")] DungeonRewardTypeSuper = 2,
    /// <summary>
    /// 终极奖励
    /// </summary>
    [pbr::OriginalName("DungeonRewardType_DungeonRewardTypeFinal")] DungeonRewardTypeFinal = 3,
  }

  public enum OpenUrlType {
    [pbr::OriginalName("OpenUrlType_OpenUrlTypeWindow")] OpenUrlTypeWindow = 0,
    [pbr::OriginalName("OpenUrlType_OpenUrlTypeWebView")] OpenUrlTypeWebView = 1,
    [pbr::OriginalName("OpenUrlType_OpenUrlTypeFullScreen")] OpenUrlTypeFullScreen = 2,
    [pbr::OriginalName("OpenUrlType_OpenUrlTypeWebPage")] OpenUrlTypeWebPage = 3,
  }

  public enum LessonAreaMode {
    [pbr::OriginalName("LessonAreaMode_LessonAreaModeNormal")] LessonAreaModeNormal = 0,
    [pbr::OriginalName("LessonAreaMode_LessonAreaModeQuickCode")] LessonAreaModeQuickCode = 1,
    [pbr::OriginalName("LessonAreaMode_LessonAreaModeVideo")] LessonAreaModeVideo = 2,
  }

  public enum LessonShowType {
    [pbr::OriginalName("LessonShowType_LessonShowTypeAll")] LessonShowTypeAll = 0,
    [pbr::OriginalName("LessonShowType_LessonShowTypeTeacher")] LessonShowTypeTeacher = 1,
  }

  public enum LockState {
    /// <summary>
    /// 未知
    /// </summary>
    [pbr::OriginalName("LockState_LockStateUnkown")] LockStateUnkown = 0,
    /// <summary>
    /// 所有人都锁住
    /// </summary>
    [pbr::OriginalName("LockState_LockStateAll")] LockStateAll = 1,
    /// <summary>
    /// 学生锁住
    /// </summary>
    [pbr::OriginalName("LockState_LockStateStudent")] LockStateStudent = 2,
    /// <summary>
    /// 全部解锁
    /// </summary>
    [pbr::OriginalName("LockState_LockStateNoBody")] LockStateNoBody = 3,
  }

  public enum LessonAreaDataType {
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeName")] LessonAreaDataTypeName = 0,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeScope")] LessonAreaDataTypeScope = 1,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeTpPos")] LessonAreaDataTypeTpPos = 2,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeComment")] LessonAreaDataTypeComment = 3,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeNextArea")] LessonAreaDataTypeNextArea = 4,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypePrevArea")] LessonAreaDataTypePrevArea = 5,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeTerrainsCid")] LessonAreaDataTypeTerrainsCid = 6,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeAddCodeEntity")] LessonAreaDataTypeAddCodeEntity = 7,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeEditCodeEntity")] LessonAreaDataTypeEditCodeEntity = 8,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeDelCodeEntity")] LessonAreaDataTypeDelCodeEntity = 9,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeLessonShowType")] LessonAreaDataTypeLessonShowType = 10,
    [pbr::OriginalName("LessonAreaDataType_LessonAreaDataTypeAreaMode")] LessonAreaDataTypeAreaMode = 11,
  }

  public enum LessonAreaUpdateType {
    /// <summary>
    /// 普通数据更新
    /// </summary>
    [pbr::OriginalName("LessonAreaUpdateType_LessonAreaUpdateTypeNormal")] LessonAreaUpdateTypeNormal = 0,
    /// <summary>
    /// 新增区域
    /// </summary>
    [pbr::OriginalName("LessonAreaUpdateType_LessonAreaUpdateTypeAdd")] LessonAreaUpdateTypeAdd = 1,
    /// <summary>
    /// 删除区域
    /// </summary>
    [pbr::OriginalName("LessonAreaUpdateType_LessonAreaUpdateTypeDel")] LessonAreaUpdateTypeDel = 2,
    /// <summary>
    /// 区域index修改
    /// </summary>
    [pbr::OriginalName("LessonAreaUpdateType_LessonAreaUpdateTypeIndexChange")] LessonAreaUpdateTypeIndexChange = 3,
    /// <summary>
    /// 区域解锁
    /// </summary>
    [pbr::OriginalName("LessonAreaUpdateType_LessonAreaUpdateTypeUnlock")] LessonAreaUpdateTypeUnlock = 4,
  }

  /// <summary>
  ///转场动效
  /// </summary>
  public enum ChangeSceneEffect {
    /// <summary>
    /// 无效果
    /// </summary>
    [pbr::OriginalName("ChangeSceneEffect_ChangeSceneEffectUnkown")] ChangeSceneEffectUnkown = 0,
    /// <summary>
    /// 云雾遮蔽
    /// </summary>
    [pbr::OriginalName("ChangeSceneEffect_ChangeSceneEffectMist")] ChangeSceneEffectMist = 1,
    /// <summary>
    /// 黑屏过渡
    /// </summary>
    [pbr::OriginalName("ChangeSceneEffect_ChangeSceneEffectBlack")] ChangeSceneEffectBlack = 2,
    /// <summary>
    /// 机器猫过渡
    /// </summary>
    [pbr::OriginalName("ChangeSceneEffect_ChangeSceneEffectDoraemon")] ChangeSceneEffectDoraemon = 3,
  }

  public enum ExclusionType {
    [pbr::OriginalName("ExclusionType_ExTypeUnkown")] ExTypeUnkown = 0,
    /// <summary>
    /// 互斥类型：不建造
    /// </summary>
    [pbr::OriginalName("ExclusionType_ExTypeNotBuild")] ExTypeNotBuild = 1,
    /// <summary>
    /// 互斥类型：删除
    /// </summary>
    [pbr::OriginalName("ExclusionType_ExTypeDel")] ExTypeDel = 2,
    /// <summary>
    /// 互斥类型：移动
    /// </summary>
    [pbr::OriginalName("ExclusionType_ExTypeMove")] ExTypeMove = 3,
  }

  #endregion

  #region Messages
  public sealed partial class PbBellClassUserInfo : pb::IMessage<PbBellClassUserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PbBellClassUserInfo> _parser = new pb::MessageParser<PbBellClassUserInfo>(() => new PbBellClassUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PbBellClassUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PbBellClassUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PbBellClassUserInfo(PbBellClassUserInfo other) : this() {
      hashId_ = other.hashId_;
      userId_ = other.userId_;
      username_ = other.username_;
      realName_ = other.realName_;
      userType_ = other.userType_;
      nickname_ = other.nickname_;
      goldNum_ = other.goldNum_;
      codeNum_ = other.codeNum_;
      userIdStr_ = other.userIdStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PbBellClassUserInfo Clone() {
      return new PbBellClassUserInfo(this);
    }

    /// <summary>Field number for the "Hash_id" field.</summary>
    public const int HashIdFieldNumber = 1;
    private string hashId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HashId {
      get { return hashId_; }
      set {
        hashId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "Username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Real_name" field.</summary>
    public const int RealNameFieldNumber = 4;
    private string realName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RealName {
      get { return realName_; }
      set {
        realName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserType" field.</summary>
    public const int UserTypeFieldNumber = 5;
    private string userType_ = "";
    /// <summary>
    /// enum: 1:学生 2:教师 3:系统 4:机构 5:指导师
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserType {
      get { return userType_; }
      set {
        userType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Nickname" field.</summary>
    public const int NicknameFieldNumber = 6;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Gold_num" field.</summary>
    public const int GoldNumFieldNumber = 7;
    private string goldNum_ = "";
    /// <summary>
    /// 金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GoldNum {
      get { return goldNum_; }
      set {
        goldNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Code_num" field.</summary>
    public const int CodeNumFieldNumber = 8;
    private string codeNum_ = "";
    /// <summary>
    /// 编程力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CodeNum {
      get { return codeNum_; }
      set {
        codeNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserIdStr" field.</summary>
    public const int UserIdStrFieldNumber = 9;
    private string userIdStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserIdStr {
      get { return userIdStr_; }
      set {
        userIdStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PbBellClassUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PbBellClassUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HashId != other.HashId) return false;
      if (UserId != other.UserId) return false;
      if (Username != other.Username) return false;
      if (RealName != other.RealName) return false;
      if (UserType != other.UserType) return false;
      if (Nickname != other.Nickname) return false;
      if (GoldNum != other.GoldNum) return false;
      if (CodeNum != other.CodeNum) return false;
      if (UserIdStr != other.UserIdStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HashId.Length != 0) hash ^= HashId.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (RealName.Length != 0) hash ^= RealName.GetHashCode();
      if (UserType.Length != 0) hash ^= UserType.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (GoldNum.Length != 0) hash ^= GoldNum.GetHashCode();
      if (CodeNum.Length != 0) hash ^= CodeNum.GetHashCode();
      if (UserIdStr.Length != 0) hash ^= UserIdStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HashId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HashId);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (RealName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RealName);
      }
      if (UserType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserType);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nickname);
      }
      if (GoldNum.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GoldNum);
      }
      if (CodeNum.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CodeNum);
      }
      if (UserIdStr.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UserIdStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HashId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HashId);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (RealName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RealName);
      }
      if (UserType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserType);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nickname);
      }
      if (GoldNum.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GoldNum);
      }
      if (CodeNum.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CodeNum);
      }
      if (UserIdStr.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UserIdStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HashId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashId);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (RealName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RealName);
      }
      if (UserType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserType);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (GoldNum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GoldNum);
      }
      if (CodeNum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodeNum);
      }
      if (UserIdStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PbBellClassUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.HashId.Length != 0) {
        HashId = other.HashId;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.RealName.Length != 0) {
        RealName = other.RealName;
      }
      if (other.UserType.Length != 0) {
        UserType = other.UserType;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.GoldNum.Length != 0) {
        GoldNum = other.GoldNum;
      }
      if (other.CodeNum.Length != 0) {
        CodeNum = other.CodeNum;
      }
      if (other.UserIdStr.Length != 0) {
        UserIdStr = other.UserIdStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HashId = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            RealName = input.ReadString();
            break;
          }
          case 42: {
            UserType = input.ReadString();
            break;
          }
          case 50: {
            Nickname = input.ReadString();
            break;
          }
          case 58: {
            GoldNum = input.ReadString();
            break;
          }
          case 66: {
            CodeNum = input.ReadString();
            break;
          }
          case 74: {
            UserIdStr = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HashId = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            RealName = input.ReadString();
            break;
          }
          case 42: {
            UserType = input.ReadString();
            break;
          }
          case 50: {
            Nickname = input.ReadString();
            break;
          }
          case 58: {
            GoldNum = input.ReadString();
            break;
          }
          case 66: {
            CodeNum = input.ReadString();
            break;
          }
          case 74: {
            UserIdStr = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountInfo : pb::IMessage<AccountInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountInfo> _parser = new pb::MessageParser<AccountInfo>(() => new AccountInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountInfo(AccountInfo other) : this() {
      data_ = other.data_;
      dataHash_ = other.dataHash_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountInfo Clone() {
      return new AccountInfo(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_hash" field.</summary>
    public const int DataHashFieldNumber = 2;
    private string dataHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataHash {
      get { return dataHash_; }
      set {
        dataHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private string timestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (DataHash != other.DataHash) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (DataHash.Length != 0) hash ^= DataHash.GetHashCode();
      if (Timestamp.Length != 0) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (DataHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DataHash);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (DataHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DataHash);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (DataHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataHash);
      }
      if (Timestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.DataHash.Length != 0) {
        DataHash = other.DataHash;
      }
      if (other.Timestamp.Length != 0) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
          case 18: {
            DataHash = input.ReadString();
            break;
          }
          case 26: {
            Timestamp = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
          case 18: {
            DataHash = input.ReadString();
            break;
          }
          case 26: {
            Timestamp = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///材料
  /// </summary>
  public sealed partial class Stuffs : pb::IMessage<Stuffs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stuffs> _parser = new pb::MessageParser<Stuffs>(() => new Stuffs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Stuffs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stuffs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stuffs(Stuffs other) : this() {
      cid_ = other.cid_;
      quantity_ = other.quantity_;
      randAttr_ = other.randAttr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stuffs Clone() {
      return new Stuffs(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "randAttr" field.</summary>
    public const int RandAttrFieldNumber = 3;
    private bool randAttr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RandAttr {
      get { return randAttr_; }
      set {
        randAttr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Stuffs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Stuffs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (Quantity != other.Quantity) return false;
      if (RandAttr != other.RandAttr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (RandAttr != false) hash ^= RandAttr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (RandAttr != false) {
        output.WriteRawTag(24);
        output.WriteBool(RandAttr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (RandAttr != false) {
        output.WriteRawTag(24);
        output.WriteBool(RandAttr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (RandAttr != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Stuffs other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.RandAttr != false) {
        RandAttr = other.RandAttr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 24: {
            RandAttr = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 24: {
            RandAttr = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家基础配置数据
  /// </summary>
  public sealed partial class RoleSettings : pb::IMessage<RoleSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoleSettings> _parser = new pb::MessageParser<RoleSettings>(() => new RoleSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoleSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoleSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoleSettings(RoleSettings other) : this() {
      id_ = other.id_;
      sex_ = other.sex_;
      defaultSkill_ = other.defaultSkill_;
      collectSkill_ = other.collectSkill_;
      openBoxSkill_ = other.openBoxSkill_;
      bodyCapacity_ = other.bodyCapacity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoleSettings Clone() {
      return new RoleSettings(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 2;
    private int sex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "default_skill" field.</summary>
    public const int DefaultSkillFieldNumber = 3;
    private int defaultSkill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefaultSkill {
      get { return defaultSkill_; }
      set {
        defaultSkill_ = value;
      }
    }

    /// <summary>Field number for the "collect_skill" field.</summary>
    public const int CollectSkillFieldNumber = 4;
    private int collectSkill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CollectSkill {
      get { return collectSkill_; }
      set {
        collectSkill_ = value;
      }
    }

    /// <summary>Field number for the "open_box_skill" field.</summary>
    public const int OpenBoxSkillFieldNumber = 5;
    private int openBoxSkill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OpenBoxSkill {
      get { return openBoxSkill_; }
      set {
        openBoxSkill_ = value;
      }
    }

    /// <summary>Field number for the "body_capacity" field.</summary>
    public const int BodyCapacityFieldNumber = 6;
    private int bodyCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BodyCapacity {
      get { return bodyCapacity_; }
      set {
        bodyCapacity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoleSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoleSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Sex != other.Sex) return false;
      if (DefaultSkill != other.DefaultSkill) return false;
      if (CollectSkill != other.CollectSkill) return false;
      if (OpenBoxSkill != other.OpenBoxSkill) return false;
      if (BodyCapacity != other.BodyCapacity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (DefaultSkill != 0) hash ^= DefaultSkill.GetHashCode();
      if (CollectSkill != 0) hash ^= CollectSkill.GetHashCode();
      if (OpenBoxSkill != 0) hash ^= OpenBoxSkill.GetHashCode();
      if (BodyCapacity != 0) hash ^= BodyCapacity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Sex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sex);
      }
      if (DefaultSkill != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefaultSkill);
      }
      if (CollectSkill != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CollectSkill);
      }
      if (OpenBoxSkill != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OpenBoxSkill);
      }
      if (BodyCapacity != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BodyCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Sex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sex);
      }
      if (DefaultSkill != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefaultSkill);
      }
      if (CollectSkill != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CollectSkill);
      }
      if (OpenBoxSkill != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OpenBoxSkill);
      }
      if (BodyCapacity != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BodyCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (DefaultSkill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefaultSkill);
      }
      if (CollectSkill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CollectSkill);
      }
      if (OpenBoxSkill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpenBoxSkill);
      }
      if (BodyCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BodyCapacity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoleSettings other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.DefaultSkill != 0) {
        DefaultSkill = other.DefaultSkill;
      }
      if (other.CollectSkill != 0) {
        CollectSkill = other.CollectSkill;
      }
      if (other.OpenBoxSkill != 0) {
        OpenBoxSkill = other.OpenBoxSkill;
      }
      if (other.BodyCapacity != 0) {
        BodyCapacity = other.BodyCapacity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Sex = input.ReadInt32();
            break;
          }
          case 24: {
            DefaultSkill = input.ReadInt32();
            break;
          }
          case 32: {
            CollectSkill = input.ReadInt32();
            break;
          }
          case 40: {
            OpenBoxSkill = input.ReadInt32();
            break;
          }
          case 48: {
            BodyCapacity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Sex = input.ReadInt32();
            break;
          }
          case 24: {
            DefaultSkill = input.ReadInt32();
            break;
          }
          case 32: {
            CollectSkill = input.ReadInt32();
            break;
          }
          case 40: {
            OpenBoxSkill = input.ReadInt32();
            break;
          }
          case 48: {
            BodyCapacity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///    upL   --------  upR
  ///          |      |
  ///          |      |
  ///    downL --------  downR
  ///    左旋 45 度 后
  ///          upL
  ///           /\
  ///    downL /  \upR
  ///          \  /
  ///           \/
  ///          downR
  /// </summary>
  public sealed partial class RcRect : pb::IMessage<RcRect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RcRect> _parser = new pb::MessageParser<RcRect>(() => new RcRect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RcRect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RcRect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RcRect(RcRect other) : this() {
      up_ = other.up_ != null ? other.up_.Clone() : null;
      w_ = other.w_;
      h_ = other.h_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RcRect Clone() {
      return new RcRect(this);
    }

    /// <summary>Field number for the "up" field.</summary>
    public const int UpFieldNumber = 1;
    private global::MelandGame3.VectorXY up_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY Up {
      get { return up_; }
      set {
        up_ = value;
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 2;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "h" field.</summary>
    public const int HFieldNumber = 3;
    private int h_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int H {
      get { return h_; }
      set {
        h_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RcRect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RcRect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Up, other.Up)) return false;
      if (W != other.W) return false;
      if (H != other.H) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (up_ != null) hash ^= Up.GetHashCode();
      if (W != 0) hash ^= W.GetHashCode();
      if (H != 0) hash ^= H.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (up_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Up);
      }
      if (W != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(W);
      }
      if (H != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(H);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (up_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Up);
      }
      if (W != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(W);
      }
      if (H != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(H);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (up_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Up);
      }
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (H != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(H);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RcRect other) {
      if (other == null) {
        return;
      }
      if (other.up_ != null) {
        if (up_ == null) {
          Up = new global::MelandGame3.VectorXY();
        }
        Up.MergeFrom(other.Up);
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.H != 0) {
        H = other.H;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (up_ == null) {
              Up = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Up);
            break;
          }
          case 16: {
            W = input.ReadInt32();
            break;
          }
          case 24: {
            H = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (up_ == null) {
              Up = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Up);
            break;
          }
          case 16: {
            W = input.ReadInt32();
            break;
          }
          case 24: {
            H = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityLocation : pb::IMessage<EntityLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityLocation> _parser = new pb::MessageParser<EntityLocation>(() => new EntityLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityLocation(EntityLocation other) : this() {
      mapId_ = other.mapId_;
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityLocation Clone() {
      return new EntityLocation(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private int mapId_;
    /// <summary>
    /// 对象所在地图 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 2;
    private global::MelandGame3.Vector3 loc_;
    /// <summary>
    /// 坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (!object.Equals(Loc, other.Loc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityLocation other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::MelandGame3.Vector3();
        }
        Loc.MergeFrom(other.Loc);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Loc);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Loc);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerLocInfo : pb::IMessage<PlayerLocInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerLocInfo> _parser = new pb::MessageParser<PlayerLocInfo>(() => new PlayerLocInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerLocInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLocInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLocInfo(PlayerLocInfo other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLocInfo Clone() {
      return new PlayerLocInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 3;
    private global::MelandGame3.EntityLocation loc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerLocInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerLocInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Loc, other.Loc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (loc_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Loc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (loc_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Loc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerLocInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::MelandGame3.EntityLocation();
        }
        Loc.MergeFrom(other.Loc);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Loc);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Loc);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家 怪物 移动位置信息
  /// </summary>
  public sealed partial class EntityMoveStep : pb::IMessage<EntityMoveStep>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityMoveStep> _parser = new pb::MessageParser<EntityMoveStep>(() => new EntityMoveStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityMoveStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMoveStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMoveStep(EntityMoveStep other) : this() {
      location_ = other.location_ != null ? other.location_.Clone() : null;
      stamp_ = other.stamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMoveStep Clone() {
      return new EntityMoveStep(this);
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 1;
    private global::MelandGame3.EntityLocation location_;
    /// <summary>
    /// 目标点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "stamp" field.</summary>
    public const int StampFieldNumber = 2;
    private long stamp_;
    /// <summary>
    /// 到达目标点的时间戳 ms
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Stamp {
      get { return stamp_; }
      set {
        stamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityMoveStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityMoveStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Location, other.Location)) return false;
      if (Stamp != other.Stamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (location_ != null) hash ^= Location.GetHashCode();
      if (Stamp != 0L) hash ^= Stamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (location_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Location);
      }
      if (Stamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Stamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (location_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Location);
      }
      if (Stamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Stamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (Stamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Stamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityMoveStep other) {
      if (other == null) {
        return;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::MelandGame3.EntityLocation();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.Stamp != 0L) {
        Stamp = other.Stamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 16: {
            Stamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 16: {
            Stamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityMovement : pb::IMessage<EntityMovement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityMovement> _parser = new pb::MessageParser<EntityMovement>(() => new EntityMovement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityMovement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMovement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMovement(EntityMovement other) : this() {
      entityType_ = other.entityType_;
      entityId_ = other.entityId_;
      curLocation_ = other.curLocation_ != null ? other.curLocation_.Clone() : null;
      destLocation_ = other.destLocation_ != null ? other.destLocation_.Clone() : null;
      type_ = other.type_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMovement Clone() {
      return new EntityMovement(this);
    }

    /// <summary>Field number for the "entity_type" field.</summary>
    public const int EntityTypeFieldNumber = 1;
    private global::MelandGame3.EntityType entityType_ = global::MelandGame3.EntityType.EntityTypeAll;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType EntityType {
      get { return entityType_; }
      set {
        entityType_ = value;
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private string entityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cur_location" field.</summary>
    public const int CurLocationFieldNumber = 3;
    private global::MelandGame3.EntityMoveStep curLocation_;
    /// <summary>
    /// 当前位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityMoveStep CurLocation {
      get { return curLocation_; }
      set {
        curLocation_ = value;
      }
    }

    /// <summary>Field number for the "dest_location" field.</summary>
    public const int DestLocationFieldNumber = 4;
    private global::MelandGame3.EntityMoveStep destLocation_;
    /// <summary>
    /// 目标位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityMoveStep DestLocation {
      get { return destLocation_; }
      set {
        destLocation_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::MelandGame3.MovementType type_ = global::MelandGame3.MovementType.MovementTypeUnknown;
    /// <summary>
    /// 移动方式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MovementType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Dir" field.</summary>
    public const int DirFieldNumber = 6;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 实体朝向(交互数据 = 实际数据 * 1000)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityMovement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityMovement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityType != other.EntityType) return false;
      if (EntityId != other.EntityId) return false;
      if (!object.Equals(CurLocation, other.CurLocation)) return false;
      if (!object.Equals(DestLocation, other.DestLocation)) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityType != global::MelandGame3.EntityType.EntityTypeAll) hash ^= EntityType.GetHashCode();
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (curLocation_ != null) hash ^= CurLocation.GetHashCode();
      if (destLocation_ != null) hash ^= DestLocation.GetHashCode();
      if (Type != global::MelandGame3.MovementType.MovementTypeUnknown) hash ^= Type.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EntityType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EntityType);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntityId);
      }
      if (curLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CurLocation);
      }
      if (destLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DestLocation);
      }
      if (Type != global::MelandGame3.MovementType.MovementTypeUnknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (dir_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EntityType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EntityType);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntityId);
      }
      if (curLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CurLocation);
      }
      if (destLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DestLocation);
      }
      if (Type != global::MelandGame3.MovementType.MovementTypeUnknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (dir_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EntityType != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntityType);
      }
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (curLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurLocation);
      }
      if (destLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestLocation);
      }
      if (Type != global::MelandGame3.MovementType.MovementTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityMovement other) {
      if (other == null) {
        return;
      }
      if (other.EntityType != global::MelandGame3.EntityType.EntityTypeAll) {
        EntityType = other.EntityType;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.curLocation_ != null) {
        if (curLocation_ == null) {
          CurLocation = new global::MelandGame3.EntityMoveStep();
        }
        CurLocation.MergeFrom(other.CurLocation);
      }
      if (other.destLocation_ != null) {
        if (destLocation_ == null) {
          DestLocation = new global::MelandGame3.EntityMoveStep();
        }
        DestLocation.MergeFrom(other.DestLocation);
      }
      if (other.Type != global::MelandGame3.MovementType.MovementTypeUnknown) {
        Type = other.Type;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EntityType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            EntityId = input.ReadString();
            break;
          }
          case 26: {
            if (curLocation_ == null) {
              CurLocation = new global::MelandGame3.EntityMoveStep();
            }
            input.ReadMessage(CurLocation);
            break;
          }
          case 34: {
            if (destLocation_ == null) {
              DestLocation = new global::MelandGame3.EntityMoveStep();
            }
            input.ReadMessage(DestLocation);
            break;
          }
          case 40: {
            Type = (global::MelandGame3.MovementType) input.ReadEnum();
            break;
          }
          case 50: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EntityType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            EntityId = input.ReadString();
            break;
          }
          case 26: {
            if (curLocation_ == null) {
              CurLocation = new global::MelandGame3.EntityMoveStep();
            }
            input.ReadMessage(CurLocation);
            break;
          }
          case 34: {
            if (destLocation_ == null) {
              DestLocation = new global::MelandGame3.EntityMoveStep();
            }
            input.ReadMessage(DestLocation);
            break;
          }
          case 40: {
            Type = (global::MelandGame3.MovementType) input.ReadEnum();
            break;
          }
          case 50: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectAttr : pb::IMessage<ObjectAttr>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectAttr> _parser = new pb::MessageParser<ObjectAttr>(() => new ObjectAttr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectAttr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAttr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAttr(ObjectAttr other) : this() {
      isMutual_ = other.isMutual_;
      isEdit_ = other.isEdit_;
      pileLimit_ = other.pileLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAttr Clone() {
      return new ObjectAttr(this);
    }

    /// <summary>Field number for the "isMutual" field.</summary>
    public const int IsMutualFieldNumber = 1;
    private bool isMutual_;
    /// <summary>
    /// 是否可交互
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMutual {
      get { return isMutual_; }
      set {
        isMutual_ = value;
      }
    }

    /// <summary>Field number for the "isEdit" field.</summary>
    public const int IsEditFieldNumber = 2;
    private bool isEdit_;
    /// <summary>
    /// 是否可编程
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEdit {
      get { return isEdit_; }
      set {
        isEdit_ = value;
      }
    }

    /// <summary>Field number for the "pileLimit" field.</summary>
    public const int PileLimitFieldNumber = 3;
    private int pileLimit_;
    /// <summary>
    /// 堆叠数量上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PileLimit {
      get { return pileLimit_; }
      set {
        pileLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectAttr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectAttr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsMutual != other.IsMutual) return false;
      if (IsEdit != other.IsEdit) return false;
      if (PileLimit != other.PileLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsMutual != false) hash ^= IsMutual.GetHashCode();
      if (IsEdit != false) hash ^= IsEdit.GetHashCode();
      if (PileLimit != 0) hash ^= PileLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsMutual != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsMutual);
      }
      if (IsEdit != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEdit);
      }
      if (PileLimit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PileLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsMutual != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsMutual);
      }
      if (IsEdit != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEdit);
      }
      if (PileLimit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PileLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsMutual != false) {
        size += 1 + 1;
      }
      if (IsEdit != false) {
        size += 1 + 1;
      }
      if (PileLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PileLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectAttr other) {
      if (other == null) {
        return;
      }
      if (other.IsMutual != false) {
        IsMutual = other.IsMutual;
      }
      if (other.IsEdit != false) {
        IsEdit = other.IsEdit;
      }
      if (other.PileLimit != 0) {
        PileLimit = other.PileLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsMutual = input.ReadBool();
            break;
          }
          case 16: {
            IsEdit = input.ReadBool();
            break;
          }
          case 24: {
            PileLimit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsMutual = input.ReadBool();
            break;
          }
          case 16: {
            IsEdit = input.ReadBool();
            break;
          }
          case 24: {
            PileLimit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityId : pb::IMessage<EntityId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityId> _parser = new pb::MessageParser<EntityId>(() => new EntityId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityId(EntityId other) : this() {
      type_ = other.type_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityId Clone() {
      return new EntityId(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::MelandGame3.EntityType type_ = global::MelandGame3.EntityType.EntityTypeAll;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) hash ^= Type.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityId other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::MelandGame3.EntityType.EntityTypeAll) {
        Type = other.Type;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityIdData : pb::IMessage<EntityIdData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityIdData> _parser = new pb::MessageParser<EntityIdData>(() => new EntityIdData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityIdData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityIdData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityIdData(EntityIdData other) : this() {
      type_ = other.type_;
      eid_ = other.eid_;
      cid_ = other.cid_;
      entityTemplateId_ = other.entityTemplateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityIdData Clone() {
      return new EntityIdData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::MelandGame3.EntityType type_ = global::MelandGame3.EntityType.EntityTypeAll;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 2;
    private string eid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Eid {
      get { return eid_; }
      set {
        eid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 3;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "entity_template_id" field.</summary>
    public const int EntityTemplateIdFieldNumber = 4;
    private string entityTemplateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntityTemplateId {
      get { return entityTemplateId_; }
      set {
        entityTemplateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityIdData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityIdData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Eid != other.Eid) return false;
      if (Cid != other.Cid) return false;
      if (EntityTemplateId != other.EntityTemplateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) hash ^= Type.GetHashCode();
      if (Eid.Length != 0) hash ^= Eid.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (EntityTemplateId.Length != 0) hash ^= EntityTemplateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Eid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Eid);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (EntityTemplateId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EntityTemplateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Eid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Eid);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (EntityTemplateId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EntityTemplateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Eid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Eid);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (EntityTemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityTemplateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityIdData other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::MelandGame3.EntityType.EntityTypeAll) {
        Type = other.Type;
      }
      if (other.Eid.Length != 0) {
        Eid = other.Eid;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.EntityTemplateId.Length != 0) {
        EntityTemplateId = other.EntityTemplateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            Eid = input.ReadString();
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            EntityTemplateId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            Eid = input.ReadString();
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            EntityTemplateId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityWithLocation : pb::IMessage<EntityWithLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityWithLocation> _parser = new pb::MessageParser<EntityWithLocation>(() => new EntityWithLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityWithLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityWithLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityWithLocation(EntityWithLocation other) : this() {
      type_ = other.type_;
      id_ = other.id_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      switch (other.EntityCase) {
        case EntityOneofCase.MapObject:
          MapObject = other.MapObject.Clone();
          break;
        case EntityOneofCase.Player:
          Player = other.Player.Clone();
          break;
        case EntityOneofCase.Npc:
          Npc = other.Npc.Clone();
          break;
        case EntityOneofCase.Monster:
          Monster = other.Monster.Clone();
          break;
        case EntityOneofCase.FallingObject:
          FallingObject = other.FallingObject.Clone();
          break;
        case EntityOneofCase.Material:
          Material = other.Material.Clone();
          break;
        case EntityOneofCase.Bot:
          Bot = other.Bot.Clone();
          break;
        case EntityOneofCase.FallingBox:
          FallingBox = other.FallingBox.Clone();
          break;
        case EntityOneofCase.Plant:
          Plant = other.Plant.Clone();
          break;
        case EntityOneofCase.Pet:
          Pet = other.Pet.Clone();
          break;
        case EntityOneofCase.Puppet:
          Puppet = other.Puppet.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityWithLocation Clone() {
      return new EntityWithLocation(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::MelandGame3.EntityType type_ = global::MelandGame3.EntityType.EntityTypeAll;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private global::MelandGame3.EntityLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private global::MelandGame3.Vector3 direction_;
    /// <summary>
    /// TODO: 1001
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "map_object" field.</summary>
    public const int MapObjectFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MapObject MapObject {
      get { return entityCase_ == EntityOneofCase.MapObject ? (global::MelandGame3.MapObject) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.MapObject;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Player Player {
      get { return entityCase_ == EntityOneofCase.Player ? (global::MelandGame3.Player) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.Player;
      }
    }

    /// <summary>Field number for the "npc" field.</summary>
    public const int NpcFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Npc Npc {
      get { return entityCase_ == EntityOneofCase.Npc ? (global::MelandGame3.Npc) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.Npc;
      }
    }

    /// <summary>Field number for the "monster" field.</summary>
    public const int MonsterFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Monster Monster {
      get { return entityCase_ == EntityOneofCase.Monster ? (global::MelandGame3.Monster) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.Monster;
      }
    }

    /// <summary>Field number for the "falling_object" field.</summary>
    public const int FallingObjectFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.FallingObject FallingObject {
      get { return entityCase_ == EntityOneofCase.FallingObject ? (global::MelandGame3.FallingObject) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.FallingObject;
      }
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Material Material {
      get { return entityCase_ == EntityOneofCase.Material ? (global::MelandGame3.Material) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.Material;
      }
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Bot Bot {
      get { return entityCase_ == EntityOneofCase.Bot ? (global::MelandGame3.Bot) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.Bot;
      }
    }

    /// <summary>Field number for the "falling_box" field.</summary>
    public const int FallingBoxFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.FallingBox FallingBox {
      get { return entityCase_ == EntityOneofCase.FallingBox ? (global::MelandGame3.FallingBox) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.FallingBox;
      }
    }

    /// <summary>Field number for the "plant" field.</summary>
    public const int PlantFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Plant Plant {
      get { return entityCase_ == EntityOneofCase.Plant ? (global::MelandGame3.Plant) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.Plant;
      }
    }

    /// <summary>Field number for the "pet" field.</summary>
    public const int PetFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Pet Pet {
      get { return entityCase_ == EntityOneofCase.Pet ? (global::MelandGame3.Pet) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.Pet;
      }
    }

    /// <summary>Field number for the "puppet" field.</summary>
    public const int PuppetFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Puppet Puppet {
      get { return entityCase_ == EntityOneofCase.Puppet ? (global::MelandGame3.Puppet) entity_ : null; }
      set {
        entity_ = value;
        entityCase_ = value == null ? EntityOneofCase.None : EntityOneofCase.Puppet;
      }
    }

    private object entity_;
    /// <summary>Enum of possible cases for the "entity" oneof.</summary>
    public enum EntityOneofCase {
      None = 0,
      MapObject = 5,
      Player = 6,
      Npc = 7,
      Monster = 8,
      FallingObject = 9,
      Material = 10,
      Bot = 11,
      FallingBox = 12,
      Plant = 13,
      Pet = 14,
      Puppet = 15,
    }
    private EntityOneofCase entityCase_ = EntityOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityOneofCase EntityCase {
      get { return entityCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEntity() {
      entityCase_ = EntityOneofCase.None;
      entity_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityWithLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityWithLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      if (!object.Equals(MapObject, other.MapObject)) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if (!object.Equals(Npc, other.Npc)) return false;
      if (!object.Equals(Monster, other.Monster)) return false;
      if (!object.Equals(FallingObject, other.FallingObject)) return false;
      if (!object.Equals(Material, other.Material)) return false;
      if (!object.Equals(Bot, other.Bot)) return false;
      if (!object.Equals(FallingBox, other.FallingBox)) return false;
      if (!object.Equals(Plant, other.Plant)) return false;
      if (!object.Equals(Pet, other.Pet)) return false;
      if (!object.Equals(Puppet, other.Puppet)) return false;
      if (EntityCase != other.EntityCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) hash ^= Type.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (entityCase_ == EntityOneofCase.MapObject) hash ^= MapObject.GetHashCode();
      if (entityCase_ == EntityOneofCase.Player) hash ^= Player.GetHashCode();
      if (entityCase_ == EntityOneofCase.Npc) hash ^= Npc.GetHashCode();
      if (entityCase_ == EntityOneofCase.Monster) hash ^= Monster.GetHashCode();
      if (entityCase_ == EntityOneofCase.FallingObject) hash ^= FallingObject.GetHashCode();
      if (entityCase_ == EntityOneofCase.Material) hash ^= Material.GetHashCode();
      if (entityCase_ == EntityOneofCase.Bot) hash ^= Bot.GetHashCode();
      if (entityCase_ == EntityOneofCase.FallingBox) hash ^= FallingBox.GetHashCode();
      if (entityCase_ == EntityOneofCase.Plant) hash ^= Plant.GetHashCode();
      if (entityCase_ == EntityOneofCase.Pet) hash ^= Pet.GetHashCode();
      if (entityCase_ == EntityOneofCase.Puppet) hash ^= Puppet.GetHashCode();
      hash ^= (int) entityCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
      if (direction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Direction);
      }
      if (entityCase_ == EntityOneofCase.MapObject) {
        output.WriteRawTag(42);
        output.WriteMessage(MapObject);
      }
      if (entityCase_ == EntityOneofCase.Player) {
        output.WriteRawTag(50);
        output.WriteMessage(Player);
      }
      if (entityCase_ == EntityOneofCase.Npc) {
        output.WriteRawTag(58);
        output.WriteMessage(Npc);
      }
      if (entityCase_ == EntityOneofCase.Monster) {
        output.WriteRawTag(66);
        output.WriteMessage(Monster);
      }
      if (entityCase_ == EntityOneofCase.FallingObject) {
        output.WriteRawTag(74);
        output.WriteMessage(FallingObject);
      }
      if (entityCase_ == EntityOneofCase.Material) {
        output.WriteRawTag(82);
        output.WriteMessage(Material);
      }
      if (entityCase_ == EntityOneofCase.Bot) {
        output.WriteRawTag(90);
        output.WriteMessage(Bot);
      }
      if (entityCase_ == EntityOneofCase.FallingBox) {
        output.WriteRawTag(98);
        output.WriteMessage(FallingBox);
      }
      if (entityCase_ == EntityOneofCase.Plant) {
        output.WriteRawTag(106);
        output.WriteMessage(Plant);
      }
      if (entityCase_ == EntityOneofCase.Pet) {
        output.WriteRawTag(114);
        output.WriteMessage(Pet);
      }
      if (entityCase_ == EntityOneofCase.Puppet) {
        output.WriteRawTag(122);
        output.WriteMessage(Puppet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
      if (direction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Direction);
      }
      if (entityCase_ == EntityOneofCase.MapObject) {
        output.WriteRawTag(42);
        output.WriteMessage(MapObject);
      }
      if (entityCase_ == EntityOneofCase.Player) {
        output.WriteRawTag(50);
        output.WriteMessage(Player);
      }
      if (entityCase_ == EntityOneofCase.Npc) {
        output.WriteRawTag(58);
        output.WriteMessage(Npc);
      }
      if (entityCase_ == EntityOneofCase.Monster) {
        output.WriteRawTag(66);
        output.WriteMessage(Monster);
      }
      if (entityCase_ == EntityOneofCase.FallingObject) {
        output.WriteRawTag(74);
        output.WriteMessage(FallingObject);
      }
      if (entityCase_ == EntityOneofCase.Material) {
        output.WriteRawTag(82);
        output.WriteMessage(Material);
      }
      if (entityCase_ == EntityOneofCase.Bot) {
        output.WriteRawTag(90);
        output.WriteMessage(Bot);
      }
      if (entityCase_ == EntityOneofCase.FallingBox) {
        output.WriteRawTag(98);
        output.WriteMessage(FallingBox);
      }
      if (entityCase_ == EntityOneofCase.Plant) {
        output.WriteRawTag(106);
        output.WriteMessage(Plant);
      }
      if (entityCase_ == EntityOneofCase.Pet) {
        output.WriteRawTag(114);
        output.WriteMessage(Pet);
      }
      if (entityCase_ == EntityOneofCase.Puppet) {
        output.WriteRawTag(122);
        output.WriteMessage(Puppet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (entityCase_ == EntityOneofCase.MapObject) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapObject);
      }
      if (entityCase_ == EntityOneofCase.Player) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (entityCase_ == EntityOneofCase.Npc) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Npc);
      }
      if (entityCase_ == EntityOneofCase.Monster) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Monster);
      }
      if (entityCase_ == EntityOneofCase.FallingObject) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FallingObject);
      }
      if (entityCase_ == EntityOneofCase.Material) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (entityCase_ == EntityOneofCase.Bot) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bot);
      }
      if (entityCase_ == EntityOneofCase.FallingBox) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FallingBox);
      }
      if (entityCase_ == EntityOneofCase.Plant) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plant);
      }
      if (entityCase_ == EntityOneofCase.Pet) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pet);
      }
      if (entityCase_ == EntityOneofCase.Puppet) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Puppet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityWithLocation other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::MelandGame3.EntityType.EntityTypeAll) {
        Type = other.Type;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::MelandGame3.EntityLocation();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::MelandGame3.Vector3();
        }
        Direction.MergeFrom(other.Direction);
      }
      switch (other.EntityCase) {
        case EntityOneofCase.MapObject:
          if (MapObject == null) {
            MapObject = new global::MelandGame3.MapObject();
          }
          MapObject.MergeFrom(other.MapObject);
          break;
        case EntityOneofCase.Player:
          if (Player == null) {
            Player = new global::MelandGame3.Player();
          }
          Player.MergeFrom(other.Player);
          break;
        case EntityOneofCase.Npc:
          if (Npc == null) {
            Npc = new global::MelandGame3.Npc();
          }
          Npc.MergeFrom(other.Npc);
          break;
        case EntityOneofCase.Monster:
          if (Monster == null) {
            Monster = new global::MelandGame3.Monster();
          }
          Monster.MergeFrom(other.Monster);
          break;
        case EntityOneofCase.FallingObject:
          if (FallingObject == null) {
            FallingObject = new global::MelandGame3.FallingObject();
          }
          FallingObject.MergeFrom(other.FallingObject);
          break;
        case EntityOneofCase.Material:
          if (Material == null) {
            Material = new global::MelandGame3.Material();
          }
          Material.MergeFrom(other.Material);
          break;
        case EntityOneofCase.Bot:
          if (Bot == null) {
            Bot = new global::MelandGame3.Bot();
          }
          Bot.MergeFrom(other.Bot);
          break;
        case EntityOneofCase.FallingBox:
          if (FallingBox == null) {
            FallingBox = new global::MelandGame3.FallingBox();
          }
          FallingBox.MergeFrom(other.FallingBox);
          break;
        case EntityOneofCase.Plant:
          if (Plant == null) {
            Plant = new global::MelandGame3.Plant();
          }
          Plant.MergeFrom(other.Plant);
          break;
        case EntityOneofCase.Pet:
          if (Pet == null) {
            Pet = new global::MelandGame3.Pet();
          }
          Pet.MergeFrom(other.Pet);
          break;
        case EntityOneofCase.Puppet:
          if (Puppet == null) {
            Puppet = new global::MelandGame3.Puppet();
          }
          Puppet.MergeFrom(other.Puppet);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 34: {
            if (direction_ == null) {
              Direction = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 42: {
            global::MelandGame3.MapObject subBuilder = new global::MelandGame3.MapObject();
            if (entityCase_ == EntityOneofCase.MapObject) {
              subBuilder.MergeFrom(MapObject);
            }
            input.ReadMessage(subBuilder);
            MapObject = subBuilder;
            break;
          }
          case 50: {
            global::MelandGame3.Player subBuilder = new global::MelandGame3.Player();
            if (entityCase_ == EntityOneofCase.Player) {
              subBuilder.MergeFrom(Player);
            }
            input.ReadMessage(subBuilder);
            Player = subBuilder;
            break;
          }
          case 58: {
            global::MelandGame3.Npc subBuilder = new global::MelandGame3.Npc();
            if (entityCase_ == EntityOneofCase.Npc) {
              subBuilder.MergeFrom(Npc);
            }
            input.ReadMessage(subBuilder);
            Npc = subBuilder;
            break;
          }
          case 66: {
            global::MelandGame3.Monster subBuilder = new global::MelandGame3.Monster();
            if (entityCase_ == EntityOneofCase.Monster) {
              subBuilder.MergeFrom(Monster);
            }
            input.ReadMessage(subBuilder);
            Monster = subBuilder;
            break;
          }
          case 74: {
            global::MelandGame3.FallingObject subBuilder = new global::MelandGame3.FallingObject();
            if (entityCase_ == EntityOneofCase.FallingObject) {
              subBuilder.MergeFrom(FallingObject);
            }
            input.ReadMessage(subBuilder);
            FallingObject = subBuilder;
            break;
          }
          case 82: {
            global::MelandGame3.Material subBuilder = new global::MelandGame3.Material();
            if (entityCase_ == EntityOneofCase.Material) {
              subBuilder.MergeFrom(Material);
            }
            input.ReadMessage(subBuilder);
            Material = subBuilder;
            break;
          }
          case 90: {
            global::MelandGame3.Bot subBuilder = new global::MelandGame3.Bot();
            if (entityCase_ == EntityOneofCase.Bot) {
              subBuilder.MergeFrom(Bot);
            }
            input.ReadMessage(subBuilder);
            Bot = subBuilder;
            break;
          }
          case 98: {
            global::MelandGame3.FallingBox subBuilder = new global::MelandGame3.FallingBox();
            if (entityCase_ == EntityOneofCase.FallingBox) {
              subBuilder.MergeFrom(FallingBox);
            }
            input.ReadMessage(subBuilder);
            FallingBox = subBuilder;
            break;
          }
          case 106: {
            global::MelandGame3.Plant subBuilder = new global::MelandGame3.Plant();
            if (entityCase_ == EntityOneofCase.Plant) {
              subBuilder.MergeFrom(Plant);
            }
            input.ReadMessage(subBuilder);
            Plant = subBuilder;
            break;
          }
          case 114: {
            global::MelandGame3.Pet subBuilder = new global::MelandGame3.Pet();
            if (entityCase_ == EntityOneofCase.Pet) {
              subBuilder.MergeFrom(Pet);
            }
            input.ReadMessage(subBuilder);
            Pet = subBuilder;
            break;
          }
          case 122: {
            global::MelandGame3.Puppet subBuilder = new global::MelandGame3.Puppet();
            if (entityCase_ == EntityOneofCase.Puppet) {
              subBuilder.MergeFrom(Puppet);
            }
            input.ReadMessage(subBuilder);
            Puppet = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 34: {
            if (direction_ == null) {
              Direction = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 42: {
            global::MelandGame3.MapObject subBuilder = new global::MelandGame3.MapObject();
            if (entityCase_ == EntityOneofCase.MapObject) {
              subBuilder.MergeFrom(MapObject);
            }
            input.ReadMessage(subBuilder);
            MapObject = subBuilder;
            break;
          }
          case 50: {
            global::MelandGame3.Player subBuilder = new global::MelandGame3.Player();
            if (entityCase_ == EntityOneofCase.Player) {
              subBuilder.MergeFrom(Player);
            }
            input.ReadMessage(subBuilder);
            Player = subBuilder;
            break;
          }
          case 58: {
            global::MelandGame3.Npc subBuilder = new global::MelandGame3.Npc();
            if (entityCase_ == EntityOneofCase.Npc) {
              subBuilder.MergeFrom(Npc);
            }
            input.ReadMessage(subBuilder);
            Npc = subBuilder;
            break;
          }
          case 66: {
            global::MelandGame3.Monster subBuilder = new global::MelandGame3.Monster();
            if (entityCase_ == EntityOneofCase.Monster) {
              subBuilder.MergeFrom(Monster);
            }
            input.ReadMessage(subBuilder);
            Monster = subBuilder;
            break;
          }
          case 74: {
            global::MelandGame3.FallingObject subBuilder = new global::MelandGame3.FallingObject();
            if (entityCase_ == EntityOneofCase.FallingObject) {
              subBuilder.MergeFrom(FallingObject);
            }
            input.ReadMessage(subBuilder);
            FallingObject = subBuilder;
            break;
          }
          case 82: {
            global::MelandGame3.Material subBuilder = new global::MelandGame3.Material();
            if (entityCase_ == EntityOneofCase.Material) {
              subBuilder.MergeFrom(Material);
            }
            input.ReadMessage(subBuilder);
            Material = subBuilder;
            break;
          }
          case 90: {
            global::MelandGame3.Bot subBuilder = new global::MelandGame3.Bot();
            if (entityCase_ == EntityOneofCase.Bot) {
              subBuilder.MergeFrom(Bot);
            }
            input.ReadMessage(subBuilder);
            Bot = subBuilder;
            break;
          }
          case 98: {
            global::MelandGame3.FallingBox subBuilder = new global::MelandGame3.FallingBox();
            if (entityCase_ == EntityOneofCase.FallingBox) {
              subBuilder.MergeFrom(FallingBox);
            }
            input.ReadMessage(subBuilder);
            FallingBox = subBuilder;
            break;
          }
          case 106: {
            global::MelandGame3.Plant subBuilder = new global::MelandGame3.Plant();
            if (entityCase_ == EntityOneofCase.Plant) {
              subBuilder.MergeFrom(Plant);
            }
            input.ReadMessage(subBuilder);
            Plant = subBuilder;
            break;
          }
          case 114: {
            global::MelandGame3.Pet subBuilder = new global::MelandGame3.Pet();
            if (entityCase_ == EntityOneofCase.Pet) {
              subBuilder.MergeFrom(Pet);
            }
            input.ReadMessage(subBuilder);
            Pet = subBuilder;
            break;
          }
          case 122: {
            global::MelandGame3.Puppet subBuilder = new global::MelandGame3.Puppet();
            if (entityCase_ == EntityOneofCase.Puppet) {
              subBuilder.MergeFrom(Puppet);
            }
            input.ReadMessage(subBuilder);
            Puppet = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityNftInfo : pb::IMessage<EntityNftInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityNftInfo> _parser = new pb::MessageParser<EntityNftInfo>(() => new EntityNftInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityNftInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityNftInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityNftInfo(EntityNftInfo other) : this() {
      nftId_ = other.nftId_;
      nftType_ = other.nftType_;
      placeableInfo_ = other.placeableInfo_ != null ? other.placeableInfo_.Clone() : null;
      thirdPictureFrameUrl_ = other.thirdPictureFrameUrl_;
      thirdNftInfo_ = other.thirdNftInfo_ != null ? other.thirdNftInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityNftInfo Clone() {
      return new EntityNftInfo(this);
    }

    /// <summary>Field number for the "nft_id" field.</summary>
    public const int NftIdFieldNumber = 1;
    private string nftId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NftId {
      get { return nftId_; }
      set {
        nftId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nft_type" field.</summary>
    public const int NftTypeFieldNumber = 2;
    private global::MelandGame3.ItemType nftType_ = global::MelandGame3.ItemType.ItemTypeGame;
    /// <summary>
    /// 放置类NFT || 第三方nft
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ItemType NftType {
      get { return nftType_; }
      set {
        nftType_ = value;
      }
    }

    /// <summary>Field number for the "placeable_info" field.</summary>
    public const int PlaceableInfoFieldNumber = 3;
    private global::MelandGame3.NftPlaceableInfo placeableInfo_;
    /// <summary>
    /// 放置类 nft 信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.NftPlaceableInfo PlaceableInfo {
      get { return placeableInfo_; }
      set {
        placeableInfo_ = value;
      }
    }

    /// <summary>Field number for the "third_picture_frame_url" field.</summary>
    public const int ThirdPictureFrameUrlFieldNumber = 4;
    private string thirdPictureFrameUrl_ = "";
    /// <summary>
    /// 第三方 NFT 相框URL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThirdPictureFrameUrl {
      get { return thirdPictureFrameUrl_; }
      set {
        thirdPictureFrameUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "third_nft_info" field.</summary>
    public const int ThirdNftInfoFieldNumber = 5;
    private global::MelandGame3.NftThirdNftInfo thirdNftInfo_;
    /// <summary>
    /// 第三方 nft 信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.NftThirdNftInfo ThirdNftInfo {
      get { return thirdNftInfo_; }
      set {
        thirdNftInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityNftInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityNftInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NftId != other.NftId) return false;
      if (NftType != other.NftType) return false;
      if (!object.Equals(PlaceableInfo, other.PlaceableInfo)) return false;
      if (ThirdPictureFrameUrl != other.ThirdPictureFrameUrl) return false;
      if (!object.Equals(ThirdNftInfo, other.ThirdNftInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NftId.Length != 0) hash ^= NftId.GetHashCode();
      if (NftType != global::MelandGame3.ItemType.ItemTypeGame) hash ^= NftType.GetHashCode();
      if (placeableInfo_ != null) hash ^= PlaceableInfo.GetHashCode();
      if (ThirdPictureFrameUrl.Length != 0) hash ^= ThirdPictureFrameUrl.GetHashCode();
      if (thirdNftInfo_ != null) hash ^= ThirdNftInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NftId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NftId);
      }
      if (NftType != global::MelandGame3.ItemType.ItemTypeGame) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NftType);
      }
      if (placeableInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaceableInfo);
      }
      if (ThirdPictureFrameUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ThirdPictureFrameUrl);
      }
      if (thirdNftInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ThirdNftInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NftId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NftId);
      }
      if (NftType != global::MelandGame3.ItemType.ItemTypeGame) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NftType);
      }
      if (placeableInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaceableInfo);
      }
      if (ThirdPictureFrameUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ThirdPictureFrameUrl);
      }
      if (thirdNftInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ThirdNftInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NftId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NftId);
      }
      if (NftType != global::MelandGame3.ItemType.ItemTypeGame) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NftType);
      }
      if (placeableInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaceableInfo);
      }
      if (ThirdPictureFrameUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThirdPictureFrameUrl);
      }
      if (thirdNftInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThirdNftInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityNftInfo other) {
      if (other == null) {
        return;
      }
      if (other.NftId.Length != 0) {
        NftId = other.NftId;
      }
      if (other.NftType != global::MelandGame3.ItemType.ItemTypeGame) {
        NftType = other.NftType;
      }
      if (other.placeableInfo_ != null) {
        if (placeableInfo_ == null) {
          PlaceableInfo = new global::MelandGame3.NftPlaceableInfo();
        }
        PlaceableInfo.MergeFrom(other.PlaceableInfo);
      }
      if (other.ThirdPictureFrameUrl.Length != 0) {
        ThirdPictureFrameUrl = other.ThirdPictureFrameUrl;
      }
      if (other.thirdNftInfo_ != null) {
        if (thirdNftInfo_ == null) {
          ThirdNftInfo = new global::MelandGame3.NftThirdNftInfo();
        }
        ThirdNftInfo.MergeFrom(other.ThirdNftInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NftId = input.ReadString();
            break;
          }
          case 16: {
            NftType = (global::MelandGame3.ItemType) input.ReadEnum();
            break;
          }
          case 26: {
            if (placeableInfo_ == null) {
              PlaceableInfo = new global::MelandGame3.NftPlaceableInfo();
            }
            input.ReadMessage(PlaceableInfo);
            break;
          }
          case 34: {
            ThirdPictureFrameUrl = input.ReadString();
            break;
          }
          case 42: {
            if (thirdNftInfo_ == null) {
              ThirdNftInfo = new global::MelandGame3.NftThirdNftInfo();
            }
            input.ReadMessage(ThirdNftInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NftId = input.ReadString();
            break;
          }
          case 16: {
            NftType = (global::MelandGame3.ItemType) input.ReadEnum();
            break;
          }
          case 26: {
            if (placeableInfo_ == null) {
              PlaceableInfo = new global::MelandGame3.NftPlaceableInfo();
            }
            input.ReadMessage(PlaceableInfo);
            break;
          }
          case 34: {
            ThirdPictureFrameUrl = input.ReadString();
            break;
          }
          case 42: {
            if (thirdNftInfo_ == null) {
              ThirdNftInfo = new global::MelandGame3.NftThirdNftInfo();
            }
            input.ReadMessage(ThirdNftInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Player : pb::IMessage<Player>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Player(Player other) : this() {
      id_ = other.id_;
      playerId_ = other.playerId_;
      name_ = other.name_;
      roleId_ = other.roleId_;
      gender_ = other.gender_;
      roleIcon_ = other.roleIcon_;
      feature_ = other.feature_ != null ? other.feature_.Clone() : null;
      guide_ = other.guide_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      avatars_ = other.avatars_.Clone();
      hungry_ = other.hungry_;
      thirsty_ = other.thirsty_;
      fatigue_ = other.fatigue_;
      isBuilding_ = other.isBuilding_;
      active_ = other.active_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      curBuildNum_ = other.curBuildNum_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      isGodView_ = other.isGodView_;
      isIde_ = other.isIde_;
      listenKeypress_ = other.listenKeypress_.Clone();
      cidAvatar_ = other.cidAvatar_;
      isHide_ = other.isHide_;
      bWAttack_ = other.bWAttack_;
      fighting_ = other.fighting_;
      buffList_ = other.buffList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Player Clone() {
      return new Player(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private string playerId_ = "";
    /// <summary>
    /// 归属玩家id(系统==0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role_id" field.</summary>
    public const int RoleIdFieldNumber = 4;
    private int roleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 5;
    private string gender_ = "";
    /// <summary>
    /// 玩家性别
    /// other=未知性别
    /// male=男性
    /// female=女性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Gender {
      get { return gender_; }
      set {
        gender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role_icon" field.</summary>
    public const int RoleIconFieldNumber = 6;
    private string roleIcon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoleIcon {
      get { return roleIcon_; }
      set {
        roleIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feature" field.</summary>
    public const int FeatureFieldNumber = 7;
    private global::MelandGame3.PlayerFeature feature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PlayerFeature Feature {
      get { return feature_; }
      set {
        feature_ = value;
      }
    }

    /// <summary>Field number for the "guide" field.</summary>
    public const int GuideFieldNumber = 8;
    private int guide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Guide {
      get { return guide_; }
      set {
        guide_ = value;
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 9;
    private global::MelandGame3.EntityProfile profile_;
    /// <summary>
    /// 玩家属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    /// <summary>Field number for the "avatars" field.</summary>
    public const int AvatarsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::MelandGame3.PlayerAvatar> _repeated_avatars_codec
        = pb::FieldCodec.ForMessage(82, global::MelandGame3.PlayerAvatar.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.PlayerAvatar> avatars_ = new pbc::RepeatedField<global::MelandGame3.PlayerAvatar>();
    /// <summary>
    /// 玩家 avatar
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.PlayerAvatar> Avatars {
      get { return avatars_; }
    }

    /// <summary>Field number for the "hungry" field.</summary>
    public const int HungryFieldNumber = 12;
    private int hungry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hungry {
      get { return hungry_; }
      set {
        hungry_ = value;
      }
    }

    /// <summary>Field number for the "thirsty" field.</summary>
    public const int ThirstyFieldNumber = 13;
    private int thirsty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Thirsty {
      get { return thirsty_; }
      set {
        thirsty_ = value;
      }
    }

    /// <summary>Field number for the "fatigue" field.</summary>
    public const int FatigueFieldNumber = 14;
    private int fatigue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Fatigue {
      get { return fatigue_; }
      set {
        fatigue_ = value;
      }
    }

    /// <summary>Field number for the "is_building" field.</summary>
    public const int IsBuildingFieldNumber = 15;
    private bool isBuilding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBuilding {
      get { return isBuilding_; }
      set {
        isBuilding_ = value;
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 16;
    private bool active_;
    /// <summary>
    /// 是否存活
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 17;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向（朝向）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "cur_build_num" field.</summary>
    public const int CurBuildNumFieldNumber = 19;
    private int curBuildNum_;
    /// <summary>
    /// 当前建造数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurBuildNum {
      get { return curBuildNum_; }
      set {
        curBuildNum_ = value;
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 20;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_god_view" field.</summary>
    public const int IsGodViewFieldNumber = 21;
    private bool isGodView_;
    /// <summary>
    /// 是否上帝模式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGodView {
      get { return isGodView_; }
      set {
        isGodView_ = value;
      }
    }

    /// <summary>Field number for the "is_ide" field.</summary>
    public const int IsIdeFieldNumber = 22;
    private bool isIde_;
    /// <summary>
    ///是否幽灵模式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsIde {
      get { return isIde_; }
      set {
        isIde_ = value;
      }
    }

    /// <summary>Field number for the "listen_keypress" field.</summary>
    public const int ListenKeypressFieldNumber = 23;
    private static readonly pb::FieldCodec<string> _repeated_listenKeypress_codec
        = pb::FieldCodec.ForString(186);
    private readonly pbc::RepeatedField<string> listenKeypress_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 当前监听的按键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ListenKeypress {
      get { return listenKeypress_; }
    }

    /// <summary>Field number for the "cid_avatar" field.</summary>
    public const int CidAvatarFieldNumber = 24;
    private int cidAvatar_;
    /// <summary>
    ///将（实体（生物））切换成（实体（生物））
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CidAvatar {
      get { return cidAvatar_; }
      set {
        cidAvatar_ = value;
      }
    }

    /// <summary>Field number for the "is_hide" field.</summary>
    public const int IsHideFieldNumber = 25;
    private bool isHide_;
    /// <summary>
    /// 是否隐藏状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "BW_attack" field.</summary>
    public const int BWAttackFieldNumber = 26;
    private bool bWAttack_;
    /// <summary>
    /// big world is answer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BWAttack {
      get { return bWAttack_; }
      set {
        bWAttack_ = value;
      }
    }

    /// <summary>Field number for the "fighting" field.</summary>
    public const int FightingFieldNumber = 27;
    private bool fighting_;
    /// <summary>
    /// fight
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Fighting {
      get { return fighting_; }
      set {
        fighting_ = value;
      }
    }

    /// <summary>Field number for the "buff_list" field.</summary>
    public const int BuffListFieldNumber = 28;
    private static readonly pb::FieldCodec<global::MelandGame3.EntityBuff> _repeated_buffList_codec
        = pb::FieldCodec.ForMessage(226, global::MelandGame3.EntityBuff.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.EntityBuff> buffList_ = new pbc::RepeatedField<global::MelandGame3.EntityBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.EntityBuff> BuffList {
      get { return buffList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      if (RoleId != other.RoleId) return false;
      if (Gender != other.Gender) return false;
      if (RoleIcon != other.RoleIcon) return false;
      if (!object.Equals(Feature, other.Feature)) return false;
      if (Guide != other.Guide) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      if(!avatars_.Equals(other.avatars_)) return false;
      if (Hungry != other.Hungry) return false;
      if (Thirsty != other.Thirsty) return false;
      if (Fatigue != other.Fatigue) return false;
      if (IsBuilding != other.IsBuilding) return false;
      if (Active != other.Active) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (CurBuildNum != other.CurBuildNum) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (IsGodView != other.IsGodView) return false;
      if (IsIde != other.IsIde) return false;
      if(!listenKeypress_.Equals(other.listenKeypress_)) return false;
      if (CidAvatar != other.CidAvatar) return false;
      if (IsHide != other.IsHide) return false;
      if (BWAttack != other.BWAttack) return false;
      if (Fighting != other.Fighting) return false;
      if(!buffList_.Equals(other.buffList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (Gender.Length != 0) hash ^= Gender.GetHashCode();
      if (RoleIcon.Length != 0) hash ^= RoleIcon.GetHashCode();
      if (feature_ != null) hash ^= Feature.GetHashCode();
      if (Guide != 0) hash ^= Guide.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      hash ^= avatars_.GetHashCode();
      if (Hungry != 0) hash ^= Hungry.GetHashCode();
      if (Thirsty != 0) hash ^= Thirsty.GetHashCode();
      if (Fatigue != 0) hash ^= Fatigue.GetHashCode();
      if (IsBuilding != false) hash ^= IsBuilding.GetHashCode();
      if (Active != false) hash ^= Active.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (CurBuildNum != 0) hash ^= CurBuildNum.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (IsGodView != false) hash ^= IsGodView.GetHashCode();
      if (IsIde != false) hash ^= IsIde.GetHashCode();
      hash ^= listenKeypress_.GetHashCode();
      if (CidAvatar != 0) hash ^= CidAvatar.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (BWAttack != false) hash ^= BWAttack.GetHashCode();
      if (Fighting != false) hash ^= Fighting.GetHashCode();
      hash ^= buffList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (RoleId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoleId);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Gender);
      }
      if (RoleIcon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoleIcon);
      }
      if (feature_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Feature);
      }
      if (Guide != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Guide);
      }
      if (profile_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Profile);
      }
      avatars_.WriteTo(output, _repeated_avatars_codec);
      if (Hungry != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Hungry);
      }
      if (Thirsty != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Thirsty);
      }
      if (Fatigue != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Fatigue);
      }
      if (IsBuilding != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsBuilding);
      }
      if (Active != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Active);
      }
      if (dir_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Dir);
      }
      if (CurBuildNum != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CurBuildNum);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GuideInfo);
      }
      if (IsGodView != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsGodView);
      }
      if (IsIde != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsIde);
      }
      listenKeypress_.WriteTo(output, _repeated_listenKeypress_codec);
      if (CidAvatar != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(CidAvatar);
      }
      if (IsHide != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(IsHide);
      }
      if (BWAttack != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(BWAttack);
      }
      if (Fighting != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(Fighting);
      }
      buffList_.WriteTo(output, _repeated_buffList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (RoleId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoleId);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Gender);
      }
      if (RoleIcon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoleIcon);
      }
      if (feature_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Feature);
      }
      if (Guide != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Guide);
      }
      if (profile_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Profile);
      }
      avatars_.WriteTo(ref output, _repeated_avatars_codec);
      if (Hungry != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Hungry);
      }
      if (Thirsty != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Thirsty);
      }
      if (Fatigue != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Fatigue);
      }
      if (IsBuilding != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsBuilding);
      }
      if (Active != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Active);
      }
      if (dir_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Dir);
      }
      if (CurBuildNum != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CurBuildNum);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GuideInfo);
      }
      if (IsGodView != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsGodView);
      }
      if (IsIde != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsIde);
      }
      listenKeypress_.WriteTo(ref output, _repeated_listenKeypress_codec);
      if (CidAvatar != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(CidAvatar);
      }
      if (IsHide != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(IsHide);
      }
      if (BWAttack != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(BWAttack);
      }
      if (Fighting != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(Fighting);
      }
      buffList_.WriteTo(ref output, _repeated_buffList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (Gender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gender);
      }
      if (RoleIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleIcon);
      }
      if (feature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Feature);
      }
      if (Guide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Guide);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      size += avatars_.CalculateSize(_repeated_avatars_codec);
      if (Hungry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hungry);
      }
      if (Thirsty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Thirsty);
      }
      if (Fatigue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fatigue);
      }
      if (IsBuilding != false) {
        size += 1 + 1;
      }
      if (Active != false) {
        size += 2 + 1;
      }
      if (dir_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (CurBuildNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurBuildNum);
      }
      if (guideInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (IsGodView != false) {
        size += 2 + 1;
      }
      if (IsIde != false) {
        size += 2 + 1;
      }
      size += listenKeypress_.CalculateSize(_repeated_listenKeypress_codec);
      if (CidAvatar != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CidAvatar);
      }
      if (IsHide != false) {
        size += 2 + 1;
      }
      if (BWAttack != false) {
        size += 2 + 1;
      }
      if (Fighting != false) {
        size += 2 + 1;
      }
      size += buffList_.CalculateSize(_repeated_buffList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Player other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      if (other.Gender.Length != 0) {
        Gender = other.Gender;
      }
      if (other.RoleIcon.Length != 0) {
        RoleIcon = other.RoleIcon;
      }
      if (other.feature_ != null) {
        if (feature_ == null) {
          Feature = new global::MelandGame3.PlayerFeature();
        }
        Feature.MergeFrom(other.Feature);
      }
      if (other.Guide != 0) {
        Guide = other.Guide;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::MelandGame3.EntityProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      avatars_.Add(other.avatars_);
      if (other.Hungry != 0) {
        Hungry = other.Hungry;
      }
      if (other.Thirsty != 0) {
        Thirsty = other.Thirsty;
      }
      if (other.Fatigue != 0) {
        Fatigue = other.Fatigue;
      }
      if (other.IsBuilding != false) {
        IsBuilding = other.IsBuilding;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.CurBuildNum != 0) {
        CurBuildNum = other.CurBuildNum;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.IsGodView != false) {
        IsGodView = other.IsGodView;
      }
      if (other.IsIde != false) {
        IsIde = other.IsIde;
      }
      listenKeypress_.Add(other.listenKeypress_);
      if (other.CidAvatar != 0) {
        CidAvatar = other.CidAvatar;
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.BWAttack != false) {
        BWAttack = other.BWAttack;
      }
      if (other.Fighting != false) {
        Fighting = other.Fighting;
      }
      buffList_.Add(other.buffList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            RoleId = input.ReadInt32();
            break;
          }
          case 42: {
            Gender = input.ReadString();
            break;
          }
          case 50: {
            RoleIcon = input.ReadString();
            break;
          }
          case 58: {
            if (feature_ == null) {
              Feature = new global::MelandGame3.PlayerFeature();
            }
            input.ReadMessage(Feature);
            break;
          }
          case 64: {
            Guide = input.ReadInt32();
            break;
          }
          case 74: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 82: {
            avatars_.AddEntriesFrom(input, _repeated_avatars_codec);
            break;
          }
          case 96: {
            Hungry = input.ReadInt32();
            break;
          }
          case 104: {
            Thirsty = input.ReadInt32();
            break;
          }
          case 112: {
            Fatigue = input.ReadInt32();
            break;
          }
          case 120: {
            IsBuilding = input.ReadBool();
            break;
          }
          case 128: {
            Active = input.ReadBool();
            break;
          }
          case 138: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 152: {
            CurBuildNum = input.ReadInt32();
            break;
          }
          case 162: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 168: {
            IsGodView = input.ReadBool();
            break;
          }
          case 176: {
            IsIde = input.ReadBool();
            break;
          }
          case 186: {
            listenKeypress_.AddEntriesFrom(input, _repeated_listenKeypress_codec);
            break;
          }
          case 192: {
            CidAvatar = input.ReadInt32();
            break;
          }
          case 200: {
            IsHide = input.ReadBool();
            break;
          }
          case 208: {
            BWAttack = input.ReadBool();
            break;
          }
          case 216: {
            Fighting = input.ReadBool();
            break;
          }
          case 226: {
            buffList_.AddEntriesFrom(input, _repeated_buffList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            RoleId = input.ReadInt32();
            break;
          }
          case 42: {
            Gender = input.ReadString();
            break;
          }
          case 50: {
            RoleIcon = input.ReadString();
            break;
          }
          case 58: {
            if (feature_ == null) {
              Feature = new global::MelandGame3.PlayerFeature();
            }
            input.ReadMessage(Feature);
            break;
          }
          case 64: {
            Guide = input.ReadInt32();
            break;
          }
          case 74: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 82: {
            avatars_.AddEntriesFrom(ref input, _repeated_avatars_codec);
            break;
          }
          case 96: {
            Hungry = input.ReadInt32();
            break;
          }
          case 104: {
            Thirsty = input.ReadInt32();
            break;
          }
          case 112: {
            Fatigue = input.ReadInt32();
            break;
          }
          case 120: {
            IsBuilding = input.ReadBool();
            break;
          }
          case 128: {
            Active = input.ReadBool();
            break;
          }
          case 138: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 152: {
            CurBuildNum = input.ReadInt32();
            break;
          }
          case 162: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 168: {
            IsGodView = input.ReadBool();
            break;
          }
          case 176: {
            IsIde = input.ReadBool();
            break;
          }
          case 186: {
            listenKeypress_.AddEntriesFrom(ref input, _repeated_listenKeypress_codec);
            break;
          }
          case 192: {
            CidAvatar = input.ReadInt32();
            break;
          }
          case 200: {
            IsHide = input.ReadBool();
            break;
          }
          case 208: {
            BWAttack = input.ReadBool();
            break;
          }
          case 216: {
            Fighting = input.ReadBool();
            break;
          }
          case 226: {
            buffList_.AddEntriesFrom(ref input, _repeated_buffList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 摆放在地图上的物品
  /// </summary>
  public sealed partial class MapObject : pb::IMessage<MapObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapObject> _parser = new pb::MessageParser<MapObject>(() => new MapObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapObject(MapObject other) : this() {
      id_ = other.id_;
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      cid_ = other.cid_;
      playerId_ = other.playerId_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      codeStatus_ = other.codeStatus_;
      refreshTime_ = other.refreshTime_;
      runAttribute_ = other.runAttribute_ != null ? other.runAttribute_.Clone() : null;
      fuel_ = other.fuel_;
      eType_ = other.eType_;
      mirror_ = other.mirror_;
      keyFrame_ = other.keyFrame_;
      isStampede_ = other.isStampede_;
      isCopy_ = other.isCopy_;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      bubble_ = other.bubble_ != null ? other.bubble_.Clone() : null;
      locker_ = other.locker_;
      canDestroy_ = other.canDestroy_;
      isBuildFromTemplate_ = other.isBuildFromTemplate_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      entityTemplate_ = other.entityTemplate_ != null ? other.entityTemplate_.Clone() : null;
      curWalkDir_ = other.curWalkDir_;
      isHide_ = other.isHide_;
      anims_ = other.anims_ != null ? other.anims_.Clone() : null;
      curPlayAnim_ = other.curPlayAnim_;
      lockType_ = other.lockType_;
      fromFather_ = other.fromFather_ != null ? other.fromFather_.Clone() : null;
      sceneEffect_ = other.sceneEffect_;
      audios_ = other.audios_ != null ? other.audios_.Clone() : null;
      operateBubbles_ = other.operateBubbles_.Clone();
      carryEntity_ = other.carryEntity_ != null ? other.carryEntity_.Clone() : null;
      forceDir_ = other.forceDir_.Clone();
      nftInfo_ = other.nftInfo_ != null ? other.nftInfo_.Clone() : null;
      mapTemplate_ = other.mapTemplate_ != null ? other.mapTemplate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapObject Clone() {
      return new MapObject(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 2;
    private global::MelandGame3.EntityLocation loc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 3;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private string playerId_ = "";
    /// <summary>
    /// 归属玩家id(系统==0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 5;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向（朝向）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "code_status" field.</summary>
    public const int CodeStatusFieldNumber = 7;
    private global::MelandGame3.EntityCodeStatus codeStatus_ = global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow;
    /// <summary>
    /// 当前状态
    ///int32 state_id = 6;
    /// 运行状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityCodeStatus CodeStatus {
      get { return codeStatus_; }
      set {
        codeStatus_ = value;
      }
    }

    /// <summary>Field number for the "refresh_time" field.</summary>
    public const int RefreshTimeFieldNumber = 9;
    private long refreshTime_;
    /// <summary>
    ///更新时刻(秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RefreshTime {
      get { return refreshTime_; }
      set {
        refreshTime_ = value;
      }
    }

    /// <summary>Field number for the "run_attribute" field.</summary>
    public const int RunAttributeFieldNumber = 10;
    private global::MelandGame3.EntityAttribute runAttribute_;
    /// <summary>
    ///控件属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAttribute RunAttribute {
      get { return runAttribute_; }
      set {
        runAttribute_ = value;
      }
    }

    /// <summary>Field number for the "fuel" field.</summary>
    public const int FuelFieldNumber = 11;
    private int fuel_;
    /// <summary>
    ///能量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Fuel {
      get { return fuel_; }
      set {
        fuel_ = value;
      }
    }

    /// <summary>Field number for the "e_type" field.</summary>
    public const int ETypeFieldNumber = 12;
    private global::MelandGame3.EntityType eType_ = global::MelandGame3.EntityType.EntityTypeAll;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType EType {
      get { return eType_; }
      set {
        eType_ = value;
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 13;
    private bool mirror_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "key_frame" field.</summary>
    public const int KeyFrameFieldNumber = 14;
    private int keyFrame_;
    /// <summary>
    /// 当前关键帧
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int KeyFrame {
      get { return keyFrame_; }
      set {
        keyFrame_ = value;
      }
    }

    /// <summary>Field number for the "is_stampede" field.</summary>
    public const int IsStampedeFieldNumber = 15;
    private bool isStampede_;
    /// <summary>
    /// 是否可以踩踏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStampede {
      get { return isStampede_; }
      set {
        isStampede_ = value;
      }
    }

    /// <summary>Field number for the "is_copy" field.</summary>
    public const int IsCopyFieldNumber = 17;
    private bool isCopy_;
    /// <summary>
    /// 是否为克隆体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCopy {
      get { return isCopy_; }
      set {
        isCopy_ = value;
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 18;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 19;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    /// <summary>Field number for the "bubble" field.</summary>
    public const int BubbleFieldNumber = 21;
    private global::MelandGame3.EntitySceneEffect bubble_;
    /// <summary>
    /// 泡泡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntitySceneEffect Bubble {
      get { return bubble_; }
      set {
        bubble_ = value;
      }
    }

    /// <summary>Field number for the "locker" field.</summary>
    public const int LockerFieldNumber = 22;
    private string locker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locker {
      get { return locker_; }
      set {
        locker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "can_destroy" field.</summary>
    public const int CanDestroyFieldNumber = 23;
    private bool canDestroy_;
    /// <summary>
    /// 是否可删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanDestroy {
      get { return canDestroy_; }
      set {
        canDestroy_ = value;
      }
    }

    /// <summary>Field number for the "is_build_from_template" field.</summary>
    public const int IsBuildFromTemplateFieldNumber = 24;
    private bool isBuildFromTemplate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBuildFromTemplate {
      get { return isBuildFromTemplate_; }
      set {
        isBuildFromTemplate_ = value;
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 25;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    /// 引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "entity_template" field.</summary>
    public const int EntityTemplateFieldNumber = 26;
    private global::MelandGame3.EntityTemplate entityTemplate_;
    /// <summary>
    /// 实体模板数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityTemplate EntityTemplate {
      get { return entityTemplate_; }
      set {
        entityTemplate_ = value;
      }
    }

    /// <summary>Field number for the "cur_walk_dir" field.</summary>
    public const int CurWalkDirFieldNumber = 27;
    private string curWalkDir_ = "";
    /// <summary>
    /// 当前行走方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurWalkDir {
      get { return curWalkDir_; }
      set {
        curWalkDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_hide" field.</summary>
    public const int IsHideFieldNumber = 28;
    private bool isHide_;
    /// <summary>
    /// 是否隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "anims" field.</summary>
    public const int AnimsFieldNumber = 30;
    private global::MelandGame3.EntityAnimations anims_;
    /// <summary>
    /// 实体动画信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAnimations Anims {
      get { return anims_; }
      set {
        anims_ = value;
      }
    }

    /// <summary>Field number for the "cur_play_anim" field.</summary>
    public const int CurPlayAnimFieldNumber = 31;
    private int curPlayAnim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurPlayAnim {
      get { return curPlayAnim_; }
      set {
        curPlayAnim_ = value;
      }
    }

    /// <summary>Field number for the "lock_type" field.</summary>
    public const int LockTypeFieldNumber = 32;
    private global::MelandGame3.EntityLockType lockType_ = global::MelandGame3.EntityLockType.EntityLockTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLockType LockType {
      get { return lockType_; }
      set {
        lockType_ = value;
      }
    }

    /// <summary>Field number for the "from_father" field.</summary>
    public const int FromFatherFieldNumber = 33;
    private global::MelandGame3.EntityId fromFather_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId FromFather {
      get { return fromFather_; }
      set {
        fromFather_ = value;
      }
    }

    /// <summary>Field number for the "scene_effect" field.</summary>
    public const int SceneEffectFieldNumber = 34;
    private int sceneEffect_;
    /// <summary>
    /// 当前使用的展示效果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneEffect {
      get { return sceneEffect_; }
      set {
        sceneEffect_ = value;
      }
    }

    /// <summary>Field number for the "audios" field.</summary>
    public const int AudiosFieldNumber = 35;
    private global::MelandGame3.EntityAudios audios_;
    /// <summary>
    /// 实体音频信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAudios Audios {
      get { return audios_; }
      set {
        audios_ = value;
      }
    }

    /// <summary>Field number for the "operate_bubbles" field.</summary>
    public const int OperateBubblesFieldNumber = 36;
    private static readonly pb::FieldCodec<global::MelandGame3.OperateBubbleData> _repeated_operateBubbles_codec
        = pb::FieldCodec.ForMessage(290, global::MelandGame3.OperateBubbleData.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.OperateBubbleData> operateBubbles_ = new pbc::RepeatedField<global::MelandGame3.OperateBubbleData>();
    /// <summary>
    /// 气泡数据LIST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.OperateBubbleData> OperateBubbles {
      get { return operateBubbles_; }
    }

    /// <summary>Field number for the "carry_entity" field.</summary>
    public const int CarryEntityFieldNumber = 37;
    private global::MelandGame3.CarryEntityBaseData carryEntity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.CarryEntityBaseData CarryEntity {
      get { return carryEntity_; }
      set {
        carryEntity_ = value;
      }
    }

    /// <summary>Field number for the "force_dir" field.</summary>
    public const int ForceDirFieldNumber = 38;
    private static readonly pb::FieldCodec<global::MelandGame3.Vector3> _repeated_forceDir_codec
        = pb::FieldCodec.ForMessage(306, global::MelandGame3.Vector3.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Vector3> forceDir_ = new pbc::RepeatedField<global::MelandGame3.Vector3>();
    /// <summary>
    /// 场景作用力方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Vector3> ForceDir {
      get { return forceDir_; }
    }

    /// <summary>Field number for the "nft_info" field.</summary>
    public const int NftInfoFieldNumber = 39;
    private global::MelandGame3.EntityNftInfo nftInfo_;
    /// <summary>
    /// nft 道具信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityNftInfo NftInfo {
      get { return nftInfo_; }
      set {
        nftInfo_ = value;
      }
    }

    /// <summary>Field number for the "map_template" field.</summary>
    public const int MapTemplateFieldNumber = 40;
    private global::MelandGame3.EntityMapTemplate mapTemplate_;
    /// <summary>
    /// 关联的游玩地图(大世界使用)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityMapTemplate MapTemplate {
      get { return mapTemplate_; }
      set {
        mapTemplate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Loc, other.Loc)) return false;
      if (Cid != other.Cid) return false;
      if (PlayerId != other.PlayerId) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (CodeStatus != other.CodeStatus) return false;
      if (RefreshTime != other.RefreshTime) return false;
      if (!object.Equals(RunAttribute, other.RunAttribute)) return false;
      if (Fuel != other.Fuel) return false;
      if (EType != other.EType) return false;
      if (Mirror != other.Mirror) return false;
      if (KeyFrame != other.KeyFrame) return false;
      if (IsStampede != other.IsStampede) return false;
      if (IsCopy != other.IsCopy) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      if (!object.Equals(Bubble, other.Bubble)) return false;
      if (Locker != other.Locker) return false;
      if (CanDestroy != other.CanDestroy) return false;
      if (IsBuildFromTemplate != other.IsBuildFromTemplate) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (!object.Equals(EntityTemplate, other.EntityTemplate)) return false;
      if (CurWalkDir != other.CurWalkDir) return false;
      if (IsHide != other.IsHide) return false;
      if (!object.Equals(Anims, other.Anims)) return false;
      if (CurPlayAnim != other.CurPlayAnim) return false;
      if (LockType != other.LockType) return false;
      if (!object.Equals(FromFather, other.FromFather)) return false;
      if (SceneEffect != other.SceneEffect) return false;
      if (!object.Equals(Audios, other.Audios)) return false;
      if(!operateBubbles_.Equals(other.operateBubbles_)) return false;
      if (!object.Equals(CarryEntity, other.CarryEntity)) return false;
      if(!forceDir_.Equals(other.forceDir_)) return false;
      if (!object.Equals(NftInfo, other.NftInfo)) return false;
      if (!object.Equals(MapTemplate, other.MapTemplate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) hash ^= CodeStatus.GetHashCode();
      if (RefreshTime != 0L) hash ^= RefreshTime.GetHashCode();
      if (runAttribute_ != null) hash ^= RunAttribute.GetHashCode();
      if (Fuel != 0) hash ^= Fuel.GetHashCode();
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) hash ^= EType.GetHashCode();
      if (Mirror != false) hash ^= Mirror.GetHashCode();
      if (KeyFrame != 0) hash ^= KeyFrame.GetHashCode();
      if (IsStampede != false) hash ^= IsStampede.GetHashCode();
      if (IsCopy != false) hash ^= IsCopy.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (bubble_ != null) hash ^= Bubble.GetHashCode();
      if (Locker.Length != 0) hash ^= Locker.GetHashCode();
      if (CanDestroy != false) hash ^= CanDestroy.GetHashCode();
      if (IsBuildFromTemplate != false) hash ^= IsBuildFromTemplate.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (entityTemplate_ != null) hash ^= EntityTemplate.GetHashCode();
      if (CurWalkDir.Length != 0) hash ^= CurWalkDir.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (anims_ != null) hash ^= Anims.GetHashCode();
      if (CurPlayAnim != 0) hash ^= CurPlayAnim.GetHashCode();
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) hash ^= LockType.GetHashCode();
      if (fromFather_ != null) hash ^= FromFather.GetHashCode();
      if (SceneEffect != 0) hash ^= SceneEffect.GetHashCode();
      if (audios_ != null) hash ^= Audios.GetHashCode();
      hash ^= operateBubbles_.GetHashCode();
      if (carryEntity_ != null) hash ^= CarryEntity.GetHashCode();
      hash ^= forceDir_.GetHashCode();
      if (nftInfo_ != null) hash ^= NftInfo.GetHashCode();
      if (mapTemplate_ != null) hash ^= MapTemplate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (dir_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Dir);
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        output.WriteRawTag(56);
        output.WriteEnum((int) CodeStatus);
      }
      if (RefreshTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RefreshTime);
      }
      if (runAttribute_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RunAttribute);
      }
      if (Fuel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Fuel);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(96);
        output.WriteEnum((int) EType);
      }
      if (Mirror != false) {
        output.WriteRawTag(104);
        output.WriteBool(Mirror);
      }
      if (KeyFrame != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(KeyFrame);
      }
      if (IsStampede != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsStampede);
      }
      if (IsCopy != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsCopy);
      }
      if (IsInArea != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsLock);
      }
      if (bubble_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Bubble);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Locker);
      }
      if (CanDestroy != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(CanDestroy);
      }
      if (IsBuildFromTemplate != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsBuildFromTemplate);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(GuideInfo);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(CurWalkDir);
      }
      if (IsHide != false) {
        output.WriteRawTag(224, 1);
        output.WriteBool(IsHide);
      }
      if (anims_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Anims);
      }
      if (CurPlayAnim != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(CurPlayAnim);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) LockType);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(FromFather);
      }
      if (SceneEffect != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(SceneEffect);
      }
      if (audios_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(Audios);
      }
      operateBubbles_.WriteTo(output, _repeated_operateBubbles_codec);
      if (carryEntity_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(CarryEntity);
      }
      forceDir_.WriteTo(output, _repeated_forceDir_codec);
      if (nftInfo_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(NftInfo);
      }
      if (mapTemplate_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(MapTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (dir_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Dir);
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        output.WriteRawTag(56);
        output.WriteEnum((int) CodeStatus);
      }
      if (RefreshTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RefreshTime);
      }
      if (runAttribute_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RunAttribute);
      }
      if (Fuel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Fuel);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(96);
        output.WriteEnum((int) EType);
      }
      if (Mirror != false) {
        output.WriteRawTag(104);
        output.WriteBool(Mirror);
      }
      if (KeyFrame != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(KeyFrame);
      }
      if (IsStampede != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsStampede);
      }
      if (IsCopy != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsCopy);
      }
      if (IsInArea != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsLock);
      }
      if (bubble_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Bubble);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Locker);
      }
      if (CanDestroy != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(CanDestroy);
      }
      if (IsBuildFromTemplate != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsBuildFromTemplate);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(GuideInfo);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(CurWalkDir);
      }
      if (IsHide != false) {
        output.WriteRawTag(224, 1);
        output.WriteBool(IsHide);
      }
      if (anims_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Anims);
      }
      if (CurPlayAnim != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(CurPlayAnim);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) LockType);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(FromFather);
      }
      if (SceneEffect != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(SceneEffect);
      }
      if (audios_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(Audios);
      }
      operateBubbles_.WriteTo(ref output, _repeated_operateBubbles_codec);
      if (carryEntity_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(CarryEntity);
      }
      forceDir_.WriteTo(ref output, _repeated_forceDir_codec);
      if (nftInfo_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(NftInfo);
      }
      if (mapTemplate_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(MapTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CodeStatus);
      }
      if (RefreshTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTime);
      }
      if (runAttribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunAttribute);
      }
      if (Fuel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fuel);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EType);
      }
      if (Mirror != false) {
        size += 1 + 1;
      }
      if (KeyFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeyFrame);
      }
      if (IsStampede != false) {
        size += 1 + 1;
      }
      if (IsCopy != false) {
        size += 2 + 1;
      }
      if (IsInArea != false) {
        size += 2 + 1;
      }
      if (IsLock != false) {
        size += 2 + 1;
      }
      if (bubble_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Bubble);
      }
      if (Locker.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Locker);
      }
      if (CanDestroy != false) {
        size += 2 + 1;
      }
      if (IsBuildFromTemplate != false) {
        size += 2 + 1;
      }
      if (guideInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (entityTemplate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurWalkDir);
      }
      if (IsHide != false) {
        size += 2 + 1;
      }
      if (anims_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Anims);
      }
      if (CurPlayAnim != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurPlayAnim);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LockType);
      }
      if (fromFather_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FromFather);
      }
      if (SceneEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SceneEffect);
      }
      if (audios_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Audios);
      }
      size += operateBubbles_.CalculateSize(_repeated_operateBubbles_codec);
      if (carryEntity_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CarryEntity);
      }
      size += forceDir_.CalculateSize(_repeated_forceDir_codec);
      if (nftInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NftInfo);
      }
      if (mapTemplate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MapTemplate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapObject other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::MelandGame3.EntityLocation();
        }
        Loc.MergeFrom(other.Loc);
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        CodeStatus = other.CodeStatus;
      }
      if (other.RefreshTime != 0L) {
        RefreshTime = other.RefreshTime;
      }
      if (other.runAttribute_ != null) {
        if (runAttribute_ == null) {
          RunAttribute = new global::MelandGame3.EntityAttribute();
        }
        RunAttribute.MergeFrom(other.RunAttribute);
      }
      if (other.Fuel != 0) {
        Fuel = other.Fuel;
      }
      if (other.EType != global::MelandGame3.EntityType.EntityTypeAll) {
        EType = other.EType;
      }
      if (other.Mirror != false) {
        Mirror = other.Mirror;
      }
      if (other.KeyFrame != 0) {
        KeyFrame = other.KeyFrame;
      }
      if (other.IsStampede != false) {
        IsStampede = other.IsStampede;
      }
      if (other.IsCopy != false) {
        IsCopy = other.IsCopy;
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      if (other.bubble_ != null) {
        if (bubble_ == null) {
          Bubble = new global::MelandGame3.EntitySceneEffect();
        }
        Bubble.MergeFrom(other.Bubble);
      }
      if (other.Locker.Length != 0) {
        Locker = other.Locker;
      }
      if (other.CanDestroy != false) {
        CanDestroy = other.CanDestroy;
      }
      if (other.IsBuildFromTemplate != false) {
        IsBuildFromTemplate = other.IsBuildFromTemplate;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.entityTemplate_ != null) {
        if (entityTemplate_ == null) {
          EntityTemplate = new global::MelandGame3.EntityTemplate();
        }
        EntityTemplate.MergeFrom(other.EntityTemplate);
      }
      if (other.CurWalkDir.Length != 0) {
        CurWalkDir = other.CurWalkDir;
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.anims_ != null) {
        if (anims_ == null) {
          Anims = new global::MelandGame3.EntityAnimations();
        }
        Anims.MergeFrom(other.Anims);
      }
      if (other.CurPlayAnim != 0) {
        CurPlayAnim = other.CurPlayAnim;
      }
      if (other.LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        LockType = other.LockType;
      }
      if (other.fromFather_ != null) {
        if (fromFather_ == null) {
          FromFather = new global::MelandGame3.EntityId();
        }
        FromFather.MergeFrom(other.FromFather);
      }
      if (other.SceneEffect != 0) {
        SceneEffect = other.SceneEffect;
      }
      if (other.audios_ != null) {
        if (audios_ == null) {
          Audios = new global::MelandGame3.EntityAudios();
        }
        Audios.MergeFrom(other.Audios);
      }
      operateBubbles_.Add(other.operateBubbles_);
      if (other.carryEntity_ != null) {
        if (carryEntity_ == null) {
          CarryEntity = new global::MelandGame3.CarryEntityBaseData();
        }
        CarryEntity.MergeFrom(other.CarryEntity);
      }
      forceDir_.Add(other.forceDir_);
      if (other.nftInfo_ != null) {
        if (nftInfo_ == null) {
          NftInfo = new global::MelandGame3.EntityNftInfo();
        }
        NftInfo.MergeFrom(other.NftInfo);
      }
      if (other.mapTemplate_ != null) {
        if (mapTemplate_ == null) {
          MapTemplate = new global::MelandGame3.EntityMapTemplate();
        }
        MapTemplate.MergeFrom(other.MapTemplate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 56: {
            CodeStatus = (global::MelandGame3.EntityCodeStatus) input.ReadEnum();
            break;
          }
          case 72: {
            RefreshTime = input.ReadInt64();
            break;
          }
          case 82: {
            if (runAttribute_ == null) {
              RunAttribute = new global::MelandGame3.EntityAttribute();
            }
            input.ReadMessage(RunAttribute);
            break;
          }
          case 88: {
            Fuel = input.ReadInt32();
            break;
          }
          case 96: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 104: {
            Mirror = input.ReadBool();
            break;
          }
          case 112: {
            KeyFrame = input.ReadInt32();
            break;
          }
          case 120: {
            IsStampede = input.ReadBool();
            break;
          }
          case 136: {
            IsCopy = input.ReadBool();
            break;
          }
          case 144: {
            IsInArea = input.ReadBool();
            break;
          }
          case 152: {
            IsLock = input.ReadBool();
            break;
          }
          case 170: {
            if (bubble_ == null) {
              Bubble = new global::MelandGame3.EntitySceneEffect();
            }
            input.ReadMessage(Bubble);
            break;
          }
          case 178: {
            Locker = input.ReadString();
            break;
          }
          case 184: {
            CanDestroy = input.ReadBool();
            break;
          }
          case 192: {
            IsBuildFromTemplate = input.ReadBool();
            break;
          }
          case 202: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 210: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 218: {
            CurWalkDir = input.ReadString();
            break;
          }
          case 224: {
            IsHide = input.ReadBool();
            break;
          }
          case 242: {
            if (anims_ == null) {
              Anims = new global::MelandGame3.EntityAnimations();
            }
            input.ReadMessage(Anims);
            break;
          }
          case 248: {
            CurPlayAnim = input.ReadInt32();
            break;
          }
          case 256: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 266: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
          case 272: {
            SceneEffect = input.ReadInt32();
            break;
          }
          case 282: {
            if (audios_ == null) {
              Audios = new global::MelandGame3.EntityAudios();
            }
            input.ReadMessage(Audios);
            break;
          }
          case 290: {
            operateBubbles_.AddEntriesFrom(input, _repeated_operateBubbles_codec);
            break;
          }
          case 298: {
            if (carryEntity_ == null) {
              CarryEntity = new global::MelandGame3.CarryEntityBaseData();
            }
            input.ReadMessage(CarryEntity);
            break;
          }
          case 306: {
            forceDir_.AddEntriesFrom(input, _repeated_forceDir_codec);
            break;
          }
          case 314: {
            if (nftInfo_ == null) {
              NftInfo = new global::MelandGame3.EntityNftInfo();
            }
            input.ReadMessage(NftInfo);
            break;
          }
          case 322: {
            if (mapTemplate_ == null) {
              MapTemplate = new global::MelandGame3.EntityMapTemplate();
            }
            input.ReadMessage(MapTemplate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 56: {
            CodeStatus = (global::MelandGame3.EntityCodeStatus) input.ReadEnum();
            break;
          }
          case 72: {
            RefreshTime = input.ReadInt64();
            break;
          }
          case 82: {
            if (runAttribute_ == null) {
              RunAttribute = new global::MelandGame3.EntityAttribute();
            }
            input.ReadMessage(RunAttribute);
            break;
          }
          case 88: {
            Fuel = input.ReadInt32();
            break;
          }
          case 96: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 104: {
            Mirror = input.ReadBool();
            break;
          }
          case 112: {
            KeyFrame = input.ReadInt32();
            break;
          }
          case 120: {
            IsStampede = input.ReadBool();
            break;
          }
          case 136: {
            IsCopy = input.ReadBool();
            break;
          }
          case 144: {
            IsInArea = input.ReadBool();
            break;
          }
          case 152: {
            IsLock = input.ReadBool();
            break;
          }
          case 170: {
            if (bubble_ == null) {
              Bubble = new global::MelandGame3.EntitySceneEffect();
            }
            input.ReadMessage(Bubble);
            break;
          }
          case 178: {
            Locker = input.ReadString();
            break;
          }
          case 184: {
            CanDestroy = input.ReadBool();
            break;
          }
          case 192: {
            IsBuildFromTemplate = input.ReadBool();
            break;
          }
          case 202: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 210: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 218: {
            CurWalkDir = input.ReadString();
            break;
          }
          case 224: {
            IsHide = input.ReadBool();
            break;
          }
          case 242: {
            if (anims_ == null) {
              Anims = new global::MelandGame3.EntityAnimations();
            }
            input.ReadMessage(Anims);
            break;
          }
          case 248: {
            CurPlayAnim = input.ReadInt32();
            break;
          }
          case 256: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 266: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
          case 272: {
            SceneEffect = input.ReadInt32();
            break;
          }
          case 282: {
            if (audios_ == null) {
              Audios = new global::MelandGame3.EntityAudios();
            }
            input.ReadMessage(Audios);
            break;
          }
          case 290: {
            operateBubbles_.AddEntriesFrom(ref input, _repeated_operateBubbles_codec);
            break;
          }
          case 298: {
            if (carryEntity_ == null) {
              CarryEntity = new global::MelandGame3.CarryEntityBaseData();
            }
            input.ReadMessage(CarryEntity);
            break;
          }
          case 306: {
            forceDir_.AddEntriesFrom(ref input, _repeated_forceDir_codec);
            break;
          }
          case 314: {
            if (nftInfo_ == null) {
              NftInfo = new global::MelandGame3.EntityNftInfo();
            }
            input.ReadMessage(NftInfo);
            break;
          }
          case 322: {
            if (mapTemplate_ == null) {
              MapTemplate = new global::MelandGame3.EntityMapTemplate();
            }
            input.ReadMessage(MapTemplate);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///种植类entity
  /// </summary>
  public sealed partial class Plant : pb::IMessage<Plant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Plant> _parser = new pb::MessageParser<Plant>(() => new Plant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Plant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Plant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Plant(Plant other) : this() {
      playerId_ = other.playerId_;
      cid_ = other.cid_;
      id_ = other.id_;
      name_ = other.name_;
      eType_ = other.eType_;
      enemyType_ = other.enemyType_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      fatherId_ = other.fatherId_;
      isCopy_ = other.isCopy_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      locker_ = other.locker_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      isHide_ = other.isHide_;
      entityTemplate_ = other.entityTemplate_ != null ? other.entityTemplate_.Clone() : null;
      curWalkDir_ = other.curWalkDir_;
      lockType_ = other.lockType_;
      fromFather_ = other.fromFather_ != null ? other.fromFather_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Plant Clone() {
      return new Plant(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    /// <summary>
    /// 归属玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 2;
    private int cid_;
    /// <summary>
    /// 资源配置表里的 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    /// <summary>
    /// 唯一 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// 名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "e_type" field.</summary>
    public const int ETypeFieldNumber = 5;
    private global::MelandGame3.EntityType eType_ = global::MelandGame3.EntityType.EntityTypeAll;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType EType {
      get { return eType_; }
      set {
        eType_ = value;
      }
    }

    /// <summary>Field number for the "enemy_type" field.</summary>
    public const int EnemyTypeFieldNumber = 6;
    private global::MelandGame3.EnemyType enemyType_ = global::MelandGame3.EnemyType.EnemyTypeUnattackable;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EnemyType EnemyType {
      get { return enemyType_; }
      set {
        enemyType_ = value;
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 7;
    private global::MelandGame3.EntityProfile profile_;
    /// <summary>
    /// 资源数值 (hp_limit)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 8;
    private global::MelandGame3.EntityLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "father_id" field.</summary>
    public const int FatherIdFieldNumber = 10;
    private string fatherId_ = "";
    /// <summary>
    /// 哪个工作台合成的(entityId)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FatherId {
      get { return fatherId_; }
      set {
        fatherId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_copy" field.</summary>
    public const int IsCopyFieldNumber = 11;
    private bool isCopy_;
    /// <summary>
    /// 是否为克隆体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCopy {
      get { return isCopy_; }
      set {
        isCopy_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 12;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向（朝向）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 13;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 14;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    /// <summary>Field number for the "locker" field.</summary>
    public const int LockerFieldNumber = 16;
    private string locker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locker {
      get { return locker_; }
      set {
        locker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 17;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_hide" field.</summary>
    public const int IsHideFieldNumber = 20;
    private bool isHide_;
    /// <summary>
    /// 是否隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "entity_template" field.</summary>
    public const int EntityTemplateFieldNumber = 21;
    private global::MelandGame3.EntityTemplate entityTemplate_;
    /// <summary>
    /// 实体模板数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityTemplate EntityTemplate {
      get { return entityTemplate_; }
      set {
        entityTemplate_ = value;
      }
    }

    /// <summary>Field number for the "cur_walk_dir" field.</summary>
    public const int CurWalkDirFieldNumber = 22;
    private string curWalkDir_ = "";
    /// <summary>
    /// 当前行走方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurWalkDir {
      get { return curWalkDir_; }
      set {
        curWalkDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lock_type" field.</summary>
    public const int LockTypeFieldNumber = 23;
    private global::MelandGame3.EntityLockType lockType_ = global::MelandGame3.EntityLockType.EntityLockTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLockType LockType {
      get { return lockType_; }
      set {
        lockType_ = value;
      }
    }

    /// <summary>Field number for the "from_father" field.</summary>
    public const int FromFatherFieldNumber = 24;
    private global::MelandGame3.EntityId fromFather_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId FromFather {
      get { return fromFather_; }
      set {
        fromFather_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Plant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Plant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Cid != other.Cid) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (EType != other.EType) return false;
      if (EnemyType != other.EnemyType) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (FatherId != other.FatherId) return false;
      if (IsCopy != other.IsCopy) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      if (Locker != other.Locker) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (IsHide != other.IsHide) return false;
      if (!object.Equals(EntityTemplate, other.EntityTemplate)) return false;
      if (CurWalkDir != other.CurWalkDir) return false;
      if (LockType != other.LockType) return false;
      if (!object.Equals(FromFather, other.FromFather)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) hash ^= EType.GetHashCode();
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) hash ^= EnemyType.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (FatherId.Length != 0) hash ^= FatherId.GetHashCode();
      if (IsCopy != false) hash ^= IsCopy.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (Locker.Length != 0) hash ^= Locker.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (entityTemplate_ != null) hash ^= EntityTemplate.GetHashCode();
      if (CurWalkDir.Length != 0) hash ^= CurWalkDir.GetHashCode();
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) hash ^= LockType.GetHashCode();
      if (fromFather_ != null) hash ^= FromFather.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EType);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EnemyType);
      }
      if (profile_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Profile);
      }
      if (location_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Location);
      }
      if (FatherId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(FatherId);
      }
      if (IsCopy != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsCopy);
      }
      if (dir_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Dir);
      }
      if (IsInArea != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GuideInfo);
      }
      if (IsHide != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsHide);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CurWalkDir);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) LockType);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(FromFather);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EType);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EnemyType);
      }
      if (profile_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Profile);
      }
      if (location_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Location);
      }
      if (FatherId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(FatherId);
      }
      if (IsCopy != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsCopy);
      }
      if (dir_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Dir);
      }
      if (IsInArea != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GuideInfo);
      }
      if (IsHide != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsHide);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CurWalkDir);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) LockType);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(FromFather);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EType);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnemyType);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (FatherId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FatherId);
      }
      if (IsCopy != false) {
        size += 1 + 1;
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (IsInArea != false) {
        size += 1 + 1;
      }
      if (IsLock != false) {
        size += 1 + 1;
      }
      if (Locker.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Locker);
      }
      if (guideInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (IsHide != false) {
        size += 2 + 1;
      }
      if (entityTemplate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurWalkDir);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LockType);
      }
      if (fromFather_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FromFather);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Plant other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.EType != global::MelandGame3.EntityType.EntityTypeAll) {
        EType = other.EType;
      }
      if (other.EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        EnemyType = other.EnemyType;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::MelandGame3.EntityProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::MelandGame3.EntityLocation();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.FatherId.Length != 0) {
        FatherId = other.FatherId;
      }
      if (other.IsCopy != false) {
        IsCopy = other.IsCopy;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      if (other.Locker.Length != 0) {
        Locker = other.Locker;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.entityTemplate_ != null) {
        if (entityTemplate_ == null) {
          EntityTemplate = new global::MelandGame3.EntityTemplate();
        }
        EntityTemplate.MergeFrom(other.EntityTemplate);
      }
      if (other.CurWalkDir.Length != 0) {
        CurWalkDir = other.CurWalkDir;
      }
      if (other.LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        LockType = other.LockType;
      }
      if (other.fromFather_ != null) {
        if (fromFather_ == null) {
          FromFather = new global::MelandGame3.EntityId();
        }
        FromFather.MergeFrom(other.FromFather);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 48: {
            EnemyType = (global::MelandGame3.EnemyType) input.ReadEnum();
            break;
          }
          case 58: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 66: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 82: {
            FatherId = input.ReadString();
            break;
          }
          case 88: {
            IsCopy = input.ReadBool();
            break;
          }
          case 98: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 104: {
            IsInArea = input.ReadBool();
            break;
          }
          case 112: {
            IsLock = input.ReadBool();
            break;
          }
          case 130: {
            Locker = input.ReadString();
            break;
          }
          case 138: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 160: {
            IsHide = input.ReadBool();
            break;
          }
          case 170: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 178: {
            CurWalkDir = input.ReadString();
            break;
          }
          case 184: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 194: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 48: {
            EnemyType = (global::MelandGame3.EnemyType) input.ReadEnum();
            break;
          }
          case 58: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 66: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 82: {
            FatherId = input.ReadString();
            break;
          }
          case 88: {
            IsCopy = input.ReadBool();
            break;
          }
          case 98: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 104: {
            IsInArea = input.ReadBool();
            break;
          }
          case 112: {
            IsLock = input.ReadBool();
            break;
          }
          case 130: {
            Locker = input.ReadString();
            break;
          }
          case 138: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 160: {
            IsHide = input.ReadBool();
            break;
          }
          case 170: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 178: {
            CurWalkDir = input.ReadString();
            break;
          }
          case 184: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 194: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 宠物
  /// </summary>
  public sealed partial class Pet : pb::IMessage<Pet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Pet> _parser = new pb::MessageParser<Pet>(() => new Pet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Pet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Pet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Pet(Pet other) : this() {
      playerId_ = other.playerId_;
      id_ = other.id_;
      cid_ = other.cid_;
      name_ = other.name_;
      type_ = other.type_;
      camp_ = other.camp_;
      isBoss_ = other.isBoss_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      attType_ = other.attType_;
      patrolType_ = other.patrolType_;
      isCopy_ = other.isCopy_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      locker_ = other.locker_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      isHide_ = other.isHide_;
      entityTemplate_ = other.entityTemplate_ != null ? other.entityTemplate_.Clone() : null;
      curWalkDir_ = other.curWalkDir_;
      lockType_ = other.lockType_;
      fromFather_ = other.fromFather_ != null ? other.fromFather_.Clone() : null;
      sceneEffect_ = other.sceneEffect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Pet Clone() {
      return new Pet(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    /// <summary>
    /// 归属玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// 宠物唯一 Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 3;
    private int cid_;
    /// <summary>
    /// 策划配置表里的 Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// 宠物名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::MelandGame3.MonsterType type_ = global::MelandGame3.MonsterType.MonsterTypeUnknown;
    /// <summary>
    /// 宠物类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MonsterType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "camp" field.</summary>
    public const int CampFieldNumber = 6;
    private global::MelandGame3.Camp camp_ = global::MelandGame3.Camp.CampNeutral;
    /// <summary>
    /// 宠物阵营
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Camp Camp {
      get { return camp_; }
      set {
        camp_ = value;
      }
    }

    /// <summary>Field number for the "is_boss" field.</summary>
    public const int IsBossFieldNumber = 7;
    private bool isBoss_;
    /// <summary>
    /// 是否为 Boss
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBoss {
      get { return isBoss_; }
      set {
        isBoss_ = value;
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 8;
    private global::MelandGame3.EntityProfile profile_;
    /// <summary>
    /// 宠物数值(lv, exp, att, def, ...)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    /// <summary>Field number for the "att_type" field.</summary>
    public const int AttTypeFieldNumber = 9;
    private global::MelandGame3.MonsterAttType attType_ = global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown;
    /// <summary>
    /// 攻击类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MonsterAttType AttType {
      get { return attType_; }
      set {
        attType_ = value;
      }
    }

    /// <summary>Field number for the "patrol_type" field.</summary>
    public const int PatrolTypeFieldNumber = 10;
    private global::MelandGame3.MonsterPatrolType patrolType_ = global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown;
    /// <summary>
    /// 巡逻类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MonsterPatrolType PatrolType {
      get { return patrolType_; }
      set {
        patrolType_ = value;
      }
    }

    /// <summary>Field number for the "is_copy" field.</summary>
    public const int IsCopyFieldNumber = 12;
    private bool isCopy_;
    /// <summary>
    /// 是否为克隆体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCopy {
      get { return isCopy_; }
      set {
        isCopy_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 13;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向（朝向）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 14;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 15;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    /// <summary>Field number for the "locker" field.</summary>
    public const int LockerFieldNumber = 17;
    private string locker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locker {
      get { return locker_; }
      set {
        locker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 18;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_hide" field.</summary>
    public const int IsHideFieldNumber = 21;
    private bool isHide_;
    /// <summary>
    /// 是否隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "entity_template" field.</summary>
    public const int EntityTemplateFieldNumber = 22;
    private global::MelandGame3.EntityTemplate entityTemplate_;
    /// <summary>
    /// 实体模板数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityTemplate EntityTemplate {
      get { return entityTemplate_; }
      set {
        entityTemplate_ = value;
      }
    }

    /// <summary>Field number for the "cur_walk_dir" field.</summary>
    public const int CurWalkDirFieldNumber = 23;
    private string curWalkDir_ = "";
    /// <summary>
    /// 当前行走方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurWalkDir {
      get { return curWalkDir_; }
      set {
        curWalkDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lock_type" field.</summary>
    public const int LockTypeFieldNumber = 24;
    private global::MelandGame3.EntityLockType lockType_ = global::MelandGame3.EntityLockType.EntityLockTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLockType LockType {
      get { return lockType_; }
      set {
        lockType_ = value;
      }
    }

    /// <summary>Field number for the "from_father" field.</summary>
    public const int FromFatherFieldNumber = 25;
    private global::MelandGame3.EntityId fromFather_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId FromFather {
      get { return fromFather_; }
      set {
        fromFather_ = value;
      }
    }

    /// <summary>Field number for the "scene_effect" field.</summary>
    public const int SceneEffectFieldNumber = 26;
    private int sceneEffect_;
    /// <summary>
    /// 当前使用的展示效果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneEffect {
      get { return sceneEffect_; }
      set {
        sceneEffect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Pet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Pet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Id != other.Id) return false;
      if (Cid != other.Cid) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Camp != other.Camp) return false;
      if (IsBoss != other.IsBoss) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      if (AttType != other.AttType) return false;
      if (PatrolType != other.PatrolType) return false;
      if (IsCopy != other.IsCopy) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      if (Locker != other.Locker) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (IsHide != other.IsHide) return false;
      if (!object.Equals(EntityTemplate, other.EntityTemplate)) return false;
      if (CurWalkDir != other.CurWalkDir) return false;
      if (LockType != other.LockType) return false;
      if (!object.Equals(FromFather, other.FromFather)) return false;
      if (SceneEffect != other.SceneEffect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) hash ^= Type.GetHashCode();
      if (Camp != global::MelandGame3.Camp.CampNeutral) hash ^= Camp.GetHashCode();
      if (IsBoss != false) hash ^= IsBoss.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) hash ^= AttType.GetHashCode();
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) hash ^= PatrolType.GetHashCode();
      if (IsCopy != false) hash ^= IsCopy.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (Locker.Length != 0) hash ^= Locker.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (entityTemplate_ != null) hash ^= EntityTemplate.GetHashCode();
      if (CurWalkDir.Length != 0) hash ^= CurWalkDir.GetHashCode();
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) hash ^= LockType.GetHashCode();
      if (fromFather_ != null) hash ^= FromFather.GetHashCode();
      if (SceneEffect != 0) hash ^= SceneEffect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Camp);
      }
      if (IsBoss != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsBoss);
      }
      if (profile_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        output.WriteRawTag(72);
        output.WriteEnum((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) PatrolType);
      }
      if (IsCopy != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsCopy);
      }
      if (dir_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Dir);
      }
      if (IsInArea != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(GuideInfo);
      }
      if (IsHide != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsHide);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(CurWalkDir);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) LockType);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(FromFather);
      }
      if (SceneEffect != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(SceneEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Camp);
      }
      if (IsBoss != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsBoss);
      }
      if (profile_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        output.WriteRawTag(72);
        output.WriteEnum((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) PatrolType);
      }
      if (IsCopy != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsCopy);
      }
      if (dir_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Dir);
      }
      if (IsInArea != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(GuideInfo);
      }
      if (IsHide != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsHide);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(CurWalkDir);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) LockType);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(FromFather);
      }
      if (SceneEffect != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(SceneEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Camp);
      }
      if (IsBoss != false) {
        size += 1 + 1;
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PatrolType);
      }
      if (IsCopy != false) {
        size += 1 + 1;
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (IsInArea != false) {
        size += 1 + 1;
      }
      if (IsLock != false) {
        size += 1 + 1;
      }
      if (Locker.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Locker);
      }
      if (guideInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (IsHide != false) {
        size += 2 + 1;
      }
      if (entityTemplate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurWalkDir);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LockType);
      }
      if (fromFather_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FromFather);
      }
      if (SceneEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SceneEffect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Pet other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) {
        Type = other.Type;
      }
      if (other.Camp != global::MelandGame3.Camp.CampNeutral) {
        Camp = other.Camp;
      }
      if (other.IsBoss != false) {
        IsBoss = other.IsBoss;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::MelandGame3.EntityProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      if (other.AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        AttType = other.AttType;
      }
      if (other.PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        PatrolType = other.PatrolType;
      }
      if (other.IsCopy != false) {
        IsCopy = other.IsCopy;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      if (other.Locker.Length != 0) {
        Locker = other.Locker;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.entityTemplate_ != null) {
        if (entityTemplate_ == null) {
          EntityTemplate = new global::MelandGame3.EntityTemplate();
        }
        EntityTemplate.MergeFrom(other.EntityTemplate);
      }
      if (other.CurWalkDir.Length != 0) {
        CurWalkDir = other.CurWalkDir;
      }
      if (other.LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        LockType = other.LockType;
      }
      if (other.fromFather_ != null) {
        if (fromFather_ == null) {
          FromFather = new global::MelandGame3.EntityId();
        }
        FromFather.MergeFrom(other.FromFather);
      }
      if (other.SceneEffect != 0) {
        SceneEffect = other.SceneEffect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Type = (global::MelandGame3.MonsterType) input.ReadEnum();
            break;
          }
          case 48: {
            Camp = (global::MelandGame3.Camp) input.ReadEnum();
            break;
          }
          case 56: {
            IsBoss = input.ReadBool();
            break;
          }
          case 66: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 72: {
            AttType = (global::MelandGame3.MonsterAttType) input.ReadEnum();
            break;
          }
          case 80: {
            PatrolType = (global::MelandGame3.MonsterPatrolType) input.ReadEnum();
            break;
          }
          case 96: {
            IsCopy = input.ReadBool();
            break;
          }
          case 106: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 112: {
            IsInArea = input.ReadBool();
            break;
          }
          case 120: {
            IsLock = input.ReadBool();
            break;
          }
          case 138: {
            Locker = input.ReadString();
            break;
          }
          case 146: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 168: {
            IsHide = input.ReadBool();
            break;
          }
          case 178: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 186: {
            CurWalkDir = input.ReadString();
            break;
          }
          case 192: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 202: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
          case 208: {
            SceneEffect = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Type = (global::MelandGame3.MonsterType) input.ReadEnum();
            break;
          }
          case 48: {
            Camp = (global::MelandGame3.Camp) input.ReadEnum();
            break;
          }
          case 56: {
            IsBoss = input.ReadBool();
            break;
          }
          case 66: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 72: {
            AttType = (global::MelandGame3.MonsterAttType) input.ReadEnum();
            break;
          }
          case 80: {
            PatrolType = (global::MelandGame3.MonsterPatrolType) input.ReadEnum();
            break;
          }
          case 96: {
            IsCopy = input.ReadBool();
            break;
          }
          case 106: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 112: {
            IsInArea = input.ReadBool();
            break;
          }
          case 120: {
            IsLock = input.ReadBool();
            break;
          }
          case 138: {
            Locker = input.ReadString();
            break;
          }
          case 146: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 168: {
            IsHide = input.ReadBool();
            break;
          }
          case 178: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 186: {
            CurWalkDir = input.ReadString();
            break;
          }
          case 192: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 202: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
          case 208: {
            SceneEffect = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Puppet : pb::IMessage<Puppet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Puppet> _parser = new pb::MessageParser<Puppet>(() => new Puppet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Puppet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Puppet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Puppet(Puppet other) : this() {
      id_ = other.id_;
      cid_ = other.cid_;
      playerId_ = other.playerId_;
      eType_ = other.eType_;
      type_ = other.type_;
      camp_ = other.camp_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      attType_ = other.attType_;
      patrolType_ = other.patrolType_;
      haterId_ = other.haterId_;
      haterName_ = other.haterName_;
      codeStatus_ = other.codeStatus_;
      refreshTime_ = other.refreshTime_;
      runAttribute_ = other.runAttribute_ != null ? other.runAttribute_.Clone() : null;
      keyFrame_ = other.keyFrame_;
      isStampede_ = other.isStampede_;
      mirror_ = other.mirror_;
      isHide_ = other.isHide_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      isCopy_ = other.isCopy_;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      bubble_ = other.bubble_ != null ? other.bubble_.Clone() : null;
      locker_ = other.locker_;
      canDestroy_ = other.canDestroy_;
      isBuildFromTemplate_ = other.isBuildFromTemplate_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      entityTemplate_ = other.entityTemplate_ != null ? other.entityTemplate_.Clone() : null;
      curWalkDir_ = other.curWalkDir_;
      anims_ = other.anims_ != null ? other.anims_.Clone() : null;
      curPlayAnim_ = other.curPlayAnim_;
      lockType_ = other.lockType_;
      fromFather_ = other.fromFather_ != null ? other.fromFather_.Clone() : null;
      sceneEffect_ = other.sceneEffect_;
      audios_ = other.audios_ != null ? other.audios_.Clone() : null;
      cidAvatar_ = other.cidAvatar_;
      operateBubbles_ = other.operateBubbles_.Clone();
      curEmoji_ = other.curEmoji_;
      carryEntity_ = other.carryEntity_ != null ? other.carryEntity_.Clone() : null;
      forceDir_ = other.forceDir_.Clone();
      nftInfo_ = other.nftInfo_ != null ? other.nftInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Puppet Clone() {
      return new Puppet(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// 唯一Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 2;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 3;
    private string playerId_ = "";
    /// <summary>
    /// 归属玩家id(系统==0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "e_type" field.</summary>
    public const int ETypeFieldNumber = 4;
    private global::MelandGame3.EntityType eType_ = global::MelandGame3.EntityType.EntityTypeAll;
    /// <summary>
    /// 实体类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType EType {
      get { return eType_; }
      set {
        eType_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::MelandGame3.MonsterType type_ = global::MelandGame3.MonsterType.MonsterTypeUnknown;
    /// <summary>
    /// 怪物类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MonsterType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "camp" field.</summary>
    public const int CampFieldNumber = 6;
    private global::MelandGame3.Camp camp_ = global::MelandGame3.Camp.CampNeutral;
    /// <summary>
    /// 阵营
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Camp Camp {
      get { return camp_; }
      set {
        camp_ = value;
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 7;
    private global::MelandGame3.EntityProfile profile_;
    /// <summary>
    /// 战斗属性(lv, exp, att, def, ...)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    /// <summary>Field number for the "att_type" field.</summary>
    public const int AttTypeFieldNumber = 8;
    private global::MelandGame3.MonsterAttType attType_ = global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown;
    /// <summary>
    /// 攻击类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MonsterAttType AttType {
      get { return attType_; }
      set {
        attType_ = value;
      }
    }

    /// <summary>Field number for the "patrol_type" field.</summary>
    public const int PatrolTypeFieldNumber = 9;
    private global::MelandGame3.MonsterPatrolType patrolType_ = global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown;
    /// <summary>
    /// 巡逻类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MonsterPatrolType PatrolType {
      get { return patrolType_; }
      set {
        patrolType_ = value;
      }
    }

    /// <summary>Field number for the "hater_id" field.</summary>
    public const int HaterIdFieldNumber = 10;
    private string haterId_ = "";
    /// <summary>
    /// 仇恨归属
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HaterId {
      get { return haterId_; }
      set {
        haterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hater_name" field.</summary>
    public const int HaterNameFieldNumber = 11;
    private string haterName_ = "";
    /// <summary>
    /// 仇恨归属者名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HaterName {
      get { return haterName_; }
      set {
        haterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code_status" field.</summary>
    public const int CodeStatusFieldNumber = 12;
    private global::MelandGame3.EntityCodeStatus codeStatus_ = global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow;
    /// <summary>
    /// 运行状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityCodeStatus CodeStatus {
      get { return codeStatus_; }
      set {
        codeStatus_ = value;
      }
    }

    /// <summary>Field number for the "refresh_time" field.</summary>
    public const int RefreshTimeFieldNumber = 14;
    private long refreshTime_;
    /// <summary>
    /// 更新时刻(秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RefreshTime {
      get { return refreshTime_; }
      set {
        refreshTime_ = value;
      }
    }

    /// <summary>Field number for the "run_attribute" field.</summary>
    public const int RunAttributeFieldNumber = 15;
    private global::MelandGame3.EntityAttribute runAttribute_;
    /// <summary>
    /// 控件属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAttribute RunAttribute {
      get { return runAttribute_; }
      set {
        runAttribute_ = value;
      }
    }

    /// <summary>Field number for the "key_frame" field.</summary>
    public const int KeyFrameFieldNumber = 17;
    private int keyFrame_;
    /// <summary>
    /// 当前关键帧(动画)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int KeyFrame {
      get { return keyFrame_; }
      set {
        keyFrame_ = value;
      }
    }

    /// <summary>Field number for the "is_stampede" field.</summary>
    public const int IsStampedeFieldNumber = 18;
    private bool isStampede_;
    /// <summary>
    /// 是否可以踩踏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStampede {
      get { return isStampede_; }
      set {
        isStampede_ = value;
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 19;
    private bool mirror_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "is_hide" field.</summary>
    public const int IsHideFieldNumber = 21;
    private bool isHide_;
    /// <summary>
    /// 是否隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 22;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向（朝向）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "is_copy" field.</summary>
    public const int IsCopyFieldNumber = 23;
    private bool isCopy_;
    /// <summary>
    /// 是否为克隆体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCopy {
      get { return isCopy_; }
      set {
        isCopy_ = value;
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 24;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 25;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    /// <summary>Field number for the "bubble" field.</summary>
    public const int BubbleFieldNumber = 27;
    private global::MelandGame3.EntitySceneEffect bubble_;
    /// <summary>
    /// 泡泡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntitySceneEffect Bubble {
      get { return bubble_; }
      set {
        bubble_ = value;
      }
    }

    /// <summary>Field number for the "locker" field.</summary>
    public const int LockerFieldNumber = 28;
    private string locker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locker {
      get { return locker_; }
      set {
        locker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "can_destroy" field.</summary>
    public const int CanDestroyFieldNumber = 29;
    private bool canDestroy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanDestroy {
      get { return canDestroy_; }
      set {
        canDestroy_ = value;
      }
    }

    /// <summary>Field number for the "is_build_from_template" field.</summary>
    public const int IsBuildFromTemplateFieldNumber = 30;
    private bool isBuildFromTemplate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBuildFromTemplate {
      get { return isBuildFromTemplate_; }
      set {
        isBuildFromTemplate_ = value;
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 31;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "entity_template" field.</summary>
    public const int EntityTemplateFieldNumber = 32;
    private global::MelandGame3.EntityTemplate entityTemplate_;
    /// <summary>
    /// 实体模板数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityTemplate EntityTemplate {
      get { return entityTemplate_; }
      set {
        entityTemplate_ = value;
      }
    }

    /// <summary>Field number for the "cur_walk_dir" field.</summary>
    public const int CurWalkDirFieldNumber = 33;
    private string curWalkDir_ = "";
    /// <summary>
    /// 当前行走方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurWalkDir {
      get { return curWalkDir_; }
      set {
        curWalkDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "anims" field.</summary>
    public const int AnimsFieldNumber = 36;
    private global::MelandGame3.EntityAnimations anims_;
    /// <summary>
    /// 自定义动画
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAnimations Anims {
      get { return anims_; }
      set {
        anims_ = value;
      }
    }

    /// <summary>Field number for the "cur_play_anim" field.</summary>
    public const int CurPlayAnimFieldNumber = 37;
    private int curPlayAnim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurPlayAnim {
      get { return curPlayAnim_; }
      set {
        curPlayAnim_ = value;
      }
    }

    /// <summary>Field number for the "lock_type" field.</summary>
    public const int LockTypeFieldNumber = 38;
    private global::MelandGame3.EntityLockType lockType_ = global::MelandGame3.EntityLockType.EntityLockTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLockType LockType {
      get { return lockType_; }
      set {
        lockType_ = value;
      }
    }

    /// <summary>Field number for the "from_father" field.</summary>
    public const int FromFatherFieldNumber = 39;
    private global::MelandGame3.EntityId fromFather_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId FromFather {
      get { return fromFather_; }
      set {
        fromFather_ = value;
      }
    }

    /// <summary>Field number for the "scene_effect" field.</summary>
    public const int SceneEffectFieldNumber = 40;
    private int sceneEffect_;
    /// <summary>
    /// 当前使用的展示效果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneEffect {
      get { return sceneEffect_; }
      set {
        sceneEffect_ = value;
      }
    }

    /// <summary>Field number for the "audios" field.</summary>
    public const int AudiosFieldNumber = 41;
    private global::MelandGame3.EntityAudios audios_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAudios Audios {
      get { return audios_; }
      set {
        audios_ = value;
      }
    }

    /// <summary>Field number for the "cid_avatar" field.</summary>
    public const int CidAvatarFieldNumber = 42;
    private int cidAvatar_;
    /// <summary>
    ///将（实体（生物））切换成（实体（生物））
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CidAvatar {
      get { return cidAvatar_; }
      set {
        cidAvatar_ = value;
      }
    }

    /// <summary>Field number for the "operate_bubbles" field.</summary>
    public const int OperateBubblesFieldNumber = 43;
    private static readonly pb::FieldCodec<global::MelandGame3.OperateBubbleData> _repeated_operateBubbles_codec
        = pb::FieldCodec.ForMessage(346, global::MelandGame3.OperateBubbleData.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.OperateBubbleData> operateBubbles_ = new pbc::RepeatedField<global::MelandGame3.OperateBubbleData>();
    /// <summary>
    ///气泡数据LIST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.OperateBubbleData> OperateBubbles {
      get { return operateBubbles_; }
    }

    /// <summary>Field number for the "cur_emoji" field.</summary>
    public const int CurEmojiFieldNumber = 44;
    private int curEmoji_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurEmoji {
      get { return curEmoji_; }
      set {
        curEmoji_ = value;
      }
    }

    /// <summary>Field number for the "carry_entity" field.</summary>
    public const int CarryEntityFieldNumber = 45;
    private global::MelandGame3.CarryEntityBaseData carryEntity_;
    /// <summary>
    /// 生物当前搬运的实体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.CarryEntityBaseData CarryEntity {
      get { return carryEntity_; }
      set {
        carryEntity_ = value;
      }
    }

    /// <summary>Field number for the "force_dir" field.</summary>
    public const int ForceDirFieldNumber = 46;
    private static readonly pb::FieldCodec<global::MelandGame3.Vector3> _repeated_forceDir_codec
        = pb::FieldCodec.ForMessage(370, global::MelandGame3.Vector3.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Vector3> forceDir_ = new pbc::RepeatedField<global::MelandGame3.Vector3>();
    /// <summary>
    /// 场景作用力方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Vector3> ForceDir {
      get { return forceDir_; }
    }

    /// <summary>Field number for the "nft_info" field.</summary>
    public const int NftInfoFieldNumber = 47;
    private global::MelandGame3.EntityNftInfo nftInfo_;
    /// <summary>
    /// nft 道具信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityNftInfo NftInfo {
      get { return nftInfo_; }
      set {
        nftInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Puppet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Puppet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Cid != other.Cid) return false;
      if (PlayerId != other.PlayerId) return false;
      if (EType != other.EType) return false;
      if (Type != other.Type) return false;
      if (Camp != other.Camp) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      if (AttType != other.AttType) return false;
      if (PatrolType != other.PatrolType) return false;
      if (HaterId != other.HaterId) return false;
      if (HaterName != other.HaterName) return false;
      if (CodeStatus != other.CodeStatus) return false;
      if (RefreshTime != other.RefreshTime) return false;
      if (!object.Equals(RunAttribute, other.RunAttribute)) return false;
      if (KeyFrame != other.KeyFrame) return false;
      if (IsStampede != other.IsStampede) return false;
      if (Mirror != other.Mirror) return false;
      if (IsHide != other.IsHide) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (IsCopy != other.IsCopy) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      if (!object.Equals(Bubble, other.Bubble)) return false;
      if (Locker != other.Locker) return false;
      if (CanDestroy != other.CanDestroy) return false;
      if (IsBuildFromTemplate != other.IsBuildFromTemplate) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (!object.Equals(EntityTemplate, other.EntityTemplate)) return false;
      if (CurWalkDir != other.CurWalkDir) return false;
      if (!object.Equals(Anims, other.Anims)) return false;
      if (CurPlayAnim != other.CurPlayAnim) return false;
      if (LockType != other.LockType) return false;
      if (!object.Equals(FromFather, other.FromFather)) return false;
      if (SceneEffect != other.SceneEffect) return false;
      if (!object.Equals(Audios, other.Audios)) return false;
      if (CidAvatar != other.CidAvatar) return false;
      if(!operateBubbles_.Equals(other.operateBubbles_)) return false;
      if (CurEmoji != other.CurEmoji) return false;
      if (!object.Equals(CarryEntity, other.CarryEntity)) return false;
      if(!forceDir_.Equals(other.forceDir_)) return false;
      if (!object.Equals(NftInfo, other.NftInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) hash ^= EType.GetHashCode();
      if (Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) hash ^= Type.GetHashCode();
      if (Camp != global::MelandGame3.Camp.CampNeutral) hash ^= Camp.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) hash ^= AttType.GetHashCode();
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) hash ^= PatrolType.GetHashCode();
      if (HaterId.Length != 0) hash ^= HaterId.GetHashCode();
      if (HaterName.Length != 0) hash ^= HaterName.GetHashCode();
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) hash ^= CodeStatus.GetHashCode();
      if (RefreshTime != 0L) hash ^= RefreshTime.GetHashCode();
      if (runAttribute_ != null) hash ^= RunAttribute.GetHashCode();
      if (KeyFrame != 0) hash ^= KeyFrame.GetHashCode();
      if (IsStampede != false) hash ^= IsStampede.GetHashCode();
      if (Mirror != false) hash ^= Mirror.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (IsCopy != false) hash ^= IsCopy.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (bubble_ != null) hash ^= Bubble.GetHashCode();
      if (Locker.Length != 0) hash ^= Locker.GetHashCode();
      if (CanDestroy != false) hash ^= CanDestroy.GetHashCode();
      if (IsBuildFromTemplate != false) hash ^= IsBuildFromTemplate.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (entityTemplate_ != null) hash ^= EntityTemplate.GetHashCode();
      if (CurWalkDir.Length != 0) hash ^= CurWalkDir.GetHashCode();
      if (anims_ != null) hash ^= Anims.GetHashCode();
      if (CurPlayAnim != 0) hash ^= CurPlayAnim.GetHashCode();
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) hash ^= LockType.GetHashCode();
      if (fromFather_ != null) hash ^= FromFather.GetHashCode();
      if (SceneEffect != 0) hash ^= SceneEffect.GetHashCode();
      if (audios_ != null) hash ^= Audios.GetHashCode();
      if (CidAvatar != 0) hash ^= CidAvatar.GetHashCode();
      hash ^= operateBubbles_.GetHashCode();
      if (CurEmoji != 0) hash ^= CurEmoji.GetHashCode();
      if (carryEntity_ != null) hash ^= CarryEntity.GetHashCode();
      hash ^= forceDir_.GetHashCode();
      if (nftInfo_ != null) hash ^= NftInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerId);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(32);
        output.WriteEnum((int) EType);
      }
      if (Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Camp);
      }
      if (profile_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        output.WriteRawTag(72);
        output.WriteEnum((int) PatrolType);
      }
      if (HaterId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HaterId);
      }
      if (HaterName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(HaterName);
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        output.WriteRawTag(96);
        output.WriteEnum((int) CodeStatus);
      }
      if (RefreshTime != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(RefreshTime);
      }
      if (runAttribute_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RunAttribute);
      }
      if (KeyFrame != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(KeyFrame);
      }
      if (IsStampede != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsStampede);
      }
      if (Mirror != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Mirror);
      }
      if (IsHide != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsHide);
      }
      if (dir_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Dir);
      }
      if (IsCopy != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsCopy);
      }
      if (IsInArea != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(IsLock);
      }
      if (bubble_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(Bubble);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Locker);
      }
      if (CanDestroy != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(CanDestroy);
      }
      if (IsBuildFromTemplate != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsBuildFromTemplate);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(GuideInfo);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(CurWalkDir);
      }
      if (anims_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(Anims);
      }
      if (CurPlayAnim != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(CurPlayAnim);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(176, 2);
        output.WriteEnum((int) LockType);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(FromFather);
      }
      if (SceneEffect != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(SceneEffect);
      }
      if (audios_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(Audios);
      }
      if (CidAvatar != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(CidAvatar);
      }
      operateBubbles_.WriteTo(output, _repeated_operateBubbles_codec);
      if (CurEmoji != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(CurEmoji);
      }
      if (carryEntity_ != null) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(CarryEntity);
      }
      forceDir_.WriteTo(output, _repeated_forceDir_codec);
      if (nftInfo_ != null) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(NftInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerId);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(32);
        output.WriteEnum((int) EType);
      }
      if (Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Camp);
      }
      if (profile_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        output.WriteRawTag(72);
        output.WriteEnum((int) PatrolType);
      }
      if (HaterId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HaterId);
      }
      if (HaterName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(HaterName);
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        output.WriteRawTag(96);
        output.WriteEnum((int) CodeStatus);
      }
      if (RefreshTime != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(RefreshTime);
      }
      if (runAttribute_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RunAttribute);
      }
      if (KeyFrame != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(KeyFrame);
      }
      if (IsStampede != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsStampede);
      }
      if (Mirror != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Mirror);
      }
      if (IsHide != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsHide);
      }
      if (dir_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Dir);
      }
      if (IsCopy != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsCopy);
      }
      if (IsInArea != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(IsLock);
      }
      if (bubble_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(Bubble);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Locker);
      }
      if (CanDestroy != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(CanDestroy);
      }
      if (IsBuildFromTemplate != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsBuildFromTemplate);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(GuideInfo);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(CurWalkDir);
      }
      if (anims_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(Anims);
      }
      if (CurPlayAnim != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(CurPlayAnim);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(176, 2);
        output.WriteEnum((int) LockType);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(FromFather);
      }
      if (SceneEffect != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(SceneEffect);
      }
      if (audios_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(Audios);
      }
      if (CidAvatar != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(CidAvatar);
      }
      operateBubbles_.WriteTo(ref output, _repeated_operateBubbles_codec);
      if (CurEmoji != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(CurEmoji);
      }
      if (carryEntity_ != null) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(CarryEntity);
      }
      forceDir_.WriteTo(ref output, _repeated_forceDir_codec);
      if (nftInfo_ != null) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(NftInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EType);
      }
      if (Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Camp);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PatrolType);
      }
      if (HaterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HaterId);
      }
      if (HaterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HaterName);
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CodeStatus);
      }
      if (RefreshTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTime);
      }
      if (runAttribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunAttribute);
      }
      if (KeyFrame != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(KeyFrame);
      }
      if (IsStampede != false) {
        size += 2 + 1;
      }
      if (Mirror != false) {
        size += 2 + 1;
      }
      if (IsHide != false) {
        size += 2 + 1;
      }
      if (dir_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (IsCopy != false) {
        size += 2 + 1;
      }
      if (IsInArea != false) {
        size += 2 + 1;
      }
      if (IsLock != false) {
        size += 2 + 1;
      }
      if (bubble_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Bubble);
      }
      if (Locker.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Locker);
      }
      if (CanDestroy != false) {
        size += 2 + 1;
      }
      if (IsBuildFromTemplate != false) {
        size += 2 + 1;
      }
      if (guideInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (entityTemplate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntityTemplate);
      }
      if (CurWalkDir.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurWalkDir);
      }
      if (anims_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Anims);
      }
      if (CurPlayAnim != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurPlayAnim);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LockType);
      }
      if (fromFather_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FromFather);
      }
      if (SceneEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SceneEffect);
      }
      if (audios_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Audios);
      }
      if (CidAvatar != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CidAvatar);
      }
      size += operateBubbles_.CalculateSize(_repeated_operateBubbles_codec);
      if (CurEmoji != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurEmoji);
      }
      if (carryEntity_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CarryEntity);
      }
      size += forceDir_.CalculateSize(_repeated_forceDir_codec);
      if (nftInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NftInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Puppet other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.EType != global::MelandGame3.EntityType.EntityTypeAll) {
        EType = other.EType;
      }
      if (other.Type != global::MelandGame3.MonsterType.MonsterTypeUnknown) {
        Type = other.Type;
      }
      if (other.Camp != global::MelandGame3.Camp.CampNeutral) {
        Camp = other.Camp;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::MelandGame3.EntityProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      if (other.AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        AttType = other.AttType;
      }
      if (other.PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        PatrolType = other.PatrolType;
      }
      if (other.HaterId.Length != 0) {
        HaterId = other.HaterId;
      }
      if (other.HaterName.Length != 0) {
        HaterName = other.HaterName;
      }
      if (other.CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        CodeStatus = other.CodeStatus;
      }
      if (other.RefreshTime != 0L) {
        RefreshTime = other.RefreshTime;
      }
      if (other.runAttribute_ != null) {
        if (runAttribute_ == null) {
          RunAttribute = new global::MelandGame3.EntityAttribute();
        }
        RunAttribute.MergeFrom(other.RunAttribute);
      }
      if (other.KeyFrame != 0) {
        KeyFrame = other.KeyFrame;
      }
      if (other.IsStampede != false) {
        IsStampede = other.IsStampede;
      }
      if (other.Mirror != false) {
        Mirror = other.Mirror;
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.IsCopy != false) {
        IsCopy = other.IsCopy;
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      if (other.bubble_ != null) {
        if (bubble_ == null) {
          Bubble = new global::MelandGame3.EntitySceneEffect();
        }
        Bubble.MergeFrom(other.Bubble);
      }
      if (other.Locker.Length != 0) {
        Locker = other.Locker;
      }
      if (other.CanDestroy != false) {
        CanDestroy = other.CanDestroy;
      }
      if (other.IsBuildFromTemplate != false) {
        IsBuildFromTemplate = other.IsBuildFromTemplate;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.entityTemplate_ != null) {
        if (entityTemplate_ == null) {
          EntityTemplate = new global::MelandGame3.EntityTemplate();
        }
        EntityTemplate.MergeFrom(other.EntityTemplate);
      }
      if (other.CurWalkDir.Length != 0) {
        CurWalkDir = other.CurWalkDir;
      }
      if (other.anims_ != null) {
        if (anims_ == null) {
          Anims = new global::MelandGame3.EntityAnimations();
        }
        Anims.MergeFrom(other.Anims);
      }
      if (other.CurPlayAnim != 0) {
        CurPlayAnim = other.CurPlayAnim;
      }
      if (other.LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        LockType = other.LockType;
      }
      if (other.fromFather_ != null) {
        if (fromFather_ == null) {
          FromFather = new global::MelandGame3.EntityId();
        }
        FromFather.MergeFrom(other.FromFather);
      }
      if (other.SceneEffect != 0) {
        SceneEffect = other.SceneEffect;
      }
      if (other.audios_ != null) {
        if (audios_ == null) {
          Audios = new global::MelandGame3.EntityAudios();
        }
        Audios.MergeFrom(other.Audios);
      }
      if (other.CidAvatar != 0) {
        CidAvatar = other.CidAvatar;
      }
      operateBubbles_.Add(other.operateBubbles_);
      if (other.CurEmoji != 0) {
        CurEmoji = other.CurEmoji;
      }
      if (other.carryEntity_ != null) {
        if (carryEntity_ == null) {
          CarryEntity = new global::MelandGame3.CarryEntityBaseData();
        }
        CarryEntity.MergeFrom(other.CarryEntity);
      }
      forceDir_.Add(other.forceDir_);
      if (other.nftInfo_ != null) {
        if (nftInfo_ == null) {
          NftInfo = new global::MelandGame3.EntityNftInfo();
        }
        NftInfo.MergeFrom(other.NftInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
          case 26: {
            PlayerId = input.ReadString();
            break;
          }
          case 32: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 40: {
            Type = (global::MelandGame3.MonsterType) input.ReadEnum();
            break;
          }
          case 48: {
            Camp = (global::MelandGame3.Camp) input.ReadEnum();
            break;
          }
          case 58: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 64: {
            AttType = (global::MelandGame3.MonsterAttType) input.ReadEnum();
            break;
          }
          case 72: {
            PatrolType = (global::MelandGame3.MonsterPatrolType) input.ReadEnum();
            break;
          }
          case 82: {
            HaterId = input.ReadString();
            break;
          }
          case 90: {
            HaterName = input.ReadString();
            break;
          }
          case 96: {
            CodeStatus = (global::MelandGame3.EntityCodeStatus) input.ReadEnum();
            break;
          }
          case 112: {
            RefreshTime = input.ReadInt64();
            break;
          }
          case 122: {
            if (runAttribute_ == null) {
              RunAttribute = new global::MelandGame3.EntityAttribute();
            }
            input.ReadMessage(RunAttribute);
            break;
          }
          case 136: {
            KeyFrame = input.ReadInt32();
            break;
          }
          case 144: {
            IsStampede = input.ReadBool();
            break;
          }
          case 152: {
            Mirror = input.ReadBool();
            break;
          }
          case 168: {
            IsHide = input.ReadBool();
            break;
          }
          case 178: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 184: {
            IsCopy = input.ReadBool();
            break;
          }
          case 192: {
            IsInArea = input.ReadBool();
            break;
          }
          case 200: {
            IsLock = input.ReadBool();
            break;
          }
          case 218: {
            if (bubble_ == null) {
              Bubble = new global::MelandGame3.EntitySceneEffect();
            }
            input.ReadMessage(Bubble);
            break;
          }
          case 226: {
            Locker = input.ReadString();
            break;
          }
          case 232: {
            CanDestroy = input.ReadBool();
            break;
          }
          case 240: {
            IsBuildFromTemplate = input.ReadBool();
            break;
          }
          case 250: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 258: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 266: {
            CurWalkDir = input.ReadString();
            break;
          }
          case 290: {
            if (anims_ == null) {
              Anims = new global::MelandGame3.EntityAnimations();
            }
            input.ReadMessage(Anims);
            break;
          }
          case 296: {
            CurPlayAnim = input.ReadInt32();
            break;
          }
          case 304: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 314: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
          case 320: {
            SceneEffect = input.ReadInt32();
            break;
          }
          case 330: {
            if (audios_ == null) {
              Audios = new global::MelandGame3.EntityAudios();
            }
            input.ReadMessage(Audios);
            break;
          }
          case 336: {
            CidAvatar = input.ReadInt32();
            break;
          }
          case 346: {
            operateBubbles_.AddEntriesFrom(input, _repeated_operateBubbles_codec);
            break;
          }
          case 352: {
            CurEmoji = input.ReadInt32();
            break;
          }
          case 362: {
            if (carryEntity_ == null) {
              CarryEntity = new global::MelandGame3.CarryEntityBaseData();
            }
            input.ReadMessage(CarryEntity);
            break;
          }
          case 370: {
            forceDir_.AddEntriesFrom(input, _repeated_forceDir_codec);
            break;
          }
          case 378: {
            if (nftInfo_ == null) {
              NftInfo = new global::MelandGame3.EntityNftInfo();
            }
            input.ReadMessage(NftInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
          case 26: {
            PlayerId = input.ReadString();
            break;
          }
          case 32: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 40: {
            Type = (global::MelandGame3.MonsterType) input.ReadEnum();
            break;
          }
          case 48: {
            Camp = (global::MelandGame3.Camp) input.ReadEnum();
            break;
          }
          case 58: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 64: {
            AttType = (global::MelandGame3.MonsterAttType) input.ReadEnum();
            break;
          }
          case 72: {
            PatrolType = (global::MelandGame3.MonsterPatrolType) input.ReadEnum();
            break;
          }
          case 82: {
            HaterId = input.ReadString();
            break;
          }
          case 90: {
            HaterName = input.ReadString();
            break;
          }
          case 96: {
            CodeStatus = (global::MelandGame3.EntityCodeStatus) input.ReadEnum();
            break;
          }
          case 112: {
            RefreshTime = input.ReadInt64();
            break;
          }
          case 122: {
            if (runAttribute_ == null) {
              RunAttribute = new global::MelandGame3.EntityAttribute();
            }
            input.ReadMessage(RunAttribute);
            break;
          }
          case 136: {
            KeyFrame = input.ReadInt32();
            break;
          }
          case 144: {
            IsStampede = input.ReadBool();
            break;
          }
          case 152: {
            Mirror = input.ReadBool();
            break;
          }
          case 168: {
            IsHide = input.ReadBool();
            break;
          }
          case 178: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 184: {
            IsCopy = input.ReadBool();
            break;
          }
          case 192: {
            IsInArea = input.ReadBool();
            break;
          }
          case 200: {
            IsLock = input.ReadBool();
            break;
          }
          case 218: {
            if (bubble_ == null) {
              Bubble = new global::MelandGame3.EntitySceneEffect();
            }
            input.ReadMessage(Bubble);
            break;
          }
          case 226: {
            Locker = input.ReadString();
            break;
          }
          case 232: {
            CanDestroy = input.ReadBool();
            break;
          }
          case 240: {
            IsBuildFromTemplate = input.ReadBool();
            break;
          }
          case 250: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 258: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 266: {
            CurWalkDir = input.ReadString();
            break;
          }
          case 290: {
            if (anims_ == null) {
              Anims = new global::MelandGame3.EntityAnimations();
            }
            input.ReadMessage(Anims);
            break;
          }
          case 296: {
            CurPlayAnim = input.ReadInt32();
            break;
          }
          case 304: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 314: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
          case 320: {
            SceneEffect = input.ReadInt32();
            break;
          }
          case 330: {
            if (audios_ == null) {
              Audios = new global::MelandGame3.EntityAudios();
            }
            input.ReadMessage(Audios);
            break;
          }
          case 336: {
            CidAvatar = input.ReadInt32();
            break;
          }
          case 346: {
            operateBubbles_.AddEntriesFrom(ref input, _repeated_operateBubbles_codec);
            break;
          }
          case 352: {
            CurEmoji = input.ReadInt32();
            break;
          }
          case 362: {
            if (carryEntity_ == null) {
              CarryEntity = new global::MelandGame3.CarryEntityBaseData();
            }
            input.ReadMessage(CarryEntity);
            break;
          }
          case 370: {
            forceDir_.AddEntriesFrom(ref input, _repeated_forceDir_codec);
            break;
          }
          case 378: {
            if (nftInfo_ == null) {
              NftInfo = new global::MelandGame3.EntityNftInfo();
            }
            input.ReadMessage(NftInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Monster : pb::IMessage<Monster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Monster> _parser = new pb::MessageParser<Monster>(() => new Monster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Monster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Monster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Monster(Monster other) : this() {
      cid_ = other.cid_;
      id_ = other.id_;
      name_ = other.name_;
      active_ = other.active_;
      owner_ = other.owner_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      attType_ = other.attType_;
      patrolType_ = other.patrolType_;
      haterId_ = other.haterId_;
      haterName_ = other.haterName_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      fighting_ = other.fighting_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Monster Clone() {
      return new Monster(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    /// <summary>
    /// 策划配置表里的 Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// 怪物唯一 Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// 怪物名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 4;
    private bool active_;
    /// <summary>
    /// 存活
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 5;
    private string owner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 6;
    private global::MelandGame3.EntityProfile profile_;
    /// <summary>
    /// 怪物数值(lv, exp, att, def, ...)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    /// <summary>Field number for the "att_type" field.</summary>
    public const int AttTypeFieldNumber = 7;
    private global::MelandGame3.MonsterAttType attType_ = global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown;
    /// <summary>
    /// 攻击类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MonsterAttType AttType {
      get { return attType_; }
      set {
        attType_ = value;
      }
    }

    /// <summary>Field number for the "patrol_type" field.</summary>
    public const int PatrolTypeFieldNumber = 8;
    private global::MelandGame3.MonsterPatrolType patrolType_ = global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown;
    /// <summary>
    /// 巡逻类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MonsterPatrolType PatrolType {
      get { return patrolType_; }
      set {
        patrolType_ = value;
      }
    }

    /// <summary>Field number for the "hater_id" field.</summary>
    public const int HaterIdFieldNumber = 9;
    private string haterId_ = "";
    /// <summary>
    ///仇恨归属
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HaterId {
      get { return haterId_; }
      set {
        haterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hater_name" field.</summary>
    public const int HaterNameFieldNumber = 10;
    private string haterName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HaterName {
      get { return haterName_; }
      set {
        haterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 11;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向（朝向）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 12;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "fighting" field.</summary>
    public const int FightingFieldNumber = 13;
    private bool fighting_;
    /// <summary>
    ///  是否正在战斗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Fighting {
      get { return fighting_; }
      set {
        fighting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Monster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Monster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Active != other.Active) return false;
      if (Owner != other.Owner) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      if (AttType != other.AttType) return false;
      if (PatrolType != other.PatrolType) return false;
      if (HaterId != other.HaterId) return false;
      if (HaterName != other.HaterName) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (Fighting != other.Fighting) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Active != false) hash ^= Active.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) hash ^= AttType.GetHashCode();
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) hash ^= PatrolType.GetHashCode();
      if (HaterId.Length != 0) hash ^= HaterId.GetHashCode();
      if (HaterName.Length != 0) hash ^= HaterName.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (Fighting != false) hash ^= Fighting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Active != false) {
        output.WriteRawTag(32);
        output.WriteBool(Active);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Owner);
      }
      if (profile_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) PatrolType);
      }
      if (HaterId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HaterId);
      }
      if (HaterName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HaterName);
      }
      if (dir_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Dir);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GuideInfo);
      }
      if (Fighting != false) {
        output.WriteRawTag(104);
        output.WriteBool(Fighting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Active != false) {
        output.WriteRawTag(32);
        output.WriteBool(Active);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Owner);
      }
      if (profile_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) PatrolType);
      }
      if (HaterId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HaterId);
      }
      if (HaterName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HaterName);
      }
      if (dir_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Dir);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GuideInfo);
      }
      if (Fighting != false) {
        output.WriteRawTag(104);
        output.WriteBool(Fighting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Active != false) {
        size += 1 + 1;
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttType);
      }
      if (PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PatrolType);
      }
      if (HaterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HaterId);
      }
      if (HaterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HaterName);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (Fighting != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Monster other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::MelandGame3.EntityProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      if (other.AttType != global::MelandGame3.MonsterAttType.MonsterAttTypeUnknown) {
        AttType = other.AttType;
      }
      if (other.PatrolType != global::MelandGame3.MonsterPatrolType.MonsterPatrolTypeUnknown) {
        PatrolType = other.PatrolType;
      }
      if (other.HaterId.Length != 0) {
        HaterId = other.HaterId;
      }
      if (other.HaterName.Length != 0) {
        HaterName = other.HaterName;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.Fighting != false) {
        Fighting = other.Fighting;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Active = input.ReadBool();
            break;
          }
          case 42: {
            Owner = input.ReadString();
            break;
          }
          case 50: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 56: {
            AttType = (global::MelandGame3.MonsterAttType) input.ReadEnum();
            break;
          }
          case 64: {
            PatrolType = (global::MelandGame3.MonsterPatrolType) input.ReadEnum();
            break;
          }
          case 74: {
            HaterId = input.ReadString();
            break;
          }
          case 82: {
            HaterName = input.ReadString();
            break;
          }
          case 90: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 98: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 104: {
            Fighting = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Active = input.ReadBool();
            break;
          }
          case 42: {
            Owner = input.ReadString();
            break;
          }
          case 50: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 56: {
            AttType = (global::MelandGame3.MonsterAttType) input.ReadEnum();
            break;
          }
          case 64: {
            PatrolType = (global::MelandGame3.MonsterPatrolType) input.ReadEnum();
            break;
          }
          case 74: {
            HaterId = input.ReadString();
            break;
          }
          case 82: {
            HaterName = input.ReadString();
            break;
          }
          case 90: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 98: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 104: {
            Fighting = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 掉落物
  /// </summary>
  public sealed partial class FallingObject : pb::IMessage<FallingObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FallingObject> _parser = new pb::MessageParser<FallingObject>(() => new FallingObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FallingObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FallingObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FallingObject(FallingObject other) : this() {
      id_ = other.id_;
      cid_ = other.cid_;
      quantity_ = other.quantity_;
      playerId_ = other.playerId_;
      mirror_ = other.mirror_;
      attribute_ = other.attribute_ != null ? other.attribute_.Clone() : null;
      autoPick_ = other.autoPick_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      locker_ = other.locker_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      lockType_ = other.lockType_;
      eType_ = other.eType_;
      isHide_ = other.isHide_;
      entityTemplate_ = other.entityTemplate_ != null ? other.entityTemplate_.Clone() : null;
      runAttribute_ = other.runAttribute_ != null ? other.runAttribute_.Clone() : null;
      isCopy_ = other.isCopy_;
      fromFather_ = other.fromFather_ != null ? other.fromFather_.Clone() : null;
      sceneEffect_ = other.sceneEffect_;
      audios_ = other.audios_ != null ? other.audios_.Clone() : null;
      isResourcePoint_ = other.isResourcePoint_;
      operateBubbles_ = other.operateBubbles_.Clone();
      forceDir_ = other.forceDir_.Clone();
      quality_ = other.quality_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FallingObject Clone() {
      return new FallingObject(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///?????
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 2;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private int quantity_;
    /// <summary>
    /// 包含的数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private string playerId_ = "";
    /// <summary>
    /// 归属玩家id(系统==0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 5;
    private bool mirror_;
    /// <summary>
    /// 是否为镜像摆放
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 7;
    private global::MelandGame3.AvatarAttribute attribute_;
    /// <summary>
    /// 当前状态
    ///int32 state_id = 6;
    /// 属性只对装备有效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AvatarAttribute Attribute {
      get { return attribute_; }
      set {
        attribute_ = value;
      }
    }

    /// <summary>Field number for the "auto_pick" field.</summary>
    public const int AutoPickFieldNumber = 8;
    private bool autoPick_;
    /// <summary>
    /// 是否自动拾取 (deprecated)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AutoPick {
      get { return autoPick_; }
      set {
        autoPick_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 9;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向（朝向）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 10;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 11;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    /// <summary>Field number for the "locker" field.</summary>
    public const int LockerFieldNumber = 12;
    private string locker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locker {
      get { return locker_; }
      set {
        locker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 13;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "lock_type" field.</summary>
    public const int LockTypeFieldNumber = 14;
    private global::MelandGame3.EntityLockType lockType_ = global::MelandGame3.EntityLockType.EntityLockTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLockType LockType {
      get { return lockType_; }
      set {
        lockType_ = value;
      }
    }

    /// <summary>Field number for the "e_type" field.</summary>
    public const int ETypeFieldNumber = 15;
    private global::MelandGame3.EntityType eType_ = global::MelandGame3.EntityType.EntityTypeAll;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType EType {
      get { return eType_; }
      set {
        eType_ = value;
      }
    }

    /// <summary>Field number for the "is_hide" field.</summary>
    public const int IsHideFieldNumber = 16;
    private bool isHide_;
    /// <summary>
    /// 是否隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "entity_template" field.</summary>
    public const int EntityTemplateFieldNumber = 17;
    private global::MelandGame3.EntityTemplate entityTemplate_;
    /// <summary>
    /// 实体模板数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityTemplate EntityTemplate {
      get { return entityTemplate_; }
      set {
        entityTemplate_ = value;
      }
    }

    /// <summary>Field number for the "run_attribute" field.</summary>
    public const int RunAttributeFieldNumber = 18;
    private global::MelandGame3.EntityAttribute runAttribute_;
    /// <summary>
    /// 控件属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAttribute RunAttribute {
      get { return runAttribute_; }
      set {
        runAttribute_ = value;
      }
    }

    /// <summary>Field number for the "is_copy" field.</summary>
    public const int IsCopyFieldNumber = 19;
    private bool isCopy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCopy {
      get { return isCopy_; }
      set {
        isCopy_ = value;
      }
    }

    /// <summary>Field number for the "from_father" field.</summary>
    public const int FromFatherFieldNumber = 20;
    private global::MelandGame3.EntityId fromFather_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId FromFather {
      get { return fromFather_; }
      set {
        fromFather_ = value;
      }
    }

    /// <summary>Field number for the "scene_effect" field.</summary>
    public const int SceneEffectFieldNumber = 21;
    private int sceneEffect_;
    /// <summary>
    /// 当前使用的展示效果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneEffect {
      get { return sceneEffect_; }
      set {
        sceneEffect_ = value;
      }
    }

    /// <summary>Field number for the "audios" field.</summary>
    public const int AudiosFieldNumber = 22;
    private global::MelandGame3.EntityAudios audios_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAudios Audios {
      get { return audios_; }
      set {
        audios_ = value;
      }
    }

    /// <summary>Field number for the "is_resource_point" field.</summary>
    public const int IsResourcePointFieldNumber = 23;
    private bool isResourcePoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsResourcePoint {
      get { return isResourcePoint_; }
      set {
        isResourcePoint_ = value;
      }
    }

    /// <summary>Field number for the "operate_bubbles" field.</summary>
    public const int OperateBubblesFieldNumber = 24;
    private static readonly pb::FieldCodec<global::MelandGame3.OperateBubbleData> _repeated_operateBubbles_codec
        = pb::FieldCodec.ForMessage(194, global::MelandGame3.OperateBubbleData.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.OperateBubbleData> operateBubbles_ = new pbc::RepeatedField<global::MelandGame3.OperateBubbleData>();
    /// <summary>
    ///气泡数据LIST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.OperateBubbleData> OperateBubbles {
      get { return operateBubbles_; }
    }

    /// <summary>Field number for the "force_dir" field.</summary>
    public const int ForceDirFieldNumber = 25;
    private static readonly pb::FieldCodec<global::MelandGame3.Vector3> _repeated_forceDir_codec
        = pb::FieldCodec.ForMessage(202, global::MelandGame3.Vector3.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Vector3> forceDir_ = new pbc::RepeatedField<global::MelandGame3.Vector3>();
    /// <summary>
    /// 场景作用力方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Vector3> ForceDir {
      get { return forceDir_; }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 26;
    private int quality_;
    /// <summary>
    /// 品质
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FallingObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FallingObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Cid != other.Cid) return false;
      if (Quantity != other.Quantity) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Mirror != other.Mirror) return false;
      if (!object.Equals(Attribute, other.Attribute)) return false;
      if (AutoPick != other.AutoPick) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      if (Locker != other.Locker) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (LockType != other.LockType) return false;
      if (EType != other.EType) return false;
      if (IsHide != other.IsHide) return false;
      if (!object.Equals(EntityTemplate, other.EntityTemplate)) return false;
      if (!object.Equals(RunAttribute, other.RunAttribute)) return false;
      if (IsCopy != other.IsCopy) return false;
      if (!object.Equals(FromFather, other.FromFather)) return false;
      if (SceneEffect != other.SceneEffect) return false;
      if (!object.Equals(Audios, other.Audios)) return false;
      if (IsResourcePoint != other.IsResourcePoint) return false;
      if(!operateBubbles_.Equals(other.operateBubbles_)) return false;
      if(!forceDir_.Equals(other.forceDir_)) return false;
      if (Quality != other.Quality) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Mirror != false) hash ^= Mirror.GetHashCode();
      if (attribute_ != null) hash ^= Attribute.GetHashCode();
      if (AutoPick != false) hash ^= AutoPick.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (Locker.Length != 0) hash ^= Locker.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) hash ^= LockType.GetHashCode();
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) hash ^= EType.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (entityTemplate_ != null) hash ^= EntityTemplate.GetHashCode();
      if (runAttribute_ != null) hash ^= RunAttribute.GetHashCode();
      if (IsCopy != false) hash ^= IsCopy.GetHashCode();
      if (fromFather_ != null) hash ^= FromFather.GetHashCode();
      if (SceneEffect != 0) hash ^= SceneEffect.GetHashCode();
      if (audios_ != null) hash ^= Audios.GetHashCode();
      if (IsResourcePoint != false) hash ^= IsResourcePoint.GetHashCode();
      hash ^= operateBubbles_.GetHashCode();
      hash ^= forceDir_.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (Mirror != false) {
        output.WriteRawTag(40);
        output.WriteBool(Mirror);
      }
      if (attribute_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Attribute);
      }
      if (AutoPick != false) {
        output.WriteRawTag(64);
        output.WriteBool(AutoPick);
      }
      if (dir_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Dir);
      }
      if (IsInArea != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(112);
        output.WriteEnum((int) LockType);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(120);
        output.WriteEnum((int) EType);
      }
      if (IsHide != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsHide);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(EntityTemplate);
      }
      if (runAttribute_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RunAttribute);
      }
      if (IsCopy != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsCopy);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(FromFather);
      }
      if (SceneEffect != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(SceneEffect);
      }
      if (audios_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Audios);
      }
      if (IsResourcePoint != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsResourcePoint);
      }
      operateBubbles_.WriteTo(output, _repeated_operateBubbles_codec);
      forceDir_.WriteTo(output, _repeated_forceDir_codec);
      if (Quality != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(Quality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (Mirror != false) {
        output.WriteRawTag(40);
        output.WriteBool(Mirror);
      }
      if (attribute_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Attribute);
      }
      if (AutoPick != false) {
        output.WriteRawTag(64);
        output.WriteBool(AutoPick);
      }
      if (dir_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Dir);
      }
      if (IsInArea != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(112);
        output.WriteEnum((int) LockType);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(120);
        output.WriteEnum((int) EType);
      }
      if (IsHide != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsHide);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(EntityTemplate);
      }
      if (runAttribute_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RunAttribute);
      }
      if (IsCopy != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsCopy);
      }
      if (fromFather_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(FromFather);
      }
      if (SceneEffect != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(SceneEffect);
      }
      if (audios_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Audios);
      }
      if (IsResourcePoint != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsResourcePoint);
      }
      operateBubbles_.WriteTo(ref output, _repeated_operateBubbles_codec);
      forceDir_.WriteTo(ref output, _repeated_forceDir_codec);
      if (Quality != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(Quality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Mirror != false) {
        size += 1 + 1;
      }
      if (attribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attribute);
      }
      if (AutoPick != false) {
        size += 1 + 1;
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (IsInArea != false) {
        size += 1 + 1;
      }
      if (IsLock != false) {
        size += 1 + 1;
      }
      if (Locker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locker);
      }
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LockType);
      }
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EType);
      }
      if (IsHide != false) {
        size += 2 + 1;
      }
      if (entityTemplate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntityTemplate);
      }
      if (runAttribute_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RunAttribute);
      }
      if (IsCopy != false) {
        size += 2 + 1;
      }
      if (fromFather_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FromFather);
      }
      if (SceneEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SceneEffect);
      }
      if (audios_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Audios);
      }
      if (IsResourcePoint != false) {
        size += 2 + 1;
      }
      size += operateBubbles_.CalculateSize(_repeated_operateBubbles_codec);
      size += forceDir_.CalculateSize(_repeated_forceDir_codec);
      if (Quality != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FallingObject other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Mirror != false) {
        Mirror = other.Mirror;
      }
      if (other.attribute_ != null) {
        if (attribute_ == null) {
          Attribute = new global::MelandGame3.AvatarAttribute();
        }
        Attribute.MergeFrom(other.Attribute);
      }
      if (other.AutoPick != false) {
        AutoPick = other.AutoPick;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      if (other.Locker.Length != 0) {
        Locker = other.Locker;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        LockType = other.LockType;
      }
      if (other.EType != global::MelandGame3.EntityType.EntityTypeAll) {
        EType = other.EType;
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.entityTemplate_ != null) {
        if (entityTemplate_ == null) {
          EntityTemplate = new global::MelandGame3.EntityTemplate();
        }
        EntityTemplate.MergeFrom(other.EntityTemplate);
      }
      if (other.runAttribute_ != null) {
        if (runAttribute_ == null) {
          RunAttribute = new global::MelandGame3.EntityAttribute();
        }
        RunAttribute.MergeFrom(other.RunAttribute);
      }
      if (other.IsCopy != false) {
        IsCopy = other.IsCopy;
      }
      if (other.fromFather_ != null) {
        if (fromFather_ == null) {
          FromFather = new global::MelandGame3.EntityId();
        }
        FromFather.MergeFrom(other.FromFather);
      }
      if (other.SceneEffect != 0) {
        SceneEffect = other.SceneEffect;
      }
      if (other.audios_ != null) {
        if (audios_ == null) {
          Audios = new global::MelandGame3.EntityAudios();
        }
        Audios.MergeFrom(other.Audios);
      }
      if (other.IsResourcePoint != false) {
        IsResourcePoint = other.IsResourcePoint;
      }
      operateBubbles_.Add(other.operateBubbles_);
      forceDir_.Add(other.forceDir_);
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 40: {
            Mirror = input.ReadBool();
            break;
          }
          case 58: {
            if (attribute_ == null) {
              Attribute = new global::MelandGame3.AvatarAttribute();
            }
            input.ReadMessage(Attribute);
            break;
          }
          case 64: {
            AutoPick = input.ReadBool();
            break;
          }
          case 74: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 80: {
            IsInArea = input.ReadBool();
            break;
          }
          case 88: {
            IsLock = input.ReadBool();
            break;
          }
          case 98: {
            Locker = input.ReadString();
            break;
          }
          case 106: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 112: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 120: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 128: {
            IsHide = input.ReadBool();
            break;
          }
          case 138: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 146: {
            if (runAttribute_ == null) {
              RunAttribute = new global::MelandGame3.EntityAttribute();
            }
            input.ReadMessage(RunAttribute);
            break;
          }
          case 152: {
            IsCopy = input.ReadBool();
            break;
          }
          case 162: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
          case 168: {
            SceneEffect = input.ReadInt32();
            break;
          }
          case 178: {
            if (audios_ == null) {
              Audios = new global::MelandGame3.EntityAudios();
            }
            input.ReadMessage(Audios);
            break;
          }
          case 184: {
            IsResourcePoint = input.ReadBool();
            break;
          }
          case 194: {
            operateBubbles_.AddEntriesFrom(input, _repeated_operateBubbles_codec);
            break;
          }
          case 202: {
            forceDir_.AddEntriesFrom(input, _repeated_forceDir_codec);
            break;
          }
          case 208: {
            Quality = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 40: {
            Mirror = input.ReadBool();
            break;
          }
          case 58: {
            if (attribute_ == null) {
              Attribute = new global::MelandGame3.AvatarAttribute();
            }
            input.ReadMessage(Attribute);
            break;
          }
          case 64: {
            AutoPick = input.ReadBool();
            break;
          }
          case 74: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 80: {
            IsInArea = input.ReadBool();
            break;
          }
          case 88: {
            IsLock = input.ReadBool();
            break;
          }
          case 98: {
            Locker = input.ReadString();
            break;
          }
          case 106: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 112: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
          case 120: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 128: {
            IsHide = input.ReadBool();
            break;
          }
          case 138: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 146: {
            if (runAttribute_ == null) {
              RunAttribute = new global::MelandGame3.EntityAttribute();
            }
            input.ReadMessage(RunAttribute);
            break;
          }
          case 152: {
            IsCopy = input.ReadBool();
            break;
          }
          case 162: {
            if (fromFather_ == null) {
              FromFather = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(FromFather);
            break;
          }
          case 168: {
            SceneEffect = input.ReadInt32();
            break;
          }
          case 178: {
            if (audios_ == null) {
              Audios = new global::MelandGame3.EntityAudios();
            }
            input.ReadMessage(Audios);
            break;
          }
          case 184: {
            IsResourcePoint = input.ReadBool();
            break;
          }
          case 194: {
            operateBubbles_.AddEntriesFrom(ref input, _repeated_operateBubbles_codec);
            break;
          }
          case 202: {
            forceDir_.AddEntriesFrom(ref input, _repeated_forceDir_codec);
            break;
          }
          case 208: {
            Quality = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 资源
  /// </summary>
  public sealed partial class Material : pb::IMessage<Material>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Material> _parser = new pb::MessageParser<Material>(() => new Material());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Material> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Material() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Material(Material other) : this() {
      cid_ = other.cid_;
      id_ = other.id_;
      type_ = other.type_;
      name_ = other.name_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      enemyType_ = other.enemyType_;
      dropExp_ = other.dropExp_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      locker_ = other.locker_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      fromEntityTemplate_ = other.fromEntityTemplate_;
      entityTemplate_ = other.entityTemplate_ != null ? other.entityTemplate_.Clone() : null;
      isHide_ = other.isHide_;
      lockType_ = other.lockType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Material Clone() {
      return new Material(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    /// <summary>
    /// 配置表里的 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// 唯一 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::MelandGame3.MaterialType type_ = global::MelandGame3.MaterialType.MaterialTypeUnknown;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MaterialType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// 名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 5;
    private global::MelandGame3.EntityProfile profile_;
    /// <summary>
    /// 资源数值 (hp_limit)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    /// <summary>Field number for the "enemy_type" field.</summary>
    public const int EnemyTypeFieldNumber = 6;
    private global::MelandGame3.EnemyType enemyType_ = global::MelandGame3.EnemyType.EnemyTypeUnattackable;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EnemyType EnemyType {
      get { return enemyType_; }
      set {
        enemyType_ = value;
      }
    }

    /// <summary>Field number for the "drop_exp" field.</summary>
    public const int DropExpFieldNumber = 7;
    private int dropExp_;
    /// <summary>
    /// 死亡攻击者获得经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DropExp {
      get { return dropExp_; }
      set {
        dropExp_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 8;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向（朝向）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 9;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 10;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    /// <summary>Field number for the "locker" field.</summary>
    public const int LockerFieldNumber = 11;
    private string locker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locker {
      get { return locker_; }
      set {
        locker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 12;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "from_entity_template" field.</summary>
    public const int FromEntityTemplateFieldNumber = 13;
    private bool fromEntityTemplate_;
    /// <summary>
    /// 是否来自实体模板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FromEntityTemplate {
      get { return fromEntityTemplate_; }
      set {
        fromEntityTemplate_ = value;
      }
    }

    /// <summary>Field number for the "entity_template" field.</summary>
    public const int EntityTemplateFieldNumber = 14;
    private global::MelandGame3.EntityTemplate entityTemplate_;
    /// <summary>
    /// 模板数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityTemplate EntityTemplate {
      get { return entityTemplate_; }
      set {
        entityTemplate_ = value;
      }
    }

    /// <summary>Field number for the "is_hide" field.</summary>
    public const int IsHideFieldNumber = 15;
    private bool isHide_;
    /// <summary>
    /// 是否隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "lock_type" field.</summary>
    public const int LockTypeFieldNumber = 16;
    private global::MelandGame3.EntityLockType lockType_ = global::MelandGame3.EntityLockType.EntityLockTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLockType LockType {
      get { return lockType_; }
      set {
        lockType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Material);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Material other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      if (EnemyType != other.EnemyType) return false;
      if (DropExp != other.DropExp) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      if (Locker != other.Locker) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (FromEntityTemplate != other.FromEntityTemplate) return false;
      if (!object.Equals(EntityTemplate, other.EntityTemplate)) return false;
      if (IsHide != other.IsHide) return false;
      if (LockType != other.LockType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type != global::MelandGame3.MaterialType.MaterialTypeUnknown) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) hash ^= EnemyType.GetHashCode();
      if (DropExp != 0) hash ^= DropExp.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (Locker.Length != 0) hash ^= Locker.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (FromEntityTemplate != false) hash ^= FromEntityTemplate.GetHashCode();
      if (entityTemplate_ != null) hash ^= EntityTemplate.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) hash ^= LockType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Type != global::MelandGame3.MaterialType.MaterialTypeUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (profile_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Profile);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EnemyType);
      }
      if (DropExp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DropExp);
      }
      if (dir_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Dir);
      }
      if (IsInArea != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GuideInfo);
      }
      if (FromEntityTemplate != false) {
        output.WriteRawTag(104);
        output.WriteBool(FromEntityTemplate);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(EntityTemplate);
      }
      if (IsHide != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsHide);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) LockType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Type != global::MelandGame3.MaterialType.MaterialTypeUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (profile_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Profile);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EnemyType);
      }
      if (DropExp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DropExp);
      }
      if (dir_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Dir);
      }
      if (IsInArea != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GuideInfo);
      }
      if (FromEntityTemplate != false) {
        output.WriteRawTag(104);
        output.WriteBool(FromEntityTemplate);
      }
      if (entityTemplate_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(EntityTemplate);
      }
      if (IsHide != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsHide);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) LockType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type != global::MelandGame3.MaterialType.MaterialTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnemyType);
      }
      if (DropExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DropExp);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (IsInArea != false) {
        size += 1 + 1;
      }
      if (IsLock != false) {
        size += 1 + 1;
      }
      if (Locker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locker);
      }
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (FromEntityTemplate != false) {
        size += 1 + 1;
      }
      if (entityTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityTemplate);
      }
      if (IsHide != false) {
        size += 1 + 1;
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LockType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Material other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type != global::MelandGame3.MaterialType.MaterialTypeUnknown) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::MelandGame3.EntityProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      if (other.EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        EnemyType = other.EnemyType;
      }
      if (other.DropExp != 0) {
        DropExp = other.DropExp;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      if (other.Locker.Length != 0) {
        Locker = other.Locker;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.FromEntityTemplate != false) {
        FromEntityTemplate = other.FromEntityTemplate;
      }
      if (other.entityTemplate_ != null) {
        if (entityTemplate_ == null) {
          EntityTemplate = new global::MelandGame3.EntityTemplate();
        }
        EntityTemplate.MergeFrom(other.EntityTemplate);
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        LockType = other.LockType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::MelandGame3.MaterialType) input.ReadEnum();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 48: {
            EnemyType = (global::MelandGame3.EnemyType) input.ReadEnum();
            break;
          }
          case 56: {
            DropExp = input.ReadInt32();
            break;
          }
          case 66: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 72: {
            IsInArea = input.ReadBool();
            break;
          }
          case 80: {
            IsLock = input.ReadBool();
            break;
          }
          case 90: {
            Locker = input.ReadString();
            break;
          }
          case 98: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 104: {
            FromEntityTemplate = input.ReadBool();
            break;
          }
          case 114: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 120: {
            IsHide = input.ReadBool();
            break;
          }
          case 128: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::MelandGame3.MaterialType) input.ReadEnum();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 48: {
            EnemyType = (global::MelandGame3.EnemyType) input.ReadEnum();
            break;
          }
          case 56: {
            DropExp = input.ReadInt32();
            break;
          }
          case 66: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 72: {
            IsInArea = input.ReadBool();
            break;
          }
          case 80: {
            IsLock = input.ReadBool();
            break;
          }
          case 90: {
            Locker = input.ReadString();
            break;
          }
          case 98: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 104: {
            FromEntityTemplate = input.ReadBool();
            break;
          }
          case 114: {
            if (entityTemplate_ == null) {
              EntityTemplate = new global::MelandGame3.EntityTemplate();
            }
            input.ReadMessage(EntityTemplate);
            break;
          }
          case 120: {
            IsHide = input.ReadBool();
            break;
          }
          case 128: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Bot : pb::IMessage<Bot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Bot> _parser = new pb::MessageParser<Bot>(() => new Bot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Bot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bot(Bot other) : this() {
      cid_ = other.cid_;
      id_ = other.id_;
      botName_ = other.botName_;
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      status_ = other.status_;
      fuel_ = other.fuel_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      nowSkin_ = other.nowSkin_;
      skins_ = other.skins_.Clone();
      bubble_ = other.bubble_ != null ? other.bubble_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      avatars_ = other.avatars_.Clone();
      isCopy_ = other.isCopy_;
      codeStatus_ = other.codeStatus_;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      lockType_ = other.lockType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bot Clone() {
      return new Bot(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    /// <summary>
    /// 配置表里的 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// bot 唯一 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bot_name" field.</summary>
    public const int BotNameFieldNumber = 3;
    private string botName_ = "";
    /// <summary>
    /// bot的名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BotName {
      get { return botName_; }
      set {
        botName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private string playerId_ = "";
    /// <summary>
    /// bot归属的玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 5;
    private string playerName_ = "";
    /// <summary>
    /// bot归属的玩家名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 6;
    private global::MelandGame3.EntityProfile profile_;
    /// <summary>
    /// 属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private global::MelandGame3.BotStatus status_ = global::MelandGame3.BotStatus.BotStatusUnknown;
    /// <summary>
    /// 运行状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.BotStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "fuel" field.</summary>
    public const int FuelFieldNumber = 8;
    private int fuel_;
    /// <summary>
    /// 燃料
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Fuel {
      get { return fuel_; }
      set {
        fuel_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 9;
    private global::MelandGame3.EntityLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "nowSkin" field.</summary>
    public const int NowSkinFieldNumber = 10;
    private int nowSkin_;
    /// <summary>
    /// 当前皮肤配置id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NowSkin {
      get { return nowSkin_; }
      set {
        nowSkin_ = value;
      }
    }

    /// <summary>Field number for the "skins" field.</summary>
    public const int SkinsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_skins_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> skins_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 拥有的皮肤配置id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Skins {
      get { return skins_; }
    }

    /// <summary>Field number for the "bubble" field.</summary>
    public const int BubbleFieldNumber = 12;
    private global::MelandGame3.EntitySceneEffect bubble_;
    /// <summary>
    /// 泡泡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntitySceneEffect Bubble {
      get { return bubble_; }
      set {
        bubble_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 13;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "avatars" field.</summary>
    public const int AvatarsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::MelandGame3.PlayerAvatar> _repeated_avatars_codec
        = pb::FieldCodec.ForMessage(114, global::MelandGame3.PlayerAvatar.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.PlayerAvatar> avatars_ = new pbc::RepeatedField<global::MelandGame3.PlayerAvatar>();
    /// <summary>
    /// bot avatar
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.PlayerAvatar> Avatars {
      get { return avatars_; }
    }

    /// <summary>Field number for the "is_copy" field.</summary>
    public const int IsCopyFieldNumber = 15;
    private bool isCopy_;
    /// <summary>
    /// 是否为克隆体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCopy {
      get { return isCopy_; }
      set {
        isCopy_ = value;
      }
    }

    /// <summary>Field number for the "code_status" field.</summary>
    public const int CodeStatusFieldNumber = 16;
    private global::MelandGame3.EntityCodeStatus codeStatus_ = global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow;
    /// <summary>
    /// 运行状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityCodeStatus CodeStatus {
      get { return codeStatus_; }
      set {
        codeStatus_ = value;
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 17;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 18;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 20;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "lock_type" field.</summary>
    public const int LockTypeFieldNumber = 21;
    private global::MelandGame3.EntityLockType lockType_ = global::MelandGame3.EntityLockType.EntityLockTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLockType LockType {
      get { return lockType_; }
      set {
        lockType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Bot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Bot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (Id != other.Id) return false;
      if (BotName != other.BotName) return false;
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      if (Status != other.Status) return false;
      if (Fuel != other.Fuel) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (NowSkin != other.NowSkin) return false;
      if(!skins_.Equals(other.skins_)) return false;
      if (!object.Equals(Bubble, other.Bubble)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if(!avatars_.Equals(other.avatars_)) return false;
      if (IsCopy != other.IsCopy) return false;
      if (CodeStatus != other.CodeStatus) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (LockType != other.LockType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (BotName.Length != 0) hash ^= BotName.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (Status != global::MelandGame3.BotStatus.BotStatusUnknown) hash ^= Status.GetHashCode();
      if (Fuel != 0) hash ^= Fuel.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (NowSkin != 0) hash ^= NowSkin.GetHashCode();
      hash ^= skins_.GetHashCode();
      if (bubble_ != null) hash ^= Bubble.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      hash ^= avatars_.GetHashCode();
      if (IsCopy != false) hash ^= IsCopy.GetHashCode();
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) hash ^= CodeStatus.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) hash ^= LockType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (BotName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BotName);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PlayerName);
      }
      if (profile_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Profile);
      }
      if (Status != global::MelandGame3.BotStatus.BotStatusUnknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      if (Fuel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Fuel);
      }
      if (location_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Location);
      }
      if (NowSkin != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(NowSkin);
      }
      skins_.WriteTo(output, _repeated_skins_codec);
      if (bubble_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Bubble);
      }
      if (dir_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Dir);
      }
      avatars_.WriteTo(output, _repeated_avatars_codec);
      if (IsCopy != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsCopy);
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) CodeStatus);
      }
      if (IsInArea != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsLock);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) LockType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (BotName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BotName);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PlayerName);
      }
      if (profile_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Profile);
      }
      if (Status != global::MelandGame3.BotStatus.BotStatusUnknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      if (Fuel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Fuel);
      }
      if (location_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Location);
      }
      if (NowSkin != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(NowSkin);
      }
      skins_.WriteTo(ref output, _repeated_skins_codec);
      if (bubble_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Bubble);
      }
      if (dir_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Dir);
      }
      avatars_.WriteTo(ref output, _repeated_avatars_codec);
      if (IsCopy != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsCopy);
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) CodeStatus);
      }
      if (IsInArea != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsLock);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) LockType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (BotName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotName);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (Status != global::MelandGame3.BotStatus.BotStatusUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Fuel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fuel);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (NowSkin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NowSkin);
      }
      size += skins_.CalculateSize(_repeated_skins_codec);
      if (bubble_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bubble);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      size += avatars_.CalculateSize(_repeated_avatars_codec);
      if (IsCopy != false) {
        size += 1 + 1;
      }
      if (CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CodeStatus);
      }
      if (IsInArea != false) {
        size += 2 + 1;
      }
      if (IsLock != false) {
        size += 2 + 1;
      }
      if (guideInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LockType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Bot other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.BotName.Length != 0) {
        BotName = other.BotName;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::MelandGame3.EntityProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      if (other.Status != global::MelandGame3.BotStatus.BotStatusUnknown) {
        Status = other.Status;
      }
      if (other.Fuel != 0) {
        Fuel = other.Fuel;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::MelandGame3.EntityLocation();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.NowSkin != 0) {
        NowSkin = other.NowSkin;
      }
      skins_.Add(other.skins_);
      if (other.bubble_ != null) {
        if (bubble_ == null) {
          Bubble = new global::MelandGame3.EntitySceneEffect();
        }
        Bubble.MergeFrom(other.Bubble);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      avatars_.Add(other.avatars_);
      if (other.IsCopy != false) {
        IsCopy = other.IsCopy;
      }
      if (other.CodeStatus != global::MelandGame3.EntityCodeStatus.EntityCodeStatusUnknow) {
        CodeStatus = other.CodeStatus;
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        LockType = other.LockType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            BotName = input.ReadString();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            PlayerName = input.ReadString();
            break;
          }
          case 50: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 56: {
            Status = (global::MelandGame3.BotStatus) input.ReadEnum();
            break;
          }
          case 64: {
            Fuel = input.ReadInt32();
            break;
          }
          case 74: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 80: {
            NowSkin = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            skins_.AddEntriesFrom(input, _repeated_skins_codec);
            break;
          }
          case 98: {
            if (bubble_ == null) {
              Bubble = new global::MelandGame3.EntitySceneEffect();
            }
            input.ReadMessage(Bubble);
            break;
          }
          case 106: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 114: {
            avatars_.AddEntriesFrom(input, _repeated_avatars_codec);
            break;
          }
          case 120: {
            IsCopy = input.ReadBool();
            break;
          }
          case 128: {
            CodeStatus = (global::MelandGame3.EntityCodeStatus) input.ReadEnum();
            break;
          }
          case 136: {
            IsInArea = input.ReadBool();
            break;
          }
          case 144: {
            IsLock = input.ReadBool();
            break;
          }
          case 162: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 168: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            BotName = input.ReadString();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            PlayerName = input.ReadString();
            break;
          }
          case 50: {
            if (profile_ == null) {
              Profile = new global::MelandGame3.EntityProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
          case 56: {
            Status = (global::MelandGame3.BotStatus) input.ReadEnum();
            break;
          }
          case 64: {
            Fuel = input.ReadInt32();
            break;
          }
          case 74: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 80: {
            NowSkin = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            skins_.AddEntriesFrom(ref input, _repeated_skins_codec);
            break;
          }
          case 98: {
            if (bubble_ == null) {
              Bubble = new global::MelandGame3.EntitySceneEffect();
            }
            input.ReadMessage(Bubble);
            break;
          }
          case 106: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 114: {
            avatars_.AddEntriesFrom(ref input, _repeated_avatars_codec);
            break;
          }
          case 120: {
            IsCopy = input.ReadBool();
            break;
          }
          case 128: {
            CodeStatus = (global::MelandGame3.EntityCodeStatus) input.ReadEnum();
            break;
          }
          case 136: {
            IsInArea = input.ReadBool();
            break;
          }
          case 144: {
            IsLock = input.ReadBool();
            break;
          }
          case 162: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 168: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FallingBox : pb::IMessage<FallingBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FallingBox> _parser = new pb::MessageParser<FallingBox>(() => new FallingBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FallingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FallingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FallingBox(FallingBox other) : this() {
      id_ = other.id_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      fallingObjects_ = other.fallingObjects_.Clone();
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      locker_ = other.locker_;
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      lockType_ = other.lockType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FallingBox Clone() {
      return new FallingBox(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::MelandGame3.EntityLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "falling_objects" field.</summary>
    public const int FallingObjectsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MelandGame3.FallingObject> _repeated_fallingObjects_codec
        = pb::FieldCodec.ForMessage(26, global::MelandGame3.FallingObject.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.FallingObject> fallingObjects_ = new pbc::RepeatedField<global::MelandGame3.FallingObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.FallingObject> FallingObjects {
      get { return fallingObjects_; }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 5;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 6;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 7;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    /// <summary>Field number for the "locker" field.</summary>
    public const int LockerFieldNumber = 8;
    private string locker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locker {
      get { return locker_; }
      set {
        locker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_info" field.</summary>
    public const int GuideInfoFieldNumber = 9;
    private global::MelandGame3.EntityGuidance guideInfo_;
    /// <summary>
    ///引导提示信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityGuidance GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    /// <summary>Field number for the "lock_type" field.</summary>
    public const int LockTypeFieldNumber = 10;
    private global::MelandGame3.EntityLockType lockType_ = global::MelandGame3.EntityLockType.EntityLockTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLockType LockType {
      get { return lockType_; }
      set {
        lockType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FallingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FallingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if(!fallingObjects_.Equals(other.fallingObjects_)) return false;
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      if (Locker != other.Locker) return false;
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      if (LockType != other.LockType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      hash ^= fallingObjects_.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (Locker.Length != 0) hash ^= Locker.GetHashCode();
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) hash ^= LockType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      fallingObjects_.WriteTo(output, _repeated_fallingObjects_codec);
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PlayerName);
      }
      if (IsInArea != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) LockType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      fallingObjects_.WriteTo(ref output, _repeated_fallingObjects_codec);
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PlayerName);
      }
      if (IsInArea != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsLock);
      }
      if (Locker.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Locker);
      }
      if (guideInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) LockType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      size += fallingObjects_.CalculateSize(_repeated_fallingObjects_codec);
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (IsInArea != false) {
        size += 1 + 1;
      }
      if (IsLock != false) {
        size += 1 + 1;
      }
      if (Locker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locker);
      }
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LockType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FallingBox other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::MelandGame3.EntityLocation();
        }
        Location.MergeFrom(other.Location);
      }
      fallingObjects_.Add(other.fallingObjects_);
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      if (other.Locker.Length != 0) {
        Locker = other.Locker;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::MelandGame3.EntityGuidance();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      if (other.LockType != global::MelandGame3.EntityLockType.EntityLockTypeUnknown) {
        LockType = other.LockType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            fallingObjects_.AddEntriesFrom(input, _repeated_fallingObjects_codec);
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            PlayerName = input.ReadString();
            break;
          }
          case 48: {
            IsInArea = input.ReadBool();
            break;
          }
          case 56: {
            IsLock = input.ReadBool();
            break;
          }
          case 66: {
            Locker = input.ReadString();
            break;
          }
          case 74: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 80: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            fallingObjects_.AddEntriesFrom(ref input, _repeated_fallingObjects_codec);
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            PlayerName = input.ReadString();
            break;
          }
          case 48: {
            IsInArea = input.ReadBool();
            break;
          }
          case 56: {
            IsLock = input.ReadBool();
            break;
          }
          case 66: {
            Locker = input.ReadString();
            break;
          }
          case 74: {
            if (guideInfo_ == null) {
              GuideInfo = new global::MelandGame3.EntityGuidance();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
          case 80: {
            LockType = (global::MelandGame3.EntityLockType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 打地图图片专属
  /// </summary>
  public sealed partial class EntityBaseData : pb::IMessage<EntityBaseData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityBaseData> _parser = new pb::MessageParser<EntityBaseData>(() => new EntityBaseData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityBaseData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityBaseData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityBaseData(EntityBaseData other) : this() {
      eType_ = other.eType_;
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      cid_ = other.cid_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      mirror_ = other.mirror_;
      isHide_ = other.isHide_;
      resName_ = other.resName_;
      curPlayAnim_ = other.curPlayAnim_;
      area_ = other.area_;
      forceDir_ = other.forceDir_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityBaseData Clone() {
      return new EntityBaseData(this);
    }

    /// <summary>Field number for the "e_type" field.</summary>
    public const int ETypeFieldNumber = 1;
    private global::MelandGame3.EntityType eType_ = global::MelandGame3.EntityType.EntityTypeAll;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType EType {
      get { return eType_; }
      set {
        eType_ = value;
      }
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 2;
    private global::MelandGame3.EntityLocation loc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 3;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private global::MelandGame3.Vector3 dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 5;
    private bool mirror_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "is_hide" field.</summary>
    public const int IsHideFieldNumber = 6;
    private bool isHide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "res_name" field.</summary>
    public const int ResNameFieldNumber = 7;
    private string resName_ = "";
    /// <summary>
    /// 动画资源(图片/龙骨动画)使用实体模板时才给值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResName {
      get { return resName_; }
      set {
        resName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cur_play_anim" field.</summary>
    public const int CurPlayAnimFieldNumber = 8;
    private int curPlayAnim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurPlayAnim {
      get { return curPlayAnim_; }
      set {
        curPlayAnim_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 9;
    private string area_ = "";
    /// <summary>
    /// 实体阴影 使用实体模板时才给值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Area {
      get { return area_; }
      set {
        area_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "force_dir" field.</summary>
    public const int ForceDirFieldNumber = 10;
    private static readonly pb::FieldCodec<global::MelandGame3.Vector3> _repeated_forceDir_codec
        = pb::FieldCodec.ForMessage(82, global::MelandGame3.Vector3.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Vector3> forceDir_ = new pbc::RepeatedField<global::MelandGame3.Vector3>();
    /// <summary>
    /// 场景作用力方向(in,out)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Vector3> ForceDir {
      get { return forceDir_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityBaseData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityBaseData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EType != other.EType) return false;
      if (!object.Equals(Loc, other.Loc)) return false;
      if (Cid != other.Cid) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (Mirror != other.Mirror) return false;
      if (IsHide != other.IsHide) return false;
      if (ResName != other.ResName) return false;
      if (CurPlayAnim != other.CurPlayAnim) return false;
      if (Area != other.Area) return false;
      if(!forceDir_.Equals(other.forceDir_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) hash ^= EType.GetHashCode();
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (Mirror != false) hash ^= Mirror.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (ResName.Length != 0) hash ^= ResName.GetHashCode();
      if (CurPlayAnim != 0) hash ^= CurPlayAnim.GetHashCode();
      if (Area.Length != 0) hash ^= Area.GetHashCode();
      hash ^= forceDir_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EType);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (dir_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Dir);
      }
      if (Mirror != false) {
        output.WriteRawTag(40);
        output.WriteBool(Mirror);
      }
      if (IsHide != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsHide);
      }
      if (ResName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ResName);
      }
      if (CurPlayAnim != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CurPlayAnim);
      }
      if (Area.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Area);
      }
      forceDir_.WriteTo(output, _repeated_forceDir_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EType);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (dir_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Dir);
      }
      if (Mirror != false) {
        output.WriteRawTag(40);
        output.WriteBool(Mirror);
      }
      if (IsHide != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsHide);
      }
      if (ResName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ResName);
      }
      if (CurPlayAnim != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CurPlayAnim);
      }
      if (Area.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Area);
      }
      forceDir_.WriteTo(ref output, _repeated_forceDir_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EType != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EType);
      }
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (Mirror != false) {
        size += 1 + 1;
      }
      if (IsHide != false) {
        size += 1 + 1;
      }
      if (ResName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResName);
      }
      if (CurPlayAnim != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurPlayAnim);
      }
      if (Area.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Area);
      }
      size += forceDir_.CalculateSize(_repeated_forceDir_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityBaseData other) {
      if (other == null) {
        return;
      }
      if (other.EType != global::MelandGame3.EntityType.EntityTypeAll) {
        EType = other.EType;
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::MelandGame3.EntityLocation();
        }
        Loc.MergeFrom(other.Loc);
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.Mirror != false) {
        Mirror = other.Mirror;
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.ResName.Length != 0) {
        ResName = other.ResName;
      }
      if (other.CurPlayAnim != 0) {
        CurPlayAnim = other.CurPlayAnim;
      }
      if (other.Area.Length != 0) {
        Area = other.Area;
      }
      forceDir_.Add(other.forceDir_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 40: {
            Mirror = input.ReadBool();
            break;
          }
          case 48: {
            IsHide = input.ReadBool();
            break;
          }
          case 58: {
            ResName = input.ReadString();
            break;
          }
          case 64: {
            CurPlayAnim = input.ReadInt32();
            break;
          }
          case 74: {
            Area = input.ReadString();
            break;
          }
          case 82: {
            forceDir_.AddEntriesFrom(input, _repeated_forceDir_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 40: {
            Mirror = input.ReadBool();
            break;
          }
          case 48: {
            IsHide = input.ReadBool();
            break;
          }
          case 58: {
            ResName = input.ReadString();
            break;
          }
          case 64: {
            CurPlayAnim = input.ReadInt32();
            break;
          }
          case 74: {
            Area = input.ReadString();
            break;
          }
          case 82: {
            forceDir_.AddEntriesFrom(ref input, _repeated_forceDir_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityTurning : pb::IMessage<EntityTurning>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityTurning> _parser = new pb::MessageParser<EntityTurning>(() => new EntityTurning());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityTurning> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTurning() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTurning(EntityTurning other) : this() {
      entityType_ = other.entityType_;
      entityId_ = other.entityId_;
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTurning Clone() {
      return new EntityTurning(this);
    }

    /// <summary>Field number for the "entity_type" field.</summary>
    public const int EntityTypeFieldNumber = 1;
    private global::MelandGame3.EntityType entityType_ = global::MelandGame3.EntityType.EntityTypeAll;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityType EntityType {
      get { return entityType_; }
      set {
        entityType_ = value;
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private string entityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 3;
    private global::MelandGame3.Vector3 direction_;
    /// <summary>
    /// 朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityTurning);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityTurning other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityType != other.EntityType) return false;
      if (EntityId != other.EntityId) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityType != global::MelandGame3.EntityType.EntityTypeAll) hash ^= EntityType.GetHashCode();
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EntityType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EntityType);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntityId);
      }
      if (direction_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EntityType != global::MelandGame3.EntityType.EntityTypeAll) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EntityType);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntityId);
      }
      if (direction_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EntityType != global::MelandGame3.EntityType.EntityTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntityType);
      }
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityTurning other) {
      if (other == null) {
        return;
      }
      if (other.EntityType != global::MelandGame3.EntityType.EntityTypeAll) {
        EntityType = other.EntityType;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::MelandGame3.Vector3();
        }
        Direction.MergeFrom(other.Direction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EntityType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            EntityId = input.ReadString();
            break;
          }
          case 26: {
            if (direction_ == null) {
              Direction = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EntityType = (global::MelandGame3.EntityType) input.ReadEnum();
            break;
          }
          case 18: {
            EntityId = input.ReadString();
            break;
          }
          case 26: {
            if (direction_ == null) {
              Direction = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家 or 机器人装备
  /// </summary>
  public sealed partial class PlayerAvatar : pb::IMessage<PlayerAvatar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerAvatar> _parser = new pb::MessageParser<PlayerAvatar>(() => new PlayerAvatar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerAvatar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAvatar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAvatar(PlayerAvatar other) : this() {
      position_ = other.position_;
      objectId_ = other.objectId_;
      attribute_ = other.attribute_ != null ? other.attribute_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAvatar Clone() {
      return new PlayerAvatar(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::MelandGame3.AvatarPosition position_ = global::MelandGame3.AvatarPosition.AvatarPositionNone;
    /// <summary>
    /// 装备位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AvatarPosition Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private int objectId_;
    /// <summary>
    /// 装备的物品 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 3;
    private global::MelandGame3.AvatarAttribute attribute_;
    /// <summary>
    /// 属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AvatarAttribute Attribute {
      get { return attribute_; }
      set {
        attribute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerAvatar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerAvatar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Position != other.Position) return false;
      if (ObjectId != other.ObjectId) return false;
      if (!object.Equals(Attribute, other.Attribute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Position != global::MelandGame3.AvatarPosition.AvatarPositionNone) hash ^= Position.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (attribute_ != null) hash ^= Attribute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Position != global::MelandGame3.AvatarPosition.AvatarPositionNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Position);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjectId);
      }
      if (attribute_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Attribute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Position != global::MelandGame3.AvatarPosition.AvatarPositionNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Position);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjectId);
      }
      if (attribute_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Attribute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Position != global::MelandGame3.AvatarPosition.AvatarPositionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Position);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (attribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attribute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerAvatar other) {
      if (other == null) {
        return;
      }
      if (other.Position != global::MelandGame3.AvatarPosition.AvatarPositionNone) {
        Position = other.Position;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.attribute_ != null) {
        if (attribute_ == null) {
          Attribute = new global::MelandGame3.AvatarAttribute();
        }
        Attribute.MergeFrom(other.Attribute);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Position = (global::MelandGame3.AvatarPosition) input.ReadEnum();
            break;
          }
          case 16: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 26: {
            if (attribute_ == null) {
              Attribute = new global::MelandGame3.AvatarAttribute();
            }
            input.ReadMessage(Attribute);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Position = (global::MelandGame3.AvatarPosition) input.ReadEnum();
            break;
          }
          case 16: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 26: {
            if (attribute_ == null) {
              Attribute = new global::MelandGame3.AvatarAttribute();
            }
            input.ReadMessage(Attribute);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 容貌数据
  /// </summary>
  public sealed partial class PlayerFeature : pb::IMessage<PlayerFeature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerFeature> _parser = new pb::MessageParser<PlayerFeature>(() => new PlayerFeature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerFeature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFeature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFeature(PlayerFeature other) : this() {
      eyebrow_ = other.eyebrow_;
      mouth_ = other.mouth_;
      eye_ = other.eye_;
      face_ = other.face_;
      hair_ = other.hair_;
      glove_ = other.glove_;
      clothes_ = other.clothes_;
      pants_ = other.pants_;
      shoes_ = other.shoes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFeature Clone() {
      return new PlayerFeature(this);
    }

    /// <summary>Field number for the "eyebrow" field.</summary>
    public const int EyebrowFieldNumber = 1;
    private int eyebrow_;
    /// <summary>
    /// 眉毛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Eyebrow {
      get { return eyebrow_; }
      set {
        eyebrow_ = value;
      }
    }

    /// <summary>Field number for the "mouth" field.</summary>
    public const int MouthFieldNumber = 2;
    private int mouth_;
    /// <summary>
    /// 嘴型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mouth {
      get { return mouth_; }
      set {
        mouth_ = value;
      }
    }

    /// <summary>Field number for the "eye" field.</summary>
    public const int EyeFieldNumber = 3;
    private int eye_;
    /// <summary>
    /// 眼镜
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Eye {
      get { return eye_; }
      set {
        eye_ = value;
      }
    }

    /// <summary>Field number for the "face" field.</summary>
    public const int FaceFieldNumber = 4;
    private int face_;
    /// <summary>
    /// 脸型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Face {
      get { return face_; }
      set {
        face_ = value;
      }
    }

    /// <summary>Field number for the "hair" field.</summary>
    public const int HairFieldNumber = 5;
    private int hair_;
    /// <summary>
    /// 头发
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hair {
      get { return hair_; }
      set {
        hair_ = value;
      }
    }

    /// <summary>Field number for the "glove" field.</summary>
    public const int GloveFieldNumber = 6;
    private int glove_;
    /// <summary>
    /// 手套
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Glove {
      get { return glove_; }
      set {
        glove_ = value;
      }
    }

    /// <summary>Field number for the "clothes" field.</summary>
    public const int ClothesFieldNumber = 7;
    private int clothes_;
    /// <summary>
    /// 衣服/上衣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clothes {
      get { return clothes_; }
      set {
        clothes_ = value;
      }
    }

    /// <summary>Field number for the "pants" field.</summary>
    public const int PantsFieldNumber = 8;
    private int pants_;
    /// <summary>
    /// 裤子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pants {
      get { return pants_; }
      set {
        pants_ = value;
      }
    }

    /// <summary>Field number for the "shoes" field.</summary>
    public const int ShoesFieldNumber = 9;
    private int shoes_;
    /// <summary>
    /// 鞋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Shoes {
      get { return shoes_; }
      set {
        shoes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerFeature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerFeature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eyebrow != other.Eyebrow) return false;
      if (Mouth != other.Mouth) return false;
      if (Eye != other.Eye) return false;
      if (Face != other.Face) return false;
      if (Hair != other.Hair) return false;
      if (Glove != other.Glove) return false;
      if (Clothes != other.Clothes) return false;
      if (Pants != other.Pants) return false;
      if (Shoes != other.Shoes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Eyebrow != 0) hash ^= Eyebrow.GetHashCode();
      if (Mouth != 0) hash ^= Mouth.GetHashCode();
      if (Eye != 0) hash ^= Eye.GetHashCode();
      if (Face != 0) hash ^= Face.GetHashCode();
      if (Hair != 0) hash ^= Hair.GetHashCode();
      if (Glove != 0) hash ^= Glove.GetHashCode();
      if (Clothes != 0) hash ^= Clothes.GetHashCode();
      if (Pants != 0) hash ^= Pants.GetHashCode();
      if (Shoes != 0) hash ^= Shoes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Eyebrow != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Eyebrow);
      }
      if (Mouth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mouth);
      }
      if (Eye != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Eye);
      }
      if (Face != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Face);
      }
      if (Hair != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Hair);
      }
      if (Glove != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Glove);
      }
      if (Clothes != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Clothes);
      }
      if (Pants != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Pants);
      }
      if (Shoes != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Shoes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Eyebrow != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Eyebrow);
      }
      if (Mouth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mouth);
      }
      if (Eye != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Eye);
      }
      if (Face != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Face);
      }
      if (Hair != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Hair);
      }
      if (Glove != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Glove);
      }
      if (Clothes != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Clothes);
      }
      if (Pants != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Pants);
      }
      if (Shoes != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Shoes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Eyebrow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eyebrow);
      }
      if (Mouth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mouth);
      }
      if (Eye != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eye);
      }
      if (Face != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Face);
      }
      if (Hair != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hair);
      }
      if (Glove != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Glove);
      }
      if (Clothes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clothes);
      }
      if (Pants != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pants);
      }
      if (Shoes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Shoes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerFeature other) {
      if (other == null) {
        return;
      }
      if (other.Eyebrow != 0) {
        Eyebrow = other.Eyebrow;
      }
      if (other.Mouth != 0) {
        Mouth = other.Mouth;
      }
      if (other.Eye != 0) {
        Eye = other.Eye;
      }
      if (other.Face != 0) {
        Face = other.Face;
      }
      if (other.Hair != 0) {
        Hair = other.Hair;
      }
      if (other.Glove != 0) {
        Glove = other.Glove;
      }
      if (other.Clothes != 0) {
        Clothes = other.Clothes;
      }
      if (other.Pants != 0) {
        Pants = other.Pants;
      }
      if (other.Shoes != 0) {
        Shoes = other.Shoes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eyebrow = input.ReadInt32();
            break;
          }
          case 16: {
            Mouth = input.ReadInt32();
            break;
          }
          case 24: {
            Eye = input.ReadInt32();
            break;
          }
          case 32: {
            Face = input.ReadInt32();
            break;
          }
          case 40: {
            Hair = input.ReadInt32();
            break;
          }
          case 48: {
            Glove = input.ReadInt32();
            break;
          }
          case 56: {
            Clothes = input.ReadInt32();
            break;
          }
          case 64: {
            Pants = input.ReadInt32();
            break;
          }
          case 72: {
            Shoes = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Eyebrow = input.ReadInt32();
            break;
          }
          case 16: {
            Mouth = input.ReadInt32();
            break;
          }
          case 24: {
            Eye = input.ReadInt32();
            break;
          }
          case 32: {
            Face = input.ReadInt32();
            break;
          }
          case 40: {
            Hair = input.ReadInt32();
            break;
          }
          case 48: {
            Glove = input.ReadInt32();
            break;
          }
          case 56: {
            Clothes = input.ReadInt32();
            break;
          }
          case 64: {
            Pants = input.ReadInt32();
            break;
          }
          case 72: {
            Shoes = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NpcConversation : pb::IMessage<NpcConversation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcConversation> _parser = new pb::MessageParser<NpcConversation>(() => new NpcConversation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcConversation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcConversation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcConversation(NpcConversation other) : this() {
      id_ = other.id_;
      sentence_ = other.sentence_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcConversation Clone() {
      return new NpcConversation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sentence" field.</summary>
    public const int SentenceFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_sentence_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> sentence_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Sentence {
      get { return sentence_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcConversation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcConversation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!sentence_.Equals(other.sentence_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= sentence_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      sentence_.WriteTo(output, _repeated_sentence_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      sentence_.WriteTo(ref output, _repeated_sentence_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += sentence_.CalculateSize(_repeated_sentence_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcConversation other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      sentence_.Add(other.sentence_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            sentence_.AddEntriesFrom(input, _repeated_sentence_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            sentence_.AddEntriesFrom(ref input, _repeated_sentence_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Npc : pb::IMessage<Npc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Npc> _parser = new pb::MessageParser<Npc>(() => new Npc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Npc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Npc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Npc(Npc other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      avatar_ = other.avatar_;
      playerId_ = other.playerId_;
      icon_ = other.icon_;
      defaultConversation_ = other.defaultConversation_.Clone();
      taskNoticeType_ = other.taskNoticeType_;
      isInArea_ = other.isInArea_;
      isLock_ = other.isLock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Npc Clone() {
      return new Npc(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    private string avatar_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private string playerId_ = "";
    /// <summary>
    /// 归属玩家id(系统==0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private string icon_ = "";
    /// <summary>
    /// 对话界面 icon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_conversation" field.</summary>
    public const int DefaultConversationFieldNumber = 6;
    private static readonly pb::FieldCodec<global::MelandGame3.NpcConversation> _repeated_defaultConversation_codec
        = pb::FieldCodec.ForMessage(50, global::MelandGame3.NpcConversation.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.NpcConversation> defaultConversation_ = new pbc::RepeatedField<global::MelandGame3.NpcConversation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.NpcConversation> DefaultConversation {
      get { return defaultConversation_; }
    }

    /// <summary>Field number for the "task_notice_type" field.</summary>
    public const int TaskNoticeTypeFieldNumber = 7;
    private int taskNoticeType_;
    /// <summary>
    /// 使用 bit field 的方式表示
    /// 0 什么都没有
    /// 1 有不可交(进行中)的任务, 对应 `TaskStateAccepted`
    /// 2 有可接的任务, 对应 `TaskStatePending`
    /// 4 有可交(完成)的任务, 对应 `TaskStateCompleted`
    ///
    /// e.g
    /// 4 = 4 表示只有可交的任务
    /// 6 = 2 | 4 表示既有可接的任务也有可交的任务
    /// 7 = 1 | 2 | 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TaskNoticeType {
      get { return taskNoticeType_; }
      set {
        taskNoticeType_ = value;
      }
    }

    /// <summary>Field number for the "isInArea" field.</summary>
    public const int IsInAreaFieldNumber = 8;
    private bool isInArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInArea {
      get { return isInArea_; }
      set {
        isInArea_ = value;
      }
    }

    /// <summary>Field number for the "isLock" field.</summary>
    public const int IsLockFieldNumber = 9;
    private bool isLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLock {
      get { return isLock_; }
      set {
        isLock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Npc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Npc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Avatar != other.Avatar) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Icon != other.Icon) return false;
      if(!defaultConversation_.Equals(other.defaultConversation_)) return false;
      if (TaskNoticeType != other.TaskNoticeType) return false;
      if (IsInArea != other.IsInArea) return false;
      if (IsLock != other.IsLock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      hash ^= defaultConversation_.GetHashCode();
      if (TaskNoticeType != 0) hash ^= TaskNoticeType.GetHashCode();
      if (IsInArea != false) hash ^= IsInArea.GetHashCode();
      if (IsLock != false) hash ^= IsLock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Avatar);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      defaultConversation_.WriteTo(output, _repeated_defaultConversation_codec);
      if (TaskNoticeType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TaskNoticeType);
      }
      if (IsInArea != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsLock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Avatar);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      defaultConversation_.WriteTo(ref output, _repeated_defaultConversation_codec);
      if (TaskNoticeType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TaskNoticeType);
      }
      if (IsInArea != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsInArea);
      }
      if (IsLock != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsLock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      size += defaultConversation_.CalculateSize(_repeated_defaultConversation_codec);
      if (TaskNoticeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskNoticeType);
      }
      if (IsInArea != false) {
        size += 1 + 1;
      }
      if (IsLock != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Npc other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      defaultConversation_.Add(other.defaultConversation_);
      if (other.TaskNoticeType != 0) {
        TaskNoticeType = other.TaskNoticeType;
      }
      if (other.IsInArea != false) {
        IsInArea = other.IsInArea;
      }
      if (other.IsLock != false) {
        IsLock = other.IsLock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Avatar = input.ReadString();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 50: {
            defaultConversation_.AddEntriesFrom(input, _repeated_defaultConversation_codec);
            break;
          }
          case 56: {
            TaskNoticeType = input.ReadInt32();
            break;
          }
          case 64: {
            IsInArea = input.ReadBool();
            break;
          }
          case 72: {
            IsLock = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Avatar = input.ReadString();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 50: {
            defaultConversation_.AddEntriesFrom(ref input, _repeated_defaultConversation_codec);
            break;
          }
          case 56: {
            TaskNoticeType = input.ReadInt32();
            break;
          }
          case 64: {
            IsInArea = input.ReadBool();
            break;
          }
          case 72: {
            IsLock = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NpcLocation : pb::IMessage<NpcLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcLocation> _parser = new pb::MessageParser<NpcLocation>(() => new NpcLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcLocation(NpcLocation other) : this() {
      mapId_ = other.mapId_;
      r_ = other.r_;
      c_ = other.c_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcLocation Clone() {
      return new NpcLocation(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private string mapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MapId {
      get { return mapId_; }
      set {
        mapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 2;
    private int r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "c" field.</summary>
    public const int CFieldNumber = 3;
    private int c_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int C {
      get { return c_; }
      set {
        c_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (R != other.R) return false;
      if (C != other.C) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId.Length != 0) hash ^= MapId.GetHashCode();
      if (R != 0) hash ^= R.GetHashCode();
      if (C != 0) hash ^= C.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(R);
      }
      if (C != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(C);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(R);
      }
      if (C != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(C);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapId);
      }
      if (R != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(R);
      }
      if (C != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(C);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcLocation other) {
      if (other == null) {
        return;
      }
      if (other.MapId.Length != 0) {
        MapId = other.MapId;
      }
      if (other.R != 0) {
        R = other.R;
      }
      if (other.C != 0) {
        C = other.C;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 16: {
            R = input.ReadInt32();
            break;
          }
          case 24: {
            C = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 16: {
            R = input.ReadInt32();
            break;
          }
          case 24: {
            C = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NpcWithLocation : pb::IMessage<NpcWithLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcWithLocation> _parser = new pb::MessageParser<NpcWithLocation>(() => new NpcWithLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcWithLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcWithLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcWithLocation(NpcWithLocation other) : this() {
      npc_ = other.npc_ != null ? other.npc_.Clone() : null;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcWithLocation Clone() {
      return new NpcWithLocation(this);
    }

    /// <summary>Field number for the "npc" field.</summary>
    public const int NpcFieldNumber = 1;
    private global::MelandGame3.Npc npc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Npc Npc {
      get { return npc_; }
      set {
        npc_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::MelandGame3.NpcLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.NpcLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcWithLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcWithLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Npc, other.Npc)) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (npc_ != null) hash ^= Npc.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (npc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Npc);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (npc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Npc);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (npc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Npc);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcWithLocation other) {
      if (other == null) {
        return;
      }
      if (other.npc_ != null) {
        if (npc_ == null) {
          Npc = new global::MelandGame3.Npc();
        }
        Npc.MergeFrom(other.Npc);
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::MelandGame3.NpcLocation();
        }
        Location.MergeFrom(other.Location);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (npc_ == null) {
              Npc = new global::MelandGame3.Npc();
            }
            input.ReadMessage(Npc);
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::MelandGame3.NpcLocation();
            }
            input.ReadMessage(Location);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (npc_ == null) {
              Npc = new global::MelandGame3.Npc();
            }
            input.ReadMessage(Npc);
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::MelandGame3.NpcLocation();
            }
            input.ReadMessage(Location);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectAnchor : pb::IMessage<ObjectAnchor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectAnchor> _parser = new pb::MessageParser<ObjectAnchor>(() => new ObjectAnchor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectAnchor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAnchor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAnchor(ObjectAnchor other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAnchor Clone() {
      return new ObjectAnchor(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectAnchor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectAnchor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectAnchor other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectShape : pb::IMessage<ObjectShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectShape> _parser = new pb::MessageParser<ObjectShape>(() => new ObjectShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectShape(ObjectShape other) : this() {
      rCount_ = other.rCount_;
      cCount_ = other.cCount_;
      areaDefault_ = other.areaDefault_;
      walkdirDefault_ = other.walkdirDefault_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectShape Clone() {
      return new ObjectShape(this);
    }

    /// <summary>Field number for the "r_count" field.</summary>
    public const int RCountFieldNumber = 1;
    private int rCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RCount {
      get { return rCount_; }
      set {
        rCount_ = value;
      }
    }

    /// <summary>Field number for the "c_count" field.</summary>
    public const int CCountFieldNumber = 2;
    private int cCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CCount {
      get { return cCount_; }
      set {
        cCount_ = value;
      }
    }

    /// <summary>Field number for the "area_default" field.</summary>
    public const int AreaDefaultFieldNumber = 3;
    private int areaDefault_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AreaDefault {
      get { return areaDefault_; }
      set {
        areaDefault_ = value;
      }
    }

    /// <summary>Field number for the "walkdir_default" field.</summary>
    public const int WalkdirDefaultFieldNumber = 4;
    private int walkdirDefault_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WalkdirDefault {
      get { return walkdirDefault_; }
      set {
        walkdirDefault_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RCount != other.RCount) return false;
      if (CCount != other.CCount) return false;
      if (AreaDefault != other.AreaDefault) return false;
      if (WalkdirDefault != other.WalkdirDefault) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RCount != 0) hash ^= RCount.GetHashCode();
      if (CCount != 0) hash ^= CCount.GetHashCode();
      if (AreaDefault != 0) hash ^= AreaDefault.GetHashCode();
      if (WalkdirDefault != 0) hash ^= WalkdirDefault.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RCount);
      }
      if (CCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CCount);
      }
      if (AreaDefault != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AreaDefault);
      }
      if (WalkdirDefault != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(WalkdirDefault);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RCount);
      }
      if (CCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CCount);
      }
      if (AreaDefault != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AreaDefault);
      }
      if (WalkdirDefault != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(WalkdirDefault);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RCount);
      }
      if (CCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CCount);
      }
      if (AreaDefault != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaDefault);
      }
      if (WalkdirDefault != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WalkdirDefault);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectShape other) {
      if (other == null) {
        return;
      }
      if (other.RCount != 0) {
        RCount = other.RCount;
      }
      if (other.CCount != 0) {
        CCount = other.CCount;
      }
      if (other.AreaDefault != 0) {
        AreaDefault = other.AreaDefault;
      }
      if (other.WalkdirDefault != 0) {
        WalkdirDefault = other.WalkdirDefault;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RCount = input.ReadInt32();
            break;
          }
          case 16: {
            CCount = input.ReadInt32();
            break;
          }
          case 24: {
            AreaDefault = input.ReadInt32();
            break;
          }
          case 32: {
            WalkdirDefault = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RCount = input.ReadInt32();
            break;
          }
          case 16: {
            CCount = input.ReadInt32();
            break;
          }
          case 24: {
            AreaDefault = input.ReadInt32();
            break;
          }
          case 32: {
            WalkdirDefault = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectArea : pb::IMessage<ObjectArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectArea> _parser = new pb::MessageParser<ObjectArea>(() => new ObjectArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectArea(ObjectArea other) : this() {
      n_ = other.n_;
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectArea Clone() {
      return new ObjectArea(this);
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 1;
    private int n_;
    /// <summary>
    /// 有多少行多少列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int N {
      get { return n_; }
      set {
        n_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_value_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> value_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 二维数组扁平化之后的描述
    ///
    /// [[0, 1, 2], [3, 4, 5], [6, 7, 8]]
    /// =>
    /// value = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    /// n = 3;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (N != other.N) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (N != 0) hash ^= N.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (N != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(N);
      }
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (N != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(N);
      }
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (N != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(N);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectArea other) {
      if (other == null) {
        return;
      }
      if (other.N != 0) {
        N = other.N;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            N = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            N = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectAnimation : pb::IMessage<ObjectAnimation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectAnimation> _parser = new pb::MessageParser<ObjectAnimation>(() => new ObjectAnimation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectAnimation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAnimation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAnimation(ObjectAnimation other) : this() {
      id_ = other.id_;
      source_ = other.source_;
      triggerType_ = other.triggerType_;
      stopType_ = other.stopType_;
      priority_ = other.priority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectAnimation Clone() {
      return new ObjectAnimation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_type" field.</summary>
    public const int TriggerTypeFieldNumber = 3;
    private global::MelandGame3.ObjectAnimationTriggerType triggerType_ = global::MelandGame3.ObjectAnimationTriggerType.ObjectAnimationTriggerTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectAnimationTriggerType TriggerType {
      get { return triggerType_; }
      set {
        triggerType_ = value;
      }
    }

    /// <summary>Field number for the "stop_type" field.</summary>
    public const int StopTypeFieldNumber = 4;
    private global::MelandGame3.ObjectAnimationStopType stopType_ = global::MelandGame3.ObjectAnimationStopType.ObjectAnimationStopTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectAnimationStopType StopType {
      get { return stopType_; }
      set {
        stopType_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 5;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectAnimation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectAnimation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Source != other.Source) return false;
      if (TriggerType != other.TriggerType) return false;
      if (StopType != other.StopType) return false;
      if (Priority != other.Priority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (TriggerType != global::MelandGame3.ObjectAnimationTriggerType.ObjectAnimationTriggerTypeUnknown) hash ^= TriggerType.GetHashCode();
      if (StopType != global::MelandGame3.ObjectAnimationStopType.ObjectAnimationStopTypeUnknown) hash ^= StopType.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (TriggerType != global::MelandGame3.ObjectAnimationTriggerType.ObjectAnimationTriggerTypeUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TriggerType);
      }
      if (StopType != global::MelandGame3.ObjectAnimationStopType.ObjectAnimationStopTypeUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) StopType);
      }
      if (Priority != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (TriggerType != global::MelandGame3.ObjectAnimationTriggerType.ObjectAnimationTriggerTypeUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TriggerType);
      }
      if (StopType != global::MelandGame3.ObjectAnimationStopType.ObjectAnimationStopTypeUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) StopType);
      }
      if (Priority != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (TriggerType != global::MelandGame3.ObjectAnimationTriggerType.ObjectAnimationTriggerTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TriggerType);
      }
      if (StopType != global::MelandGame3.ObjectAnimationStopType.ObjectAnimationStopTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StopType);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectAnimation other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.TriggerType != global::MelandGame3.ObjectAnimationTriggerType.ObjectAnimationTriggerTypeUnknown) {
        TriggerType = other.TriggerType;
      }
      if (other.StopType != global::MelandGame3.ObjectAnimationStopType.ObjectAnimationStopTypeUnknown) {
        StopType = other.StopType;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
          case 24: {
            TriggerType = (global::MelandGame3.ObjectAnimationTriggerType) input.ReadEnum();
            break;
          }
          case 32: {
            StopType = (global::MelandGame3.ObjectAnimationStopType) input.ReadEnum();
            break;
          }
          case 40: {
            Priority = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
          case 24: {
            TriggerType = (global::MelandGame3.ObjectAnimationTriggerType) input.ReadEnum();
            break;
          }
          case 32: {
            StopType = (global::MelandGame3.ObjectAnimationStopType) input.ReadEnum();
            break;
          }
          case 40: {
            Priority = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectState : pb::IMessage<ObjectState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectState> _parser = new pb::MessageParser<ObjectState>(() => new ObjectState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectState(ObjectState other) : this() {
      id_ = other.id_;
      isDefault_ = other.isDefault_;
      texture_ = other.texture_;
      animation_ = other.animation_ != null ? other.animation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectState Clone() {
      return new ObjectState(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "is_default" field.</summary>
    public const int IsDefaultFieldNumber = 2;
    private bool isDefault_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDefault {
      get { return isDefault_; }
      set {
        isDefault_ = value;
      }
    }

    /// <summary>Field number for the "texture" field.</summary>
    public const int TextureFieldNumber = 3;
    private string texture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Texture {
      get { return texture_; }
      set {
        texture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "animation" field.</summary>
    public const int AnimationFieldNumber = 4;
    private global::MelandGame3.ObjectAnimation animation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectAnimation Animation {
      get { return animation_; }
      set {
        animation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsDefault != other.IsDefault) return false;
      if (Texture != other.Texture) return false;
      if (!object.Equals(Animation, other.Animation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsDefault != false) hash ^= IsDefault.GetHashCode();
      if (Texture.Length != 0) hash ^= Texture.GetHashCode();
      if (animation_ != null) hash ^= Animation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsDefault != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsDefault);
      }
      if (Texture.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Texture);
      }
      if (animation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Animation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsDefault != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsDefault);
      }
      if (Texture.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Texture);
      }
      if (animation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Animation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsDefault != false) {
        size += 1 + 1;
      }
      if (Texture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Texture);
      }
      if (animation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Animation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectState other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsDefault != false) {
        IsDefault = other.IsDefault;
      }
      if (other.Texture.Length != 0) {
        Texture = other.Texture;
      }
      if (other.animation_ != null) {
        if (animation_ == null) {
          Animation = new global::MelandGame3.ObjectAnimation();
        }
        Animation.MergeFrom(other.Animation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsDefault = input.ReadBool();
            break;
          }
          case 26: {
            Texture = input.ReadString();
            break;
          }
          case 34: {
            if (animation_ == null) {
              Animation = new global::MelandGame3.ObjectAnimation();
            }
            input.ReadMessage(Animation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsDefault = input.ReadBool();
            break;
          }
          case 26: {
            Texture = input.ReadString();
            break;
          }
          case 34: {
            if (animation_ == null) {
              Animation = new global::MelandGame3.ObjectAnimation();
            }
            input.ReadMessage(Animation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConsumableItemSettings : pb::IMessage<ConsumableItemSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConsumableItemSettings> _parser = new pb::MessageParser<ConsumableItemSettings>(() => new ConsumableItemSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsumableItemSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumableItemSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumableItemSettings(ConsumableItemSettings other) : this() {
      itemId_ = other.itemId_;
      cd_ = other.cd_;
      callMethod_ = other.callMethod_.Clone();
      args_ = other.args_.Clone();
      cdType_ = other.cdType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumableItemSettings Clone() {
      return new ConsumableItemSettings(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    /// <summary>
    /// 物品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "cd" field.</summary>
    public const int CdFieldNumber = 2;
    private int cd_;
    /// <summary>
    /// 使用cd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cd {
      get { return cd_; }
      set {
        cd_ = value;
      }
    }

    /// <summary>Field number for the "call_method" field.</summary>
    public const int CallMethodFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_callMethod_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> callMethod_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 使用时调用的方法
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> CallMethod {
      get { return callMethod_; }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_args_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> args_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 使用时调用方法的参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "cd_type" field.</summary>
    public const int CdTypeFieldNumber = 5;
    private int cdType_;
    /// <summary>
    /// cd 组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CdType {
      get { return cdType_; }
      set {
        cdType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsumableItemSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsumableItemSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Cd != other.Cd) return false;
      if(!callMethod_.Equals(other.callMethod_)) return false;
      if(!args_.Equals(other.args_)) return false;
      if (CdType != other.CdType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Cd != 0) hash ^= Cd.GetHashCode();
      hash ^= callMethod_.GetHashCode();
      hash ^= args_.GetHashCode();
      if (CdType != 0) hash ^= CdType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (Cd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cd);
      }
      callMethod_.WriteTo(output, _repeated_callMethod_codec);
      args_.WriteTo(output, _repeated_args_codec);
      if (CdType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CdType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (Cd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cd);
      }
      callMethod_.WriteTo(ref output, _repeated_callMethod_codec);
      args_.WriteTo(ref output, _repeated_args_codec);
      if (CdType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CdType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (Cd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cd);
      }
      size += callMethod_.CalculateSize(_repeated_callMethod_codec);
      size += args_.CalculateSize(_repeated_args_codec);
      if (CdType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CdType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsumableItemSettings other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Cd != 0) {
        Cd = other.Cd;
      }
      callMethod_.Add(other.callMethod_);
      args_.Add(other.args_);
      if (other.CdType != 0) {
        CdType = other.CdType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            Cd = input.ReadInt32();
            break;
          }
          case 26: {
            callMethod_.AddEntriesFrom(input, _repeated_callMethod_codec);
            break;
          }
          case 34:
          case 32: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 40: {
            CdType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            Cd = input.ReadInt32();
            break;
          }
          case 26: {
            callMethod_.AddEntriesFrom(ref input, _repeated_callMethod_codec);
            break;
          }
          case 34:
          case 32: {
            args_.AddEntriesFrom(ref input, _repeated_args_codec);
            break;
          }
          case 40: {
            CdType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectGearSettings : pb::IMessage<ObjectGearSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectGearSettings> _parser = new pb::MessageParser<ObjectGearSettings>(() => new ObjectGearSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectGearSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectGearSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectGearSettings(ObjectGearSettings other) : this() {
      cid_ = other.cid_;
      setting_ = other.setting_ != null ? other.setting_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectGearSettings Clone() {
      return new ObjectGearSettings(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "setting" field.</summary>
    public const int SettingFieldNumber = 2;
    private global::MelandGame3.GearSettings setting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.GearSettings Setting {
      get { return setting_; }
      set {
        setting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectGearSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectGearSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (!object.Equals(Setting, other.Setting)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (setting_ != null) hash ^= Setting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (setting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Setting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (setting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Setting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (setting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Setting);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectGearSettings other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.setting_ != null) {
        if (setting_ == null) {
          Setting = new global::MelandGame3.GearSettings();
        }
        Setting.MergeFrom(other.Setting);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            if (setting_ == null) {
              Setting = new global::MelandGame3.GearSettings();
            }
            input.ReadMessage(Setting);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            if (setting_ == null) {
              Setting = new global::MelandGame3.GearSettings();
            }
            input.ReadMessage(Setting);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GearSettings : pb::IMessage<GearSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GearSettings> _parser = new pb::MessageParser<GearSettings>(() => new GearSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GearSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GearSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GearSettings(GearSettings other) : this() {
      gearType_ = other.gearType_;
      durability_ = other.durability_;
      skillId_ = other.skillId_;
      hpLimitAdded_ = other.hpLimitAdded_;
      hpRecoveryAdded_ = other.hpRecoveryAdded_;
      attAdded_ = other.attAdded_;
      attSpeedAdded_ = other.attSpeedAdded_;
      defAdded_ = other.defAdded_;
      critRateAdded_ = other.critRateAdded_;
      critDmgAdded_ = other.critDmgAdded_;
      hitRateAdded_ = other.hitRateAdded_;
      missRateAdded_ = other.missRateAdded_;
      moveSpeedAdded_ = other.moveSpeedAdded_;
      repairNeed_ = other.repairNeed_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GearSettings Clone() {
      return new GearSettings(this);
    }

    /// <summary>Field number for the "gear_type" field.</summary>
    public const int GearTypeFieldNumber = 1;
    private global::MelandGame3.ObjectGearType gearType_ = global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown;
    /// <summary>
    /// 装备类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectGearType GearType {
      get { return gearType_; }
      set {
        gearType_ = value;
      }
    }

    /// <summary>Field number for the "durability" field.</summary>
    public const int DurabilityFieldNumber = 2;
    private int durability_;
    /// <summary>
    /// 耐久度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Durability {
      get { return durability_; }
      set {
        durability_ = value;
      }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 3;
    private int skillId_;
    /// <summary>
    /// 挂载技能 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "hp_limit_added" field.</summary>
    public const int HpLimitAddedFieldNumber = 4;
    private int hpLimitAdded_;
    /// <summary>
    /// HP limit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpLimitAdded {
      get { return hpLimitAdded_; }
      set {
        hpLimitAdded_ = value;
      }
    }

    /// <summary>Field number for the "hp_recovery_added" field.</summary>
    public const int HpRecoveryAddedFieldNumber = 5;
    private int hpRecoveryAdded_;
    /// <summary>
    /// HP Recovery
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpRecoveryAdded {
      get { return hpRecoveryAdded_; }
      set {
        hpRecoveryAdded_ = value;
      }
    }

    /// <summary>Field number for the "att_added" field.</summary>
    public const int AttAddedFieldNumber = 6;
    private int attAdded_;
    /// <summary>
    /// 增加普通攻击
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttAdded {
      get { return attAdded_; }
      set {
        attAdded_ = value;
      }
    }

    /// <summary>Field number for the "att_speed_added" field.</summary>
    public const int AttSpeedAddedFieldNumber = 7;
    private int attSpeedAdded_;
    /// <summary>
    /// 增加普通攻击速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttSpeedAdded {
      get { return attSpeedAdded_; }
      set {
        attSpeedAdded_ = value;
      }
    }

    /// <summary>Field number for the "def_added" field.</summary>
    public const int DefAddedFieldNumber = 8;
    private int defAdded_;
    /// <summary>
    /// 增加普通防御
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefAdded {
      get { return defAdded_; }
      set {
        defAdded_ = value;
      }
    }

    /// <summary>Field number for the "crit_rate_added" field.</summary>
    public const int CritRateAddedFieldNumber = 9;
    private int critRateAdded_;
    /// <summary>
    /// 增加暴击率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritRateAdded {
      get { return critRateAdded_; }
      set {
        critRateAdded_ = value;
      }
    }

    /// <summary>Field number for the "crit_dmg_added" field.</summary>
    public const int CritDmgAddedFieldNumber = 10;
    private int critDmgAdded_;
    /// <summary>
    /// 增加暴击伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritDmgAdded {
      get { return critDmgAdded_; }
      set {
        critDmgAdded_ = value;
      }
    }

    /// <summary>Field number for the "hit_rate_added" field.</summary>
    public const int HitRateAddedFieldNumber = 11;
    private int hitRateAdded_;
    /// <summary>
    /// 增加命中率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitRateAdded {
      get { return hitRateAdded_; }
      set {
        hitRateAdded_ = value;
      }
    }

    /// <summary>Field number for the "miss_rate_added" field.</summary>
    public const int MissRateAddedFieldNumber = 12;
    private int missRateAdded_;
    /// <summary>
    /// 增加闪避率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MissRateAdded {
      get { return missRateAdded_; }
      set {
        missRateAdded_ = value;
      }
    }

    /// <summary>Field number for the "move_speed_added" field.</summary>
    public const int MoveSpeedAddedFieldNumber = 13;
    private int moveSpeedAdded_;
    /// <summary>
    /// 移动速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MoveSpeedAdded {
      get { return moveSpeedAdded_; }
      set {
        moveSpeedAdded_ = value;
      }
    }

    /// <summary>Field number for the "repair_need" field.</summary>
    public const int RepairNeedFieldNumber = 14;
    private static readonly pb::FieldCodec<global::MelandGame3.Stuffs> _repeated_repairNeed_codec
        = pb::FieldCodec.ForMessage(114, global::MelandGame3.Stuffs.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Stuffs> repairNeed_ = new pbc::RepeatedField<global::MelandGame3.Stuffs>();
    /// <summary>
    /// 维修材料组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Stuffs> RepairNeed {
      get { return repairNeed_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GearSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GearSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GearType != other.GearType) return false;
      if (Durability != other.Durability) return false;
      if (SkillId != other.SkillId) return false;
      if (HpLimitAdded != other.HpLimitAdded) return false;
      if (HpRecoveryAdded != other.HpRecoveryAdded) return false;
      if (AttAdded != other.AttAdded) return false;
      if (AttSpeedAdded != other.AttSpeedAdded) return false;
      if (DefAdded != other.DefAdded) return false;
      if (CritRateAdded != other.CritRateAdded) return false;
      if (CritDmgAdded != other.CritDmgAdded) return false;
      if (HitRateAdded != other.HitRateAdded) return false;
      if (MissRateAdded != other.MissRateAdded) return false;
      if (MoveSpeedAdded != other.MoveSpeedAdded) return false;
      if(!repairNeed_.Equals(other.repairNeed_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) hash ^= GearType.GetHashCode();
      if (Durability != 0) hash ^= Durability.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (HpLimitAdded != 0) hash ^= HpLimitAdded.GetHashCode();
      if (HpRecoveryAdded != 0) hash ^= HpRecoveryAdded.GetHashCode();
      if (AttAdded != 0) hash ^= AttAdded.GetHashCode();
      if (AttSpeedAdded != 0) hash ^= AttSpeedAdded.GetHashCode();
      if (DefAdded != 0) hash ^= DefAdded.GetHashCode();
      if (CritRateAdded != 0) hash ^= CritRateAdded.GetHashCode();
      if (CritDmgAdded != 0) hash ^= CritDmgAdded.GetHashCode();
      if (HitRateAdded != 0) hash ^= HitRateAdded.GetHashCode();
      if (MissRateAdded != 0) hash ^= MissRateAdded.GetHashCode();
      if (MoveSpeedAdded != 0) hash ^= MoveSpeedAdded.GetHashCode();
      hash ^= repairNeed_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GearType);
      }
      if (Durability != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Durability);
      }
      if (SkillId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SkillId);
      }
      if (HpLimitAdded != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HpLimitAdded);
      }
      if (HpRecoveryAdded != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HpRecoveryAdded);
      }
      if (AttAdded != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttAdded);
      }
      if (AttSpeedAdded != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AttSpeedAdded);
      }
      if (DefAdded != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefAdded);
      }
      if (CritRateAdded != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritRateAdded);
      }
      if (CritDmgAdded != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CritDmgAdded);
      }
      if (HitRateAdded != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(HitRateAdded);
      }
      if (MissRateAdded != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MissRateAdded);
      }
      if (MoveSpeedAdded != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MoveSpeedAdded);
      }
      repairNeed_.WriteTo(output, _repeated_repairNeed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GearType);
      }
      if (Durability != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Durability);
      }
      if (SkillId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SkillId);
      }
      if (HpLimitAdded != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HpLimitAdded);
      }
      if (HpRecoveryAdded != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HpRecoveryAdded);
      }
      if (AttAdded != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttAdded);
      }
      if (AttSpeedAdded != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AttSpeedAdded);
      }
      if (DefAdded != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefAdded);
      }
      if (CritRateAdded != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritRateAdded);
      }
      if (CritDmgAdded != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CritDmgAdded);
      }
      if (HitRateAdded != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(HitRateAdded);
      }
      if (MissRateAdded != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MissRateAdded);
      }
      if (MoveSpeedAdded != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MoveSpeedAdded);
      }
      repairNeed_.WriteTo(ref output, _repeated_repairNeed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GearType);
      }
      if (Durability != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Durability);
      }
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (HpLimitAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpLimitAdded);
      }
      if (HpRecoveryAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpRecoveryAdded);
      }
      if (AttAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttAdded);
      }
      if (AttSpeedAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttSpeedAdded);
      }
      if (DefAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefAdded);
      }
      if (CritRateAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritRateAdded);
      }
      if (CritDmgAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritDmgAdded);
      }
      if (HitRateAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitRateAdded);
      }
      if (MissRateAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissRateAdded);
      }
      if (MoveSpeedAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveSpeedAdded);
      }
      size += repairNeed_.CalculateSize(_repeated_repairNeed_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GearSettings other) {
      if (other == null) {
        return;
      }
      if (other.GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) {
        GearType = other.GearType;
      }
      if (other.Durability != 0) {
        Durability = other.Durability;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.HpLimitAdded != 0) {
        HpLimitAdded = other.HpLimitAdded;
      }
      if (other.HpRecoveryAdded != 0) {
        HpRecoveryAdded = other.HpRecoveryAdded;
      }
      if (other.AttAdded != 0) {
        AttAdded = other.AttAdded;
      }
      if (other.AttSpeedAdded != 0) {
        AttSpeedAdded = other.AttSpeedAdded;
      }
      if (other.DefAdded != 0) {
        DefAdded = other.DefAdded;
      }
      if (other.CritRateAdded != 0) {
        CritRateAdded = other.CritRateAdded;
      }
      if (other.CritDmgAdded != 0) {
        CritDmgAdded = other.CritDmgAdded;
      }
      if (other.HitRateAdded != 0) {
        HitRateAdded = other.HitRateAdded;
      }
      if (other.MissRateAdded != 0) {
        MissRateAdded = other.MissRateAdded;
      }
      if (other.MoveSpeedAdded != 0) {
        MoveSpeedAdded = other.MoveSpeedAdded;
      }
      repairNeed_.Add(other.repairNeed_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GearType = (global::MelandGame3.ObjectGearType) input.ReadEnum();
            break;
          }
          case 16: {
            Durability = input.ReadInt32();
            break;
          }
          case 24: {
            SkillId = input.ReadInt32();
            break;
          }
          case 32: {
            HpLimitAdded = input.ReadInt32();
            break;
          }
          case 40: {
            HpRecoveryAdded = input.ReadInt32();
            break;
          }
          case 48: {
            AttAdded = input.ReadInt32();
            break;
          }
          case 56: {
            AttSpeedAdded = input.ReadInt32();
            break;
          }
          case 64: {
            DefAdded = input.ReadInt32();
            break;
          }
          case 72: {
            CritRateAdded = input.ReadInt32();
            break;
          }
          case 80: {
            CritDmgAdded = input.ReadInt32();
            break;
          }
          case 88: {
            HitRateAdded = input.ReadInt32();
            break;
          }
          case 96: {
            MissRateAdded = input.ReadInt32();
            break;
          }
          case 104: {
            MoveSpeedAdded = input.ReadInt32();
            break;
          }
          case 114: {
            repairNeed_.AddEntriesFrom(input, _repeated_repairNeed_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GearType = (global::MelandGame3.ObjectGearType) input.ReadEnum();
            break;
          }
          case 16: {
            Durability = input.ReadInt32();
            break;
          }
          case 24: {
            SkillId = input.ReadInt32();
            break;
          }
          case 32: {
            HpLimitAdded = input.ReadInt32();
            break;
          }
          case 40: {
            HpRecoveryAdded = input.ReadInt32();
            break;
          }
          case 48: {
            AttAdded = input.ReadInt32();
            break;
          }
          case 56: {
            AttSpeedAdded = input.ReadInt32();
            break;
          }
          case 64: {
            DefAdded = input.ReadInt32();
            break;
          }
          case 72: {
            CritRateAdded = input.ReadInt32();
            break;
          }
          case 80: {
            CritDmgAdded = input.ReadInt32();
            break;
          }
          case 88: {
            HitRateAdded = input.ReadInt32();
            break;
          }
          case 96: {
            MissRateAdded = input.ReadInt32();
            break;
          }
          case 104: {
            MoveSpeedAdded = input.ReadInt32();
            break;
          }
          case 114: {
            repairNeed_.AddEntriesFrom(ref input, _repeated_repairNeed_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 实体场景作用力
  /// </summary>
  public sealed partial class SceneForceSetting : pb::IMessage<SceneForceSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SceneForceSetting> _parser = new pb::MessageParser<SceneForceSetting>(() => new SceneForceSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SceneForceSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneForceSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneForceSetting(SceneForceSetting other) : this() {
      cid_ = other.cid_;
      desc_ = other.desc_;
      force_ = other.force_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneForceSetting Clone() {
      return new SceneForceSetting(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 2;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "force" field.</summary>
    public const int ForceFieldNumber = 3;
    private int force_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Force {
      get { return force_; }
      set {
        force_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private global::MelandGame3.VectorXY dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SceneForceSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SceneForceSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (Desc != other.Desc) return false;
      if (Force != other.Force) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Force != 0) hash ^= Force.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (Force != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Force);
      }
      if (dir_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (Force != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Force);
      }
      if (dir_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Force != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Force);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SceneForceSetting other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Force != 0) {
        Force = other.Force;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.VectorXY();
        }
        Dir.MergeFrom(other.Dir);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 24: {
            Force = input.ReadInt32();
            break;
          }
          case 34: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 24: {
            Force = input.ReadInt32();
            break;
          }
          case 34: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectSettings : pb::IMessage<ObjectSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectSettings> _parser = new pb::MessageParser<ObjectSettings>(() => new ObjectSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectSettings(ObjectSettings other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      subType_ = other.subType_;
      name_ = other.name_;
      description_ = other.description_;
      texture_ = other.texture_.Clone();
      tileset_ = other.tileset_;
      blockType_ = other.blockType_;
      anchor_ = other.anchor_ != null ? other.anchor_.Clone() : null;
      area_ = other.area_ != null ? other.area_.Clone() : null;
      mirror_ = other.mirror_;
      stateId_ = other.stateId_;
      states_ = other.states_.Clone();
      preArticleType_ = other.preArticleType_.Clone();
      backpackItemLimit_ = other.backpackItemLimit_;
      quality_ = other.quality_;
      canTrade_ = other.canTrade_;
      canSell_ = other.canSell_;
      canDrop_ = other.canDrop_;
      gearType_ = other.gearType_;
      gearAvatar_ = other.gearAvatar_;
      buildable_ = other.buildable_;
      materialType_ = other.materialType_;
      materialHpLimit_ = other.materialHpLimit_;
      materialFallingRecipetId_ = other.materialFallingRecipetId_;
      buildHeight_ = other.buildHeight_;
      objectHeight_ = other.objectHeight_;
      walkDir_ = other.walkDir_ != null ? other.walkDir_.Clone() : null;
      gearSettings_ = other.gearSettings_ != null ? other.gearSettings_.Clone() : null;
      walkLowHeight_ = other.walkLowHeight_;
      walkHighHeight_ = other.walkHighHeight_;
      enemyType_ = other.enemyType_;
      objectDef_ = other.objectDef_;
      dropExp_ = other.dropExp_;
      initObjectQuantity_ = other.initObjectQuantity_;
      extraConfig_ = other.extraConfig_;
      highEdge_ = other.highEdge_;
      useDrop_ = other.useDrop_;
      isFuel_ = other.isFuel_;
      terrainType_ = other.terrainType_;
      useLv_ = other.useLv_;
      camp_ = other.camp_;
      life_ = other.life_;
      bodyRadius_ = other.bodyRadius_;
      userType_ = other.userType_;
      attWidget_ = other.attWidget_;
      widgets_ = other.widgets_.Clone();
      frames_ = other.frames_.Clone();
      codeLib_ = other.codeLib_;
      isTerrain_ = other.isTerrain_;
      anims_ = other.anims_ != null ? other.anims_.Clone() : null;
      isItem_ = other.isItem_;
      defDropId_ = other.defDropId_;
      binding_ = other.binding_;
      rectBuildHigh_ = other.rectBuildHigh_;
      rectWalkLow_ = other.rectWalkLow_;
      rectWalkHigh_ = other.rectWalkHigh_;
      rectTexture_ = other.rectTexture_.Clone();
      entityPreload_ = other.entityPreload_ != null ? other.entityPreload_.Clone() : null;
      sceneForce_ = other.sceneForce_ != null ? other.sceneForce_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectSettings Clone() {
      return new ObjectSettings(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::MelandGame3.ObjectType type_ = global::MelandGame3.ObjectType.ObjectTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "sub_type" field.</summary>
    public const int SubTypeFieldNumber = 3;
    private int subType_;
    /// <summary>
    /// 物品子类型  根据 type 有不同的子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SubType {
      get { return subType_; }
      set {
        subType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "texture" field.</summary>
    public const int TextureFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_texture_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> texture_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Texture {
      get { return texture_; }
    }

    /// <summary>Field number for the "tileset" field.</summary>
    public const int TilesetFieldNumber = 7;
    private string tileset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tileset {
      get { return tileset_; }
      set {
        tileset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "block_type" field.</summary>
    public const int BlockTypeFieldNumber = 8;
    private global::MelandGame3.ObjectBlockType blockType_ = global::MelandGame3.ObjectBlockType.ObjectBlockTypeFree;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectBlockType BlockType {
      get { return blockType_; }
      set {
        blockType_ = value;
      }
    }

    /// <summary>Field number for the "anchor" field.</summary>
    public const int AnchorFieldNumber = 9;
    private global::MelandGame3.ObjectAnchor anchor_;
    /// <summary>
    /// 物品显示锚点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectAnchor Anchor {
      get { return anchor_; }
      set {
        anchor_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 10;
    private global::MelandGame3.ObjectArea area_;
    /// <summary>
    /// 物品区域描述采用以下格式：
    /// 对于每个格子中每条边的摆放，由 0b0000 来决定，整型数值代表的是边的占用情况，例子：
    ///   1  /\  8
    ///     /  \
    ///     \  /
    ///   2  \/  4
    /// - 0 -> 没有占任何边
    /// - 1 -> 占左上的边
    /// - 3 -> 占左上、左下的边
    /// - 12 -> 占右上、右下的边
    /// - 15 -> 占所有的边
    /// 对于一组格子的占用情况，使用矩阵来进行描述，例子：
    ///            /\ (0, 0)
    ///           /  \
    ///  (1, 0)  /\  /\  (0, 1)        | (0, 0), (0, 1) |
    ///         /  \/  \           =>  | (1, 0), (1, 1) |
    ///         \  /\  /
    ///          \/  \/
    ///           \  / (1, 1)
    ///            \/
    /// - [[15, 15], [0, 15]]：表示 (0, 0) / (0, 1) / (1, 1) 占用情况为 15,
    ///   (1, 0) 占用情况为 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectArea Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 11;
    private bool mirror_;
    /// <summary>
    /// 是否为镜像摆放
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "state_id" field.</summary>
    public const int StateIdFieldNumber = 12;
    private int stateId_;
    /// <summary>
    /// 当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 13;
    private static readonly pb::FieldCodec<global::MelandGame3.ObjectState> _repeated_states_codec
        = pb::FieldCodec.ForMessage(106, global::MelandGame3.ObjectState.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.ObjectState> states_ = new pbc::RepeatedField<global::MelandGame3.ObjectState>();
    /// <summary>
    /// 物品状态定义
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.ObjectState> States {
      get { return states_; }
    }

    /// <summary>Field number for the "pre_article_type" field.</summary>
    public const int PreArticleTypeFieldNumber = 14;
    private static readonly pb::FieldCodec<global::MelandGame3.ObjectType> _repeated_preArticleType_codec
        = pb::FieldCodec.ForEnum(114, x => (int) x, x => (global::MelandGame3.ObjectType) x);
    private readonly pbc::RepeatedField<global::MelandGame3.ObjectType> preArticleType_ = new pbc::RepeatedField<global::MelandGame3.ObjectType>();
    /// <summary>
    /// 前置物件类型列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.ObjectType> PreArticleType {
      get { return preArticleType_; }
    }

    /// <summary>Field number for the "backpack_item_limit" field.</summary>
    public const int BackpackItemLimitFieldNumber = 15;
    private int backpackItemLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BackpackItemLimit {
      get { return backpackItemLimit_; }
      set {
        backpackItemLimit_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 16;
    private global::MelandGame3.ObjectQuality quality_ = global::MelandGame3.ObjectQuality.ObjectQualityUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectQuality Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "can_trade" field.</summary>
    public const int CanTradeFieldNumber = 17;
    private bool canTrade_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanTrade {
      get { return canTrade_; }
      set {
        canTrade_ = value;
      }
    }

    /// <summary>Field number for the "can_sell" field.</summary>
    public const int CanSellFieldNumber = 18;
    private bool canSell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanSell {
      get { return canSell_; }
      set {
        canSell_ = value;
      }
    }

    /// <summary>Field number for the "can_drop" field.</summary>
    public const int CanDropFieldNumber = 19;
    private bool canDrop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanDrop {
      get { return canDrop_; }
      set {
        canDrop_ = value;
      }
    }

    /// <summary>Field number for the "gear_type" field.</summary>
    public const int GearTypeFieldNumber = 20;
    private global::MelandGame3.ObjectGearType gearType_ = global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectGearType GearType {
      get { return gearType_; }
      set {
        gearType_ = value;
      }
    }

    /// <summary>Field number for the "gear_avatar" field.</summary>
    public const int GearAvatarFieldNumber = 21;
    private string gearAvatar_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GearAvatar {
      get { return gearAvatar_; }
      set {
        gearAvatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buildable" field.</summary>
    public const int BuildableFieldNumber = 24;
    private global::MelandGame3.ObjectBuildableType buildable_ = global::MelandGame3.ObjectBuildableType.ObjectBuildableTypeUnbuildable;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectBuildableType Buildable {
      get { return buildable_; }
      set {
        buildable_ = value;
      }
    }

    /// <summary>Field number for the "material_type" field.</summary>
    public const int MaterialTypeFieldNumber = 25;
    private global::MelandGame3.MaterialType materialType_ = global::MelandGame3.MaterialType.MaterialTypeUnknown;
    /// <summary>
    /// material
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MaterialType MaterialType {
      get { return materialType_; }
      set {
        materialType_ = value;
      }
    }

    /// <summary>Field number for the "material_hp_limit" field.</summary>
    public const int MaterialHpLimitFieldNumber = 26;
    private int materialHpLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaterialHpLimit {
      get { return materialHpLimit_; }
      set {
        materialHpLimit_ = value;
      }
    }

    /// <summary>Field number for the "material_falling_recipet_id" field.</summary>
    public const int MaterialFallingRecipetIdFieldNumber = 27;
    private int materialFallingRecipetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaterialFallingRecipetId {
      get { return materialFallingRecipetId_; }
      set {
        materialFallingRecipetId_ = value;
      }
    }

    /// <summary>Field number for the "build_height" field.</summary>
    public const int BuildHeightFieldNumber = 28;
    private int buildHeight_;
    /// <summary>
    /// 建造高度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildHeight {
      get { return buildHeight_; }
      set {
        buildHeight_ = value;
      }
    }

    /// <summary>Field number for the "object_height" field.</summary>
    public const int ObjectHeightFieldNumber = 29;
    private int objectHeight_;
    /// <summary>
    /// 物品高度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ObjectHeight {
      get { return objectHeight_; }
      set {
        objectHeight_ = value;
      }
    }

    /// <summary>Field number for the "walk_dir" field.</summary>
    public const int WalkDirFieldNumber = 30;
    private global::MelandGame3.ObjectArea walkDir_;
    /// <summary>
    /// 物品行走方向定义
    ///
    /// 对于每个格子中每条边的通行（从格子内到格子外），由 0b0000 来决定，整型数值代表的是边的通行情况，例子：
    ///
    ///   1  /\  8
    ///     /  \
    ///     \  /
    ///   2  \/  4
    ///
    /// - 0 -> 不能从格子走出去
    /// - 1 -> 可以从左上走出去
    /// - 3 -> 可以从左上、左下走出去
    /// - 12 -> 可以从右上、右下走出去
    /// - 15 -> 可以从所有边走出去
    ///
    /// 对于一组格子的行走设置情况，使用矩阵来进行描述，例子：
    ///
    ///            /\ (0, 0)
    ///           /  \
    ///  (1, 0)  /\  /\  (0, 1)        | (0, 0), (0, 1) |
    ///         /  \/  \           =>  | (1, 0), (1, 1) |
    ///         \  /\  /
    ///          \/  \/
    ///           \  / (1, 1)
    ///            \/
    /// - [[15, 15], [0, 15]]： 表示 (0, 0) / (0, 1) / (1, 1) 行走设置为 15, (1, 0) 行走设置为 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectArea WalkDir {
      get { return walkDir_; }
      set {
        walkDir_ = value;
      }
    }

    /// <summary>Field number for the "gear_settings" field.</summary>
    public const int GearSettingsFieldNumber = 31;
    private global::MelandGame3.GearSettings gearSettings_;
    /// <summary>
    /// 装备配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.GearSettings GearSettings {
      get { return gearSettings_; }
      set {
        gearSettings_ = value;
      }
    }

    /// <summary>Field number for the "walk_low_height" field.</summary>
    public const int WalkLowHeightFieldNumber = 32;
    private int walkLowHeight_;
    /// <summary>
    /// 行走矮边高度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WalkLowHeight {
      get { return walkLowHeight_; }
      set {
        walkLowHeight_ = value;
      }
    }

    /// <summary>Field number for the "walk_high_height" field.</summary>
    public const int WalkHighHeightFieldNumber = 33;
    private int walkHighHeight_;
    /// <summary>
    /// 行走高边高度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WalkHighHeight {
      get { return walkHighHeight_; }
      set {
        walkHighHeight_ = value;
      }
    }

    /// <summary>Field number for the "enemy_type" field.</summary>
    public const int EnemyTypeFieldNumber = 34;
    private global::MelandGame3.EnemyType enemyType_ = global::MelandGame3.EnemyType.EnemyTypeUnattackable;
    /// <summary>
    /// 生物类型(用于标示技能可攻击的具体生物)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EnemyType EnemyType {
      get { return enemyType_; }
      set {
        enemyType_ = value;
      }
    }

    /// <summary>Field number for the "object_def" field.</summary>
    public const int ObjectDefFieldNumber = 35;
    private int objectDef_;
    /// <summary>
    /// 地图object的防御
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ObjectDef {
      get { return objectDef_; }
      set {
        objectDef_ = value;
      }
    }

    /// <summary>Field number for the "drop_exp" field.</summary>
    public const int DropExpFieldNumber = 36;
    private int dropExp_;
    /// <summary>
    /// 死亡攻击者获得经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DropExp {
      get { return dropExp_; }
      set {
        dropExp_ = value;
      }
    }

    /// <summary>Field number for the "init_object_quantity" field.</summary>
    public const int InitObjectQuantityFieldNumber = 37;
    private int initObjectQuantity_;
    /// <summary>
    /// 出生时填充背包默认给的数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InitObjectQuantity {
      get { return initObjectQuantity_; }
      set {
        initObjectQuantity_ = value;
      }
    }

    /// <summary>Field number for the "extra_config" field.</summary>
    public const int ExtraConfigFieldNumber = 38;
    private string extraConfig_ = "";
    /// <summary>
    /// 扩展配置，json
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExtraConfig {
      get { return extraConfig_; }
      set {
        extraConfig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "high_edge" field.</summary>
    public const int HighEdgeFieldNumber = 39;
    private int highEdge_;
    /// <summary>
    /// 物件高边
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HighEdge {
      get { return highEdge_; }
      set {
        highEdge_ = value;
      }
    }

    /// <summary>Field number for the "use_drop" field.</summary>
    public const int UseDropFieldNumber = 40;
    private int useDrop_;
    /// <summary>
    /// 使用后掉落(掉落配方id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UseDrop {
      get { return useDrop_; }
      set {
        useDrop_ = value;
      }
    }

    /// <summary>Field number for the "is_fuel" field.</summary>
    public const int IsFuelFieldNumber = 41;
    private bool isFuel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFuel {
      get { return isFuel_; }
      set {
        isFuel_ = value;
      }
    }

    /// <summary>Field number for the "terrain_type" field.</summary>
    public const int TerrainTypeFieldNumber = 42;
    private global::MelandGame3.TerrainType terrainType_ = global::MelandGame3.TerrainType.TerrainNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.TerrainType TerrainType {
      get { return terrainType_; }
      set {
        terrainType_ = value;
      }
    }

    /// <summary>Field number for the "use_lv" field.</summary>
    public const int UseLvFieldNumber = 43;
    private int useLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UseLv {
      get { return useLv_; }
      set {
        useLv_ = value;
      }
    }

    /// <summary>Field number for the "camp" field.</summary>
    public const int CampFieldNumber = 44;
    private global::MelandGame3.Camp camp_ = global::MelandGame3.Camp.CampNeutral;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Camp Camp {
      get { return camp_; }
      set {
        camp_ = value;
      }
    }

    /// <summary>Field number for the "life" field.</summary>
    public const int LifeFieldNumber = 45;
    private int life_;
    /// <summary>
    ///生存周期，只对玩家合成的有效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Life {
      get { return life_; }
      set {
        life_ = value;
      }
    }

    /// <summary>Field number for the "body_radius" field.</summary>
    public const int BodyRadiusFieldNumber = 46;
    private int bodyRadius_;
    /// <summary>
    /// 身体半径(像素)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BodyRadius {
      get { return bodyRadius_; }
      set {
        bodyRadius_ = value;
      }
    }

    /// <summary>Field number for the "user_type" field.</summary>
    public const int UserTypeFieldNumber = 47;
    private global::MelandGame3.UserType userType_ = global::MelandGame3.UserType.UserTypeUnknown;
    /// <summary>
    /// 使用者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.UserType UserType {
      get { return userType_; }
      set {
        userType_ = value;
      }
    }

    /// <summary>Field number for the "attWidget" field.</summary>
    public const int AttWidgetFieldNumber = 48;
    private int attWidget_;
    /// <summary>
    ///属性控件Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttWidget {
      get { return attWidget_; }
      set {
        attWidget_ = value;
      }
    }

    /// <summary>Field number for the "widgets" field.</summary>
    public const int WidgetsFieldNumber = 49;
    private static readonly pb::FieldCodec<global::MelandGame3.Widget> _repeated_widgets_codec
        = pb::FieldCodec.ForMessage(394, global::MelandGame3.Widget.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Widget> widgets_ = new pbc::RepeatedField<global::MelandGame3.Widget>();
    /// <summary>
    /// 控件配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Widget> Widgets {
      get { return widgets_; }
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 50;
    private static readonly pb::FieldCodec<int> _repeated_frames_codec
        = pb::FieldCodec.ForInt32(402);
    private readonly pbc::RepeatedField<int> frames_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关键帧
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Frames {
      get { return frames_; }
    }

    /// <summary>Field number for the "code_lib" field.</summary>
    public const int CodeLibFieldNumber = 51;
    private int codeLib_;
    /// <summary>
    ///可用代码块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CodeLib {
      get { return codeLib_; }
      set {
        codeLib_ = value;
      }
    }

    /// <summary>Field number for the "is_terrain" field.</summary>
    public const int IsTerrainFieldNumber = 52;
    private bool isTerrain_;
    /// <summary>
    ///是否地块
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTerrain {
      get { return isTerrain_; }
      set {
        isTerrain_ = value;
      }
    }

    /// <summary>Field number for the "anims" field.</summary>
    public const int AnimsFieldNumber = 53;
    private global::MelandGame3.EntityAnimations anims_;
    /// <summary>
    /// 动画
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAnimations Anims {
      get { return anims_; }
      set {
        anims_ = value;
      }
    }

    /// <summary>Field number for the "is_item" field.</summary>
    public const int IsItemFieldNumber = 54;
    private bool isItem_;
    /// <summary>
    /// 是否道具(配置数据在item.xlsx中的都是道具)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsItem {
      get { return isItem_; }
      set {
        isItem_ = value;
      }
    }

    /// <summary>Field number for the "def_drop_id" field.</summary>
    public const int DefDropIdFieldNumber = 55;
    private int defDropId_;
    /// <summary>
    /// 默认掉落配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefDropId {
      get { return defDropId_; }
      set {
        defDropId_ = value;
      }
    }

    /// <summary>Field number for the "binding" field.</summary>
    public const int BindingFieldNumber = 56;
    private int binding_;
    /// <summary>
    /// 绑定类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Binding {
      get { return binding_; }
      set {
        binding_ = value;
      }
    }

    /// <summary>Field number for the "rect_build_high" field.</summary>
    public const int RectBuildHighFieldNumber = 57;
    private int rectBuildHigh_;
    /// <summary>
    /// 正视角地图建造高度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RectBuildHigh {
      get { return rectBuildHigh_; }
      set {
        rectBuildHigh_ = value;
      }
    }

    /// <summary>Field number for the "rect_walk_low" field.</summary>
    public const int RectWalkLowFieldNumber = 58;
    private int rectWalkLow_;
    /// <summary>
    /// 正视角地图行走矮边高
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RectWalkLow {
      get { return rectWalkLow_; }
      set {
        rectWalkLow_ = value;
      }
    }

    /// <summary>Field number for the "rect_walk_high" field.</summary>
    public const int RectWalkHighFieldNumber = 59;
    private int rectWalkHigh_;
    /// <summary>
    /// 正视角地图行走高边高
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RectWalkHigh {
      get { return rectWalkHigh_; }
      set {
        rectWalkHigh_ = value;
      }
    }

    /// <summary>Field number for the "rect_texture" field.</summary>
    public const int RectTextureFieldNumber = 60;
    private static readonly pb::FieldCodec<string> _repeated_rectTexture_codec
        = pb::FieldCodec.ForString(482);
    private readonly pbc::RepeatedField<string> rectTexture_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 正视角地图纹理
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> RectTexture {
      get { return rectTexture_; }
    }

    /// <summary>Field number for the "entity_preload" field.</summary>
    public const int EntityPreloadFieldNumber = 61;
    private global::MelandGame3.EntityPreload entityPreload_;
    /// <summary>
    /// 实体预制数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityPreload EntityPreload {
      get { return entityPreload_; }
      set {
        entityPreload_ = value;
      }
    }

    /// <summary>Field number for the "scene_force" field.</summary>
    public const int SceneForceFieldNumber = 62;
    private global::MelandGame3.SceneForceSetting sceneForce_;
    /// <summary>
    /// 实体场景作用力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.SceneForceSetting SceneForce {
      get { return sceneForce_; }
      set {
        sceneForce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (SubType != other.SubType) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if(!texture_.Equals(other.texture_)) return false;
      if (Tileset != other.Tileset) return false;
      if (BlockType != other.BlockType) return false;
      if (!object.Equals(Anchor, other.Anchor)) return false;
      if (!object.Equals(Area, other.Area)) return false;
      if (Mirror != other.Mirror) return false;
      if (StateId != other.StateId) return false;
      if(!states_.Equals(other.states_)) return false;
      if(!preArticleType_.Equals(other.preArticleType_)) return false;
      if (BackpackItemLimit != other.BackpackItemLimit) return false;
      if (Quality != other.Quality) return false;
      if (CanTrade != other.CanTrade) return false;
      if (CanSell != other.CanSell) return false;
      if (CanDrop != other.CanDrop) return false;
      if (GearType != other.GearType) return false;
      if (GearAvatar != other.GearAvatar) return false;
      if (Buildable != other.Buildable) return false;
      if (MaterialType != other.MaterialType) return false;
      if (MaterialHpLimit != other.MaterialHpLimit) return false;
      if (MaterialFallingRecipetId != other.MaterialFallingRecipetId) return false;
      if (BuildHeight != other.BuildHeight) return false;
      if (ObjectHeight != other.ObjectHeight) return false;
      if (!object.Equals(WalkDir, other.WalkDir)) return false;
      if (!object.Equals(GearSettings, other.GearSettings)) return false;
      if (WalkLowHeight != other.WalkLowHeight) return false;
      if (WalkHighHeight != other.WalkHighHeight) return false;
      if (EnemyType != other.EnemyType) return false;
      if (ObjectDef != other.ObjectDef) return false;
      if (DropExp != other.DropExp) return false;
      if (InitObjectQuantity != other.InitObjectQuantity) return false;
      if (ExtraConfig != other.ExtraConfig) return false;
      if (HighEdge != other.HighEdge) return false;
      if (UseDrop != other.UseDrop) return false;
      if (IsFuel != other.IsFuel) return false;
      if (TerrainType != other.TerrainType) return false;
      if (UseLv != other.UseLv) return false;
      if (Camp != other.Camp) return false;
      if (Life != other.Life) return false;
      if (BodyRadius != other.BodyRadius) return false;
      if (UserType != other.UserType) return false;
      if (AttWidget != other.AttWidget) return false;
      if(!widgets_.Equals(other.widgets_)) return false;
      if(!frames_.Equals(other.frames_)) return false;
      if (CodeLib != other.CodeLib) return false;
      if (IsTerrain != other.IsTerrain) return false;
      if (!object.Equals(Anims, other.Anims)) return false;
      if (IsItem != other.IsItem) return false;
      if (DefDropId != other.DefDropId) return false;
      if (Binding != other.Binding) return false;
      if (RectBuildHigh != other.RectBuildHigh) return false;
      if (RectWalkLow != other.RectWalkLow) return false;
      if (RectWalkHigh != other.RectWalkHigh) return false;
      if(!rectTexture_.Equals(other.rectTexture_)) return false;
      if (!object.Equals(EntityPreload, other.EntityPreload)) return false;
      if (!object.Equals(SceneForce, other.SceneForce)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) hash ^= Type.GetHashCode();
      if (SubType != 0) hash ^= SubType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= texture_.GetHashCode();
      if (Tileset.Length != 0) hash ^= Tileset.GetHashCode();
      if (BlockType != global::MelandGame3.ObjectBlockType.ObjectBlockTypeFree) hash ^= BlockType.GetHashCode();
      if (anchor_ != null) hash ^= Anchor.GetHashCode();
      if (area_ != null) hash ^= Area.GetHashCode();
      if (Mirror != false) hash ^= Mirror.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      hash ^= states_.GetHashCode();
      hash ^= preArticleType_.GetHashCode();
      if (BackpackItemLimit != 0) hash ^= BackpackItemLimit.GetHashCode();
      if (Quality != global::MelandGame3.ObjectQuality.ObjectQualityUnknown) hash ^= Quality.GetHashCode();
      if (CanTrade != false) hash ^= CanTrade.GetHashCode();
      if (CanSell != false) hash ^= CanSell.GetHashCode();
      if (CanDrop != false) hash ^= CanDrop.GetHashCode();
      if (GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) hash ^= GearType.GetHashCode();
      if (GearAvatar.Length != 0) hash ^= GearAvatar.GetHashCode();
      if (Buildable != global::MelandGame3.ObjectBuildableType.ObjectBuildableTypeUnbuildable) hash ^= Buildable.GetHashCode();
      if (MaterialType != global::MelandGame3.MaterialType.MaterialTypeUnknown) hash ^= MaterialType.GetHashCode();
      if (MaterialHpLimit != 0) hash ^= MaterialHpLimit.GetHashCode();
      if (MaterialFallingRecipetId != 0) hash ^= MaterialFallingRecipetId.GetHashCode();
      if (BuildHeight != 0) hash ^= BuildHeight.GetHashCode();
      if (ObjectHeight != 0) hash ^= ObjectHeight.GetHashCode();
      if (walkDir_ != null) hash ^= WalkDir.GetHashCode();
      if (gearSettings_ != null) hash ^= GearSettings.GetHashCode();
      if (WalkLowHeight != 0) hash ^= WalkLowHeight.GetHashCode();
      if (WalkHighHeight != 0) hash ^= WalkHighHeight.GetHashCode();
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) hash ^= EnemyType.GetHashCode();
      if (ObjectDef != 0) hash ^= ObjectDef.GetHashCode();
      if (DropExp != 0) hash ^= DropExp.GetHashCode();
      if (InitObjectQuantity != 0) hash ^= InitObjectQuantity.GetHashCode();
      if (ExtraConfig.Length != 0) hash ^= ExtraConfig.GetHashCode();
      if (HighEdge != 0) hash ^= HighEdge.GetHashCode();
      if (UseDrop != 0) hash ^= UseDrop.GetHashCode();
      if (IsFuel != false) hash ^= IsFuel.GetHashCode();
      if (TerrainType != global::MelandGame3.TerrainType.TerrainNone) hash ^= TerrainType.GetHashCode();
      if (UseLv != 0) hash ^= UseLv.GetHashCode();
      if (Camp != global::MelandGame3.Camp.CampNeutral) hash ^= Camp.GetHashCode();
      if (Life != 0) hash ^= Life.GetHashCode();
      if (BodyRadius != 0) hash ^= BodyRadius.GetHashCode();
      if (UserType != global::MelandGame3.UserType.UserTypeUnknown) hash ^= UserType.GetHashCode();
      if (AttWidget != 0) hash ^= AttWidget.GetHashCode();
      hash ^= widgets_.GetHashCode();
      hash ^= frames_.GetHashCode();
      if (CodeLib != 0) hash ^= CodeLib.GetHashCode();
      if (IsTerrain != false) hash ^= IsTerrain.GetHashCode();
      if (anims_ != null) hash ^= Anims.GetHashCode();
      if (IsItem != false) hash ^= IsItem.GetHashCode();
      if (DefDropId != 0) hash ^= DefDropId.GetHashCode();
      if (Binding != 0) hash ^= Binding.GetHashCode();
      if (RectBuildHigh != 0) hash ^= RectBuildHigh.GetHashCode();
      if (RectWalkLow != 0) hash ^= RectWalkLow.GetHashCode();
      if (RectWalkHigh != 0) hash ^= RectWalkHigh.GetHashCode();
      hash ^= rectTexture_.GetHashCode();
      if (entityPreload_ != null) hash ^= EntityPreload.GetHashCode();
      if (sceneForce_ != null) hash ^= SceneForce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (SubType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SubType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      texture_.WriteTo(output, _repeated_texture_codec);
      if (Tileset.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Tileset);
      }
      if (BlockType != global::MelandGame3.ObjectBlockType.ObjectBlockTypeFree) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BlockType);
      }
      if (anchor_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Anchor);
      }
      if (area_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Area);
      }
      if (Mirror != false) {
        output.WriteRawTag(88);
        output.WriteBool(Mirror);
      }
      if (StateId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(StateId);
      }
      states_.WriteTo(output, _repeated_states_codec);
      preArticleType_.WriteTo(output, _repeated_preArticleType_codec);
      if (BackpackItemLimit != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(BackpackItemLimit);
      }
      if (Quality != global::MelandGame3.ObjectQuality.ObjectQualityUnknown) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) Quality);
      }
      if (CanTrade != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(CanTrade);
      }
      if (CanSell != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(CanSell);
      }
      if (CanDrop != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(CanDrop);
      }
      if (GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) GearType);
      }
      if (GearAvatar.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(GearAvatar);
      }
      if (Buildable != global::MelandGame3.ObjectBuildableType.ObjectBuildableTypeUnbuildable) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) Buildable);
      }
      if (MaterialType != global::MelandGame3.MaterialType.MaterialTypeUnknown) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) MaterialType);
      }
      if (MaterialHpLimit != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(MaterialHpLimit);
      }
      if (MaterialFallingRecipetId != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(MaterialFallingRecipetId);
      }
      if (BuildHeight != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(BuildHeight);
      }
      if (ObjectHeight != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(ObjectHeight);
      }
      if (walkDir_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(WalkDir);
      }
      if (gearSettings_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(GearSettings);
      }
      if (WalkLowHeight != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(WalkLowHeight);
      }
      if (WalkHighHeight != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(WalkHighHeight);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) EnemyType);
      }
      if (ObjectDef != 0) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(ObjectDef);
      }
      if (DropExp != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(DropExp);
      }
      if (InitObjectQuantity != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(InitObjectQuantity);
      }
      if (ExtraConfig.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(ExtraConfig);
      }
      if (HighEdge != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(HighEdge);
      }
      if (UseDrop != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(UseDrop);
      }
      if (IsFuel != false) {
        output.WriteRawTag(200, 2);
        output.WriteBool(IsFuel);
      }
      if (TerrainType != global::MelandGame3.TerrainType.TerrainNone) {
        output.WriteRawTag(208, 2);
        output.WriteEnum((int) TerrainType);
      }
      if (UseLv != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(UseLv);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        output.WriteRawTag(224, 2);
        output.WriteEnum((int) Camp);
      }
      if (Life != 0) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(Life);
      }
      if (BodyRadius != 0) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(BodyRadius);
      }
      if (UserType != global::MelandGame3.UserType.UserTypeUnknown) {
        output.WriteRawTag(248, 2);
        output.WriteEnum((int) UserType);
      }
      if (AttWidget != 0) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(AttWidget);
      }
      widgets_.WriteTo(output, _repeated_widgets_codec);
      frames_.WriteTo(output, _repeated_frames_codec);
      if (CodeLib != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(CodeLib);
      }
      if (IsTerrain != false) {
        output.WriteRawTag(160, 3);
        output.WriteBool(IsTerrain);
      }
      if (anims_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(Anims);
      }
      if (IsItem != false) {
        output.WriteRawTag(176, 3);
        output.WriteBool(IsItem);
      }
      if (DefDropId != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(DefDropId);
      }
      if (Binding != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(Binding);
      }
      if (RectBuildHigh != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(RectBuildHigh);
      }
      if (RectWalkLow != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(RectWalkLow);
      }
      if (RectWalkHigh != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(RectWalkHigh);
      }
      rectTexture_.WriteTo(output, _repeated_rectTexture_codec);
      if (entityPreload_ != null) {
        output.WriteRawTag(234, 3);
        output.WriteMessage(EntityPreload);
      }
      if (sceneForce_ != null) {
        output.WriteRawTag(242, 3);
        output.WriteMessage(SceneForce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (SubType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SubType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      texture_.WriteTo(ref output, _repeated_texture_codec);
      if (Tileset.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Tileset);
      }
      if (BlockType != global::MelandGame3.ObjectBlockType.ObjectBlockTypeFree) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BlockType);
      }
      if (anchor_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Anchor);
      }
      if (area_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Area);
      }
      if (Mirror != false) {
        output.WriteRawTag(88);
        output.WriteBool(Mirror);
      }
      if (StateId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(StateId);
      }
      states_.WriteTo(ref output, _repeated_states_codec);
      preArticleType_.WriteTo(ref output, _repeated_preArticleType_codec);
      if (BackpackItemLimit != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(BackpackItemLimit);
      }
      if (Quality != global::MelandGame3.ObjectQuality.ObjectQualityUnknown) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) Quality);
      }
      if (CanTrade != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(CanTrade);
      }
      if (CanSell != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(CanSell);
      }
      if (CanDrop != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(CanDrop);
      }
      if (GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) GearType);
      }
      if (GearAvatar.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(GearAvatar);
      }
      if (Buildable != global::MelandGame3.ObjectBuildableType.ObjectBuildableTypeUnbuildable) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) Buildable);
      }
      if (MaterialType != global::MelandGame3.MaterialType.MaterialTypeUnknown) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) MaterialType);
      }
      if (MaterialHpLimit != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(MaterialHpLimit);
      }
      if (MaterialFallingRecipetId != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(MaterialFallingRecipetId);
      }
      if (BuildHeight != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(BuildHeight);
      }
      if (ObjectHeight != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(ObjectHeight);
      }
      if (walkDir_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(WalkDir);
      }
      if (gearSettings_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(GearSettings);
      }
      if (WalkLowHeight != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(WalkLowHeight);
      }
      if (WalkHighHeight != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(WalkHighHeight);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) EnemyType);
      }
      if (ObjectDef != 0) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(ObjectDef);
      }
      if (DropExp != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(DropExp);
      }
      if (InitObjectQuantity != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(InitObjectQuantity);
      }
      if (ExtraConfig.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(ExtraConfig);
      }
      if (HighEdge != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(HighEdge);
      }
      if (UseDrop != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(UseDrop);
      }
      if (IsFuel != false) {
        output.WriteRawTag(200, 2);
        output.WriteBool(IsFuel);
      }
      if (TerrainType != global::MelandGame3.TerrainType.TerrainNone) {
        output.WriteRawTag(208, 2);
        output.WriteEnum((int) TerrainType);
      }
      if (UseLv != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(UseLv);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        output.WriteRawTag(224, 2);
        output.WriteEnum((int) Camp);
      }
      if (Life != 0) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(Life);
      }
      if (BodyRadius != 0) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(BodyRadius);
      }
      if (UserType != global::MelandGame3.UserType.UserTypeUnknown) {
        output.WriteRawTag(248, 2);
        output.WriteEnum((int) UserType);
      }
      if (AttWidget != 0) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(AttWidget);
      }
      widgets_.WriteTo(ref output, _repeated_widgets_codec);
      frames_.WriteTo(ref output, _repeated_frames_codec);
      if (CodeLib != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(CodeLib);
      }
      if (IsTerrain != false) {
        output.WriteRawTag(160, 3);
        output.WriteBool(IsTerrain);
      }
      if (anims_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(Anims);
      }
      if (IsItem != false) {
        output.WriteRawTag(176, 3);
        output.WriteBool(IsItem);
      }
      if (DefDropId != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(DefDropId);
      }
      if (Binding != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(Binding);
      }
      if (RectBuildHigh != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(RectBuildHigh);
      }
      if (RectWalkLow != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(RectWalkLow);
      }
      if (RectWalkHigh != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(RectWalkHigh);
      }
      rectTexture_.WriteTo(ref output, _repeated_rectTexture_codec);
      if (entityPreload_ != null) {
        output.WriteRawTag(234, 3);
        output.WriteMessage(EntityPreload);
      }
      if (sceneForce_ != null) {
        output.WriteRawTag(242, 3);
        output.WriteMessage(SceneForce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (SubType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += texture_.CalculateSize(_repeated_texture_codec);
      if (Tileset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tileset);
      }
      if (BlockType != global::MelandGame3.ObjectBlockType.ObjectBlockTypeFree) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BlockType);
      }
      if (anchor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Anchor);
      }
      if (area_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Area);
      }
      if (Mirror != false) {
        size += 1 + 1;
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      size += states_.CalculateSize(_repeated_states_codec);
      size += preArticleType_.CalculateSize(_repeated_preArticleType_codec);
      if (BackpackItemLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackpackItemLimit);
      }
      if (Quality != global::MelandGame3.ObjectQuality.ObjectQualityUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Quality);
      }
      if (CanTrade != false) {
        size += 2 + 1;
      }
      if (CanSell != false) {
        size += 2 + 1;
      }
      if (CanDrop != false) {
        size += 2 + 1;
      }
      if (GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GearType);
      }
      if (GearAvatar.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GearAvatar);
      }
      if (Buildable != global::MelandGame3.ObjectBuildableType.ObjectBuildableTypeUnbuildable) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Buildable);
      }
      if (MaterialType != global::MelandGame3.MaterialType.MaterialTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MaterialType);
      }
      if (MaterialHpLimit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaterialHpLimit);
      }
      if (MaterialFallingRecipetId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaterialFallingRecipetId);
      }
      if (BuildHeight != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BuildHeight);
      }
      if (ObjectHeight != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ObjectHeight);
      }
      if (walkDir_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WalkDir);
      }
      if (gearSettings_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GearSettings);
      }
      if (WalkLowHeight != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(WalkLowHeight);
      }
      if (WalkHighHeight != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(WalkHighHeight);
      }
      if (EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EnemyType);
      }
      if (ObjectDef != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ObjectDef);
      }
      if (DropExp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DropExp);
      }
      if (InitObjectQuantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(InitObjectQuantity);
      }
      if (ExtraConfig.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExtraConfig);
      }
      if (HighEdge != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HighEdge);
      }
      if (UseDrop != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UseDrop);
      }
      if (IsFuel != false) {
        size += 2 + 1;
      }
      if (TerrainType != global::MelandGame3.TerrainType.TerrainNone) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TerrainType);
      }
      if (UseLv != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UseLv);
      }
      if (Camp != global::MelandGame3.Camp.CampNeutral) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Camp);
      }
      if (Life != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Life);
      }
      if (BodyRadius != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BodyRadius);
      }
      if (UserType != global::MelandGame3.UserType.UserTypeUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UserType);
      }
      if (AttWidget != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AttWidget);
      }
      size += widgets_.CalculateSize(_repeated_widgets_codec);
      size += frames_.CalculateSize(_repeated_frames_codec);
      if (CodeLib != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CodeLib);
      }
      if (IsTerrain != false) {
        size += 2 + 1;
      }
      if (anims_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Anims);
      }
      if (IsItem != false) {
        size += 2 + 1;
      }
      if (DefDropId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DefDropId);
      }
      if (Binding != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Binding);
      }
      if (RectBuildHigh != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RectBuildHigh);
      }
      if (RectWalkLow != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RectWalkLow);
      }
      if (RectWalkHigh != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RectWalkHigh);
      }
      size += rectTexture_.CalculateSize(_repeated_rectTexture_codec);
      if (entityPreload_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntityPreload);
      }
      if (sceneForce_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SceneForce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectSettings other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) {
        Type = other.Type;
      }
      if (other.SubType != 0) {
        SubType = other.SubType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      texture_.Add(other.texture_);
      if (other.Tileset.Length != 0) {
        Tileset = other.Tileset;
      }
      if (other.BlockType != global::MelandGame3.ObjectBlockType.ObjectBlockTypeFree) {
        BlockType = other.BlockType;
      }
      if (other.anchor_ != null) {
        if (anchor_ == null) {
          Anchor = new global::MelandGame3.ObjectAnchor();
        }
        Anchor.MergeFrom(other.Anchor);
      }
      if (other.area_ != null) {
        if (area_ == null) {
          Area = new global::MelandGame3.ObjectArea();
        }
        Area.MergeFrom(other.Area);
      }
      if (other.Mirror != false) {
        Mirror = other.Mirror;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      states_.Add(other.states_);
      preArticleType_.Add(other.preArticleType_);
      if (other.BackpackItemLimit != 0) {
        BackpackItemLimit = other.BackpackItemLimit;
      }
      if (other.Quality != global::MelandGame3.ObjectQuality.ObjectQualityUnknown) {
        Quality = other.Quality;
      }
      if (other.CanTrade != false) {
        CanTrade = other.CanTrade;
      }
      if (other.CanSell != false) {
        CanSell = other.CanSell;
      }
      if (other.CanDrop != false) {
        CanDrop = other.CanDrop;
      }
      if (other.GearType != global::MelandGame3.ObjectGearType.ObjectGearTypeUnknown) {
        GearType = other.GearType;
      }
      if (other.GearAvatar.Length != 0) {
        GearAvatar = other.GearAvatar;
      }
      if (other.Buildable != global::MelandGame3.ObjectBuildableType.ObjectBuildableTypeUnbuildable) {
        Buildable = other.Buildable;
      }
      if (other.MaterialType != global::MelandGame3.MaterialType.MaterialTypeUnknown) {
        MaterialType = other.MaterialType;
      }
      if (other.MaterialHpLimit != 0) {
        MaterialHpLimit = other.MaterialHpLimit;
      }
      if (other.MaterialFallingRecipetId != 0) {
        MaterialFallingRecipetId = other.MaterialFallingRecipetId;
      }
      if (other.BuildHeight != 0) {
        BuildHeight = other.BuildHeight;
      }
      if (other.ObjectHeight != 0) {
        ObjectHeight = other.ObjectHeight;
      }
      if (other.walkDir_ != null) {
        if (walkDir_ == null) {
          WalkDir = new global::MelandGame3.ObjectArea();
        }
        WalkDir.MergeFrom(other.WalkDir);
      }
      if (other.gearSettings_ != null) {
        if (gearSettings_ == null) {
          GearSettings = new global::MelandGame3.GearSettings();
        }
        GearSettings.MergeFrom(other.GearSettings);
      }
      if (other.WalkLowHeight != 0) {
        WalkLowHeight = other.WalkLowHeight;
      }
      if (other.WalkHighHeight != 0) {
        WalkHighHeight = other.WalkHighHeight;
      }
      if (other.EnemyType != global::MelandGame3.EnemyType.EnemyTypeUnattackable) {
        EnemyType = other.EnemyType;
      }
      if (other.ObjectDef != 0) {
        ObjectDef = other.ObjectDef;
      }
      if (other.DropExp != 0) {
        DropExp = other.DropExp;
      }
      if (other.InitObjectQuantity != 0) {
        InitObjectQuantity = other.InitObjectQuantity;
      }
      if (other.ExtraConfig.Length != 0) {
        ExtraConfig = other.ExtraConfig;
      }
      if (other.HighEdge != 0) {
        HighEdge = other.HighEdge;
      }
      if (other.UseDrop != 0) {
        UseDrop = other.UseDrop;
      }
      if (other.IsFuel != false) {
        IsFuel = other.IsFuel;
      }
      if (other.TerrainType != global::MelandGame3.TerrainType.TerrainNone) {
        TerrainType = other.TerrainType;
      }
      if (other.UseLv != 0) {
        UseLv = other.UseLv;
      }
      if (other.Camp != global::MelandGame3.Camp.CampNeutral) {
        Camp = other.Camp;
      }
      if (other.Life != 0) {
        Life = other.Life;
      }
      if (other.BodyRadius != 0) {
        BodyRadius = other.BodyRadius;
      }
      if (other.UserType != global::MelandGame3.UserType.UserTypeUnknown) {
        UserType = other.UserType;
      }
      if (other.AttWidget != 0) {
        AttWidget = other.AttWidget;
      }
      widgets_.Add(other.widgets_);
      frames_.Add(other.frames_);
      if (other.CodeLib != 0) {
        CodeLib = other.CodeLib;
      }
      if (other.IsTerrain != false) {
        IsTerrain = other.IsTerrain;
      }
      if (other.anims_ != null) {
        if (anims_ == null) {
          Anims = new global::MelandGame3.EntityAnimations();
        }
        Anims.MergeFrom(other.Anims);
      }
      if (other.IsItem != false) {
        IsItem = other.IsItem;
      }
      if (other.DefDropId != 0) {
        DefDropId = other.DefDropId;
      }
      if (other.Binding != 0) {
        Binding = other.Binding;
      }
      if (other.RectBuildHigh != 0) {
        RectBuildHigh = other.RectBuildHigh;
      }
      if (other.RectWalkLow != 0) {
        RectWalkLow = other.RectWalkLow;
      }
      if (other.RectWalkHigh != 0) {
        RectWalkHigh = other.RectWalkHigh;
      }
      rectTexture_.Add(other.rectTexture_);
      if (other.entityPreload_ != null) {
        if (entityPreload_ == null) {
          EntityPreload = new global::MelandGame3.EntityPreload();
        }
        EntityPreload.MergeFrom(other.EntityPreload);
      }
      if (other.sceneForce_ != null) {
        if (sceneForce_ == null) {
          SceneForce = new global::MelandGame3.SceneForceSetting();
        }
        SceneForce.MergeFrom(other.SceneForce);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::MelandGame3.ObjectType) input.ReadEnum();
            break;
          }
          case 24: {
            SubType = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            texture_.AddEntriesFrom(input, _repeated_texture_codec);
            break;
          }
          case 58: {
            Tileset = input.ReadString();
            break;
          }
          case 64: {
            BlockType = (global::MelandGame3.ObjectBlockType) input.ReadEnum();
            break;
          }
          case 74: {
            if (anchor_ == null) {
              Anchor = new global::MelandGame3.ObjectAnchor();
            }
            input.ReadMessage(Anchor);
            break;
          }
          case 82: {
            if (area_ == null) {
              Area = new global::MelandGame3.ObjectArea();
            }
            input.ReadMessage(Area);
            break;
          }
          case 88: {
            Mirror = input.ReadBool();
            break;
          }
          case 96: {
            StateId = input.ReadInt32();
            break;
          }
          case 106: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
          case 114:
          case 112: {
            preArticleType_.AddEntriesFrom(input, _repeated_preArticleType_codec);
            break;
          }
          case 120: {
            BackpackItemLimit = input.ReadInt32();
            break;
          }
          case 128: {
            Quality = (global::MelandGame3.ObjectQuality) input.ReadEnum();
            break;
          }
          case 136: {
            CanTrade = input.ReadBool();
            break;
          }
          case 144: {
            CanSell = input.ReadBool();
            break;
          }
          case 152: {
            CanDrop = input.ReadBool();
            break;
          }
          case 160: {
            GearType = (global::MelandGame3.ObjectGearType) input.ReadEnum();
            break;
          }
          case 170: {
            GearAvatar = input.ReadString();
            break;
          }
          case 192: {
            Buildable = (global::MelandGame3.ObjectBuildableType) input.ReadEnum();
            break;
          }
          case 200: {
            MaterialType = (global::MelandGame3.MaterialType) input.ReadEnum();
            break;
          }
          case 208: {
            MaterialHpLimit = input.ReadInt32();
            break;
          }
          case 216: {
            MaterialFallingRecipetId = input.ReadInt32();
            break;
          }
          case 224: {
            BuildHeight = input.ReadInt32();
            break;
          }
          case 232: {
            ObjectHeight = input.ReadInt32();
            break;
          }
          case 242: {
            if (walkDir_ == null) {
              WalkDir = new global::MelandGame3.ObjectArea();
            }
            input.ReadMessage(WalkDir);
            break;
          }
          case 250: {
            if (gearSettings_ == null) {
              GearSettings = new global::MelandGame3.GearSettings();
            }
            input.ReadMessage(GearSettings);
            break;
          }
          case 256: {
            WalkLowHeight = input.ReadInt32();
            break;
          }
          case 264: {
            WalkHighHeight = input.ReadInt32();
            break;
          }
          case 272: {
            EnemyType = (global::MelandGame3.EnemyType) input.ReadEnum();
            break;
          }
          case 280: {
            ObjectDef = input.ReadInt32();
            break;
          }
          case 288: {
            DropExp = input.ReadInt32();
            break;
          }
          case 296: {
            InitObjectQuantity = input.ReadInt32();
            break;
          }
          case 306: {
            ExtraConfig = input.ReadString();
            break;
          }
          case 312: {
            HighEdge = input.ReadInt32();
            break;
          }
          case 320: {
            UseDrop = input.ReadInt32();
            break;
          }
          case 328: {
            IsFuel = input.ReadBool();
            break;
          }
          case 336: {
            TerrainType = (global::MelandGame3.TerrainType) input.ReadEnum();
            break;
          }
          case 344: {
            UseLv = input.ReadInt32();
            break;
          }
          case 352: {
            Camp = (global::MelandGame3.Camp) input.ReadEnum();
            break;
          }
          case 360: {
            Life = input.ReadInt32();
            break;
          }
          case 368: {
            BodyRadius = input.ReadInt32();
            break;
          }
          case 376: {
            UserType = (global::MelandGame3.UserType) input.ReadEnum();
            break;
          }
          case 384: {
            AttWidget = input.ReadInt32();
            break;
          }
          case 394: {
            widgets_.AddEntriesFrom(input, _repeated_widgets_codec);
            break;
          }
          case 402:
          case 400: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
          case 408: {
            CodeLib = input.ReadInt32();
            break;
          }
          case 416: {
            IsTerrain = input.ReadBool();
            break;
          }
          case 426: {
            if (anims_ == null) {
              Anims = new global::MelandGame3.EntityAnimations();
            }
            input.ReadMessage(Anims);
            break;
          }
          case 432: {
            IsItem = input.ReadBool();
            break;
          }
          case 440: {
            DefDropId = input.ReadInt32();
            break;
          }
          case 448: {
            Binding = input.ReadInt32();
            break;
          }
          case 456: {
            RectBuildHigh = input.ReadInt32();
            break;
          }
          case 464: {
            RectWalkLow = input.ReadInt32();
            break;
          }
          case 472: {
            RectWalkHigh = input.ReadInt32();
            break;
          }
          case 482: {
            rectTexture_.AddEntriesFrom(input, _repeated_rectTexture_codec);
            break;
          }
          case 490: {
            if (entityPreload_ == null) {
              EntityPreload = new global::MelandGame3.EntityPreload();
            }
            input.ReadMessage(EntityPreload);
            break;
          }
          case 498: {
            if (sceneForce_ == null) {
              SceneForce = new global::MelandGame3.SceneForceSetting();
            }
            input.ReadMessage(SceneForce);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::MelandGame3.ObjectType) input.ReadEnum();
            break;
          }
          case 24: {
            SubType = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            texture_.AddEntriesFrom(ref input, _repeated_texture_codec);
            break;
          }
          case 58: {
            Tileset = input.ReadString();
            break;
          }
          case 64: {
            BlockType = (global::MelandGame3.ObjectBlockType) input.ReadEnum();
            break;
          }
          case 74: {
            if (anchor_ == null) {
              Anchor = new global::MelandGame3.ObjectAnchor();
            }
            input.ReadMessage(Anchor);
            break;
          }
          case 82: {
            if (area_ == null) {
              Area = new global::MelandGame3.ObjectArea();
            }
            input.ReadMessage(Area);
            break;
          }
          case 88: {
            Mirror = input.ReadBool();
            break;
          }
          case 96: {
            StateId = input.ReadInt32();
            break;
          }
          case 106: {
            states_.AddEntriesFrom(ref input, _repeated_states_codec);
            break;
          }
          case 114:
          case 112: {
            preArticleType_.AddEntriesFrom(ref input, _repeated_preArticleType_codec);
            break;
          }
          case 120: {
            BackpackItemLimit = input.ReadInt32();
            break;
          }
          case 128: {
            Quality = (global::MelandGame3.ObjectQuality) input.ReadEnum();
            break;
          }
          case 136: {
            CanTrade = input.ReadBool();
            break;
          }
          case 144: {
            CanSell = input.ReadBool();
            break;
          }
          case 152: {
            CanDrop = input.ReadBool();
            break;
          }
          case 160: {
            GearType = (global::MelandGame3.ObjectGearType) input.ReadEnum();
            break;
          }
          case 170: {
            GearAvatar = input.ReadString();
            break;
          }
          case 192: {
            Buildable = (global::MelandGame3.ObjectBuildableType) input.ReadEnum();
            break;
          }
          case 200: {
            MaterialType = (global::MelandGame3.MaterialType) input.ReadEnum();
            break;
          }
          case 208: {
            MaterialHpLimit = input.ReadInt32();
            break;
          }
          case 216: {
            MaterialFallingRecipetId = input.ReadInt32();
            break;
          }
          case 224: {
            BuildHeight = input.ReadInt32();
            break;
          }
          case 232: {
            ObjectHeight = input.ReadInt32();
            break;
          }
          case 242: {
            if (walkDir_ == null) {
              WalkDir = new global::MelandGame3.ObjectArea();
            }
            input.ReadMessage(WalkDir);
            break;
          }
          case 250: {
            if (gearSettings_ == null) {
              GearSettings = new global::MelandGame3.GearSettings();
            }
            input.ReadMessage(GearSettings);
            break;
          }
          case 256: {
            WalkLowHeight = input.ReadInt32();
            break;
          }
          case 264: {
            WalkHighHeight = input.ReadInt32();
            break;
          }
          case 272: {
            EnemyType = (global::MelandGame3.EnemyType) input.ReadEnum();
            break;
          }
          case 280: {
            ObjectDef = input.ReadInt32();
            break;
          }
          case 288: {
            DropExp = input.ReadInt32();
            break;
          }
          case 296: {
            InitObjectQuantity = input.ReadInt32();
            break;
          }
          case 306: {
            ExtraConfig = input.ReadString();
            break;
          }
          case 312: {
            HighEdge = input.ReadInt32();
            break;
          }
          case 320: {
            UseDrop = input.ReadInt32();
            break;
          }
          case 328: {
            IsFuel = input.ReadBool();
            break;
          }
          case 336: {
            TerrainType = (global::MelandGame3.TerrainType) input.ReadEnum();
            break;
          }
          case 344: {
            UseLv = input.ReadInt32();
            break;
          }
          case 352: {
            Camp = (global::MelandGame3.Camp) input.ReadEnum();
            break;
          }
          case 360: {
            Life = input.ReadInt32();
            break;
          }
          case 368: {
            BodyRadius = input.ReadInt32();
            break;
          }
          case 376: {
            UserType = (global::MelandGame3.UserType) input.ReadEnum();
            break;
          }
          case 384: {
            AttWidget = input.ReadInt32();
            break;
          }
          case 394: {
            widgets_.AddEntriesFrom(ref input, _repeated_widgets_codec);
            break;
          }
          case 402:
          case 400: {
            frames_.AddEntriesFrom(ref input, _repeated_frames_codec);
            break;
          }
          case 408: {
            CodeLib = input.ReadInt32();
            break;
          }
          case 416: {
            IsTerrain = input.ReadBool();
            break;
          }
          case 426: {
            if (anims_ == null) {
              Anims = new global::MelandGame3.EntityAnimations();
            }
            input.ReadMessage(Anims);
            break;
          }
          case 432: {
            IsItem = input.ReadBool();
            break;
          }
          case 440: {
            DefDropId = input.ReadInt32();
            break;
          }
          case 448: {
            Binding = input.ReadInt32();
            break;
          }
          case 456: {
            RectBuildHigh = input.ReadInt32();
            break;
          }
          case 464: {
            RectWalkLow = input.ReadInt32();
            break;
          }
          case 472: {
            RectWalkHigh = input.ReadInt32();
            break;
          }
          case 482: {
            rectTexture_.AddEntriesFrom(ref input, _repeated_rectTexture_codec);
            break;
          }
          case 490: {
            if (entityPreload_ == null) {
              EntityPreload = new global::MelandGame3.EntityPreload();
            }
            input.ReadMessage(EntityPreload);
            break;
          }
          case 498: {
            if (sceneForce_ == null) {
              SceneForce = new global::MelandGame3.SceneForceSetting();
            }
            input.ReadMessage(SceneForce);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// NOTE: `Object` is reserved in typescript
  /// </summary>
  public sealed partial class ObjectItem : pb::IMessage<ObjectItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectItem> _parser = new pb::MessageParser<ObjectItem>(() => new ObjectItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectItem(ObjectItem other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      subType_ = other.subType_;
      name_ = other.name_;
      description_ = other.description_;
      mirror_ = other.mirror_;
      stateId_ = other.stateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectItem Clone() {
      return new ObjectItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::MelandGame3.ObjectType type_ = global::MelandGame3.ObjectType.ObjectTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ObjectType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "sub_type" field.</summary>
    public const int SubTypeFieldNumber = 3;
    private int subType_;
    /// <summary>
    /// 物品子类型
    /// 根据 type 有不同的子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SubType {
      get { return subType_; }
      set {
        subType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 6;
    private bool mirror_;
    /// <summary>
    /// 是否为镜像摆放
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "state_id" field.</summary>
    public const int StateIdFieldNumber = 7;
    private int stateId_;
    /// <summary>
    /// 当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (SubType != other.SubType) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Mirror != other.Mirror) return false;
      if (StateId != other.StateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) hash ^= Type.GetHashCode();
      if (SubType != 0) hash ^= SubType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Mirror != false) hash ^= Mirror.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (SubType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SubType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (Mirror != false) {
        output.WriteRawTag(48);
        output.WriteBool(Mirror);
      }
      if (StateId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (SubType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SubType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (Mirror != false) {
        output.WriteRawTag(48);
        output.WriteBool(Mirror);
      }
      if (StateId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (SubType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Mirror != false) {
        size += 1 + 1;
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Type != global::MelandGame3.ObjectType.ObjectTypeUnknown) {
        Type = other.Type;
      }
      if (other.SubType != 0) {
        SubType = other.SubType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Mirror != false) {
        Mirror = other.Mirror;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::MelandGame3.ObjectType) input.ReadEnum();
            break;
          }
          case 24: {
            SubType = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            Mirror = input.ReadBool();
            break;
          }
          case 56: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::MelandGame3.ObjectType) input.ReadEnum();
            break;
          }
          case 24: {
            SubType = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            Mirror = input.ReadBool();
            break;
          }
          case 56: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 道具模板槽位
  /// </summary>
  public sealed partial class ItemTemplateLet : pb::IMessage<ItemTemplateLet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemTemplateLet> _parser = new pb::MessageParser<ItemTemplateLet>(() => new ItemTemplateLet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemTemplateLet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemTemplateLet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemTemplateLet(ItemTemplateLet other) : this() {
      objectCid_ = other.objectCid_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemTemplateLet Clone() {
      return new ItemTemplateLet(this);
    }

    /// <summary>Field number for the "object_cid" field.</summary>
    public const int ObjectCidFieldNumber = 1;
    private int objectCid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ObjectCid {
      get { return objectCid_; }
      set {
        objectCid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemTemplateLet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemTemplateLet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectCid != other.ObjectCid) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectCid != 0) hash ^= ObjectCid.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ObjectCid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectCid);
      }
      if (Pos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ObjectCid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectCid);
      }
      if (Pos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ObjectCid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectCid);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemTemplateLet other) {
      if (other == null) {
        return;
      }
      if (other.ObjectCid != 0) {
        ObjectCid = other.ObjectCid;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectCid = input.ReadInt32();
            break;
          }
          case 16: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ObjectCid = input.ReadInt32();
            break;
          }
          case 16: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏作品
  /// </summary>
  public sealed partial class GameProject : pb::IMessage<GameProject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameProject> _parser = new pb::MessageParser<GameProject>(() => new GameProject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameProject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameProject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameProject(GameProject other) : this() {
      id_ = other.id_;
      playerId_ = other.playerId_;
      state_ = other.state_;
      type_ = other.type_;
      name_ = other.name_;
      description_ = other.description_;
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameProject Clone() {
      return new GameProject(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private string playerId_ = "";
    /// <summary>
    /// 作品所有者信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::MelandGame3.GameProjectState state_ = global::MelandGame3.GameProjectState.GameProjectStateDraft;
    /// <summary>
    /// 作品状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.GameProjectState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::MelandGame3.GameProjectType type_ = global::MelandGame3.GameProjectType.GameProjectTypeUnknown;
    /// <summary>
    /// 作品类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.GameProjectType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// 作品名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    /// <summary>
    /// 作品简介
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 7;
    private string createdAt_ = "";
    /// <summary>
    /// 作品创建时间 iso8601 格式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameProject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameProject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PlayerId != other.PlayerId) return false;
      if (State != other.State) return false;
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (State != global::MelandGame3.GameProjectState.GameProjectStateDraft) hash ^= State.GetHashCode();
      if (Type != global::MelandGame3.GameProjectType.GameProjectTypeUnknown) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (State != global::MelandGame3.GameProjectState.GameProjectStateDraft) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (Type != global::MelandGame3.GameProjectType.GameProjectTypeUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (State != global::MelandGame3.GameProjectState.GameProjectStateDraft) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (Type != global::MelandGame3.GameProjectType.GameProjectTypeUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (State != global::MelandGame3.GameProjectState.GameProjectStateDraft) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Type != global::MelandGame3.GameProjectType.GameProjectTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameProject other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.State != global::MelandGame3.GameProjectState.GameProjectStateDraft) {
        State = other.State;
      }
      if (other.Type != global::MelandGame3.GameProjectType.GameProjectTypeUnknown) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 24: {
            State = (global::MelandGame3.GameProjectState) input.ReadEnum();
            break;
          }
          case 32: {
            Type = (global::MelandGame3.GameProjectType) input.ReadEnum();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            CreatedAt = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 24: {
            State = (global::MelandGame3.GameProjectState) input.ReadEnum();
            break;
          }
          case 32: {
            Type = (global::MelandGame3.GameProjectType) input.ReadEnum();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            CreatedAt = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏作品评论
  /// </summary>
  public sealed partial class GameProjectComment : pb::IMessage<GameProjectComment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameProjectComment> _parser = new pb::MessageParser<GameProjectComment>(() => new GameProjectComment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameProjectComment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameProjectComment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameProjectComment(GameProjectComment other) : this() {
      id_ = other.id_;
      gameProjectId_ = other.gameProjectId_;
      commentPlayerId_ = other.commentPlayerId_;
      content_ = other.content_;
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameProjectComment Clone() {
      return new GameProjectComment(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_project_id" field.</summary>
    public const int GameProjectIdFieldNumber = 2;
    private string gameProjectId_ = "";
    /// <summary>
    /// 关联的游戏作品 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameProjectId {
      get { return gameProjectId_; }
      set {
        gameProjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment_player_id" field.</summary>
    public const int CommentPlayerIdFieldNumber = 3;
    private string commentPlayerId_ = "";
    /// <summary>
    /// 评论作者 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CommentPlayerId {
      get { return commentPlayerId_; }
      set {
        commentPlayerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 4;
    private string content_ = "";
    /// <summary>
    /// 评论内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 5;
    private string createdAt_ = "";
    /// <summary>
    /// 评论创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameProjectComment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameProjectComment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GameProjectId != other.GameProjectId) return false;
      if (CommentPlayerId != other.CommentPlayerId) return false;
      if (Content != other.Content) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (GameProjectId.Length != 0) hash ^= GameProjectId.GetHashCode();
      if (CommentPlayerId.Length != 0) hash ^= CommentPlayerId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (GameProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameProjectId);
      }
      if (CommentPlayerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CommentPlayerId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (GameProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameProjectId);
      }
      if (CommentPlayerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CommentPlayerId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (GameProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameProjectId);
      }
      if (CommentPlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommentPlayerId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameProjectComment other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.GameProjectId.Length != 0) {
        GameProjectId = other.GameProjectId;
      }
      if (other.CommentPlayerId.Length != 0) {
        CommentPlayerId = other.CommentPlayerId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            GameProjectId = input.ReadString();
            break;
          }
          case 26: {
            CommentPlayerId = input.ReadString();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
          case 42: {
            CreatedAt = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            GameProjectId = input.ReadString();
            break;
          }
          case 26: {
            CommentPlayerId = input.ReadString();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
          case 42: {
            CreatedAt = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 货币
  /// </summary>
  public sealed partial class Currency : pb::IMessage<Currency>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Currency> _parser = new pb::MessageParser<Currency>(() => new Currency());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Currency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Currency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Currency(Currency other) : this() {
      currencyType_ = other.currencyType_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Currency Clone() {
      return new Currency(this);
    }

    /// <summary>Field number for the "currency_type" field.</summary>
    public const int CurrencyTypeFieldNumber = 1;
    private global::MelandGame3.CurrencyType currencyType_ = global::MelandGame3.CurrencyType.CurrencyTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.CurrencyType CurrencyType {
      get { return currencyType_; }
      set {
        currencyType_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Currency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Currency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyType != other.CurrencyType) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrencyType != global::MelandGame3.CurrencyType.CurrencyTypeUnknown) hash ^= CurrencyType.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrencyType != global::MelandGame3.CurrencyType.CurrencyTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CurrencyType);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrencyType != global::MelandGame3.CurrencyType.CurrencyTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CurrencyType);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CurrencyType != global::MelandGame3.CurrencyType.CurrencyTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CurrencyType);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Currency other) {
      if (other == null) {
        return;
      }
      if (other.CurrencyType != global::MelandGame3.CurrencyType.CurrencyTypeUnknown) {
        CurrencyType = other.CurrencyType;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrencyType = (global::MelandGame3.CurrencyType) input.ReadEnum();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrencyType = (global::MelandGame3.CurrencyType) input.ReadEnum();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 奖励
  /// </summary>
  public sealed partial class Reward : pb::IMessage<Reward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Reward> _parser = new pb::MessageParser<Reward>(() => new Reward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Reward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Reward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Reward(Reward other) : this() {
      rewardId_ = other.rewardId_;
      rewardItems_ = other.rewardItems_.Clone();
      exp_ = other.exp_;
      currency_ = other.currency_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Reward Clone() {
      return new Reward(this);
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 1;
    private int rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "reward_items" field.</summary>
    public const int RewardItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MelandGame3.Stuffs> _repeated_rewardItems_codec
        = pb::FieldCodec.ForMessage(18, global::MelandGame3.Stuffs.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Stuffs> rewardItems_ = new pbc::RepeatedField<global::MelandGame3.Stuffs>();
    /// <summary>
    ///物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Stuffs> RewardItems {
      get { return rewardItems_; }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 3;
    private int exp_;
    /// <summary>
    ///exp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 4;
    private static readonly pb::FieldCodec<global::MelandGame3.Currency> _repeated_currency_codec
        = pb::FieldCodec.ForMessage(34, global::MelandGame3.Currency.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Currency> currency_ = new pbc::RepeatedField<global::MelandGame3.Currency>();
    /// <summary>
    ///货币奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Currency> Currency {
      get { return currency_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Reward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Reward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RewardId != other.RewardId) return false;
      if(!rewardItems_.Equals(other.rewardItems_)) return false;
      if (Exp != other.Exp) return false;
      if(!currency_.Equals(other.currency_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      hash ^= rewardItems_.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      hash ^= currency_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RewardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RewardId);
      }
      rewardItems_.WriteTo(output, _repeated_rewardItems_codec);
      if (Exp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Exp);
      }
      currency_.WriteTo(output, _repeated_currency_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RewardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RewardId);
      }
      rewardItems_.WriteTo(ref output, _repeated_rewardItems_codec);
      if (Exp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Exp);
      }
      currency_.WriteTo(ref output, _repeated_currency_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardId);
      }
      size += rewardItems_.CalculateSize(_repeated_rewardItems_codec);
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      size += currency_.CalculateSize(_repeated_currency_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Reward other) {
      if (other == null) {
        return;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      rewardItems_.Add(other.rewardItems_);
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      currency_.Add(other.currency_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RewardId = input.ReadInt32();
            break;
          }
          case 18: {
            rewardItems_.AddEntriesFrom(input, _repeated_rewardItems_codec);
            break;
          }
          case 24: {
            Exp = input.ReadInt32();
            break;
          }
          case 34: {
            currency_.AddEntriesFrom(input, _repeated_currency_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RewardId = input.ReadInt32();
            break;
          }
          case 18: {
            rewardItems_.AddEntriesFrom(ref input, _repeated_rewardItems_codec);
            break;
          }
          case 24: {
            Exp = input.ReadInt32();
            break;
          }
          case 34: {
            currency_.AddEntriesFrom(ref input, _repeated_currency_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChatSettings : pb::IMessage<ChatSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChatSettings> _parser = new pb::MessageParser<ChatSettings>(() => new ChatSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChatSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatSettings(ChatSettings other) : this() {
      chatType_ = other.chatType_;
      cd_ = other.cd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatSettings Clone() {
      return new ChatSettings(this);
    }

    /// <summary>Field number for the "chat_type" field.</summary>
    public const int ChatTypeFieldNumber = 1;
    private global::MelandGame3.ChatChannelType chatType_ = global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ChatChannelType ChatType {
      get { return chatType_; }
      set {
        chatType_ = value;
      }
    }

    /// <summary>Field number for the "cd" field.</summary>
    public const int CdFieldNumber = 2;
    private int cd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cd {
      get { return cd_; }
      set {
        cd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChatSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChatSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChatType != other.ChatType) return false;
      if (Cd != other.Cd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) hash ^= ChatType.GetHashCode();
      if (Cd != 0) hash ^= Cd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ChatType);
      }
      if (Cd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ChatType);
      }
      if (Cd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatType);
      }
      if (Cd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChatSettings other) {
      if (other == null) {
        return;
      }
      if (other.ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) {
        ChatType = other.ChatType;
      }
      if (other.Cd != 0) {
        Cd = other.Cd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChatType = (global::MelandGame3.ChatChannelType) input.ReadEnum();
            break;
          }
          case 16: {
            Cd = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChatType = (global::MelandGame3.ChatChannelType) input.ReadEnum();
            break;
          }
          case 16: {
            Cd = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家接收到的聊天信息
  /// </summary>
  public sealed partial class ChatMessage : pb::IMessage<ChatMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatMessage(ChatMessage other) : this() {
      senderId_ = other.senderId_;
      senderName_ = other.senderName_;
      senderIcon_ = other.senderIcon_;
      chatType_ = other.chatType_;
      content_ = other.content_;
      receiverId_ = other.receiverId_;
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 1;
    private string senderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender_name" field.</summary>
    public const int SenderNameFieldNumber = 2;
    private string senderName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SenderName {
      get { return senderName_; }
      set {
        senderName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender_icon" field.</summary>
    public const int SenderIconFieldNumber = 3;
    private string senderIcon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SenderIcon {
      get { return senderIcon_; }
      set {
        senderIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chat_type" field.</summary>
    public const int ChatTypeFieldNumber = 4;
    private global::MelandGame3.ChatChannelType chatType_ = global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ChatChannelType ChatType {
      get { return chatType_; }
      set {
        chatType_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 5;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receiver_id" field.</summary>
    public const int ReceiverIdFieldNumber = 6;
    private string receiverId_ = "";
    /// <summary>
    ///客服端用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReceiverId {
      get { return receiverId_; }
      set {
        receiverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 7;
    private string msgId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MsgId {
      get { return msgId_; }
      set {
        msgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderId != other.SenderId) return false;
      if (SenderName != other.SenderName) return false;
      if (SenderIcon != other.SenderIcon) return false;
      if (ChatType != other.ChatType) return false;
      if (Content != other.Content) return false;
      if (ReceiverId != other.ReceiverId) return false;
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SenderId.Length != 0) hash ^= SenderId.GetHashCode();
      if (SenderName.Length != 0) hash ^= SenderName.GetHashCode();
      if (SenderIcon.Length != 0) hash ^= SenderIcon.GetHashCode();
      if (ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) hash ^= ChatType.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (ReceiverId.Length != 0) hash ^= ReceiverId.GetHashCode();
      if (MsgId.Length != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SenderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SenderId);
      }
      if (SenderName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SenderName);
      }
      if (SenderIcon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SenderIcon);
      }
      if (ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ChatType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (ReceiverId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReceiverId);
      }
      if (MsgId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SenderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SenderId);
      }
      if (SenderName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SenderName);
      }
      if (SenderIcon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SenderIcon);
      }
      if (ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ChatType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (ReceiverId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReceiverId);
      }
      if (MsgId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SenderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderId);
      }
      if (SenderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderName);
      }
      if (SenderIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderIcon);
      }
      if (ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatType);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (ReceiverId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiverId);
      }
      if (MsgId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.SenderId.Length != 0) {
        SenderId = other.SenderId;
      }
      if (other.SenderName.Length != 0) {
        SenderName = other.SenderName;
      }
      if (other.SenderIcon.Length != 0) {
        SenderIcon = other.SenderIcon;
      }
      if (other.ChatType != global::MelandGame3.ChatChannelType.ChatChannelTypeUnknown) {
        ChatType = other.ChatType;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.ReceiverId.Length != 0) {
        ReceiverId = other.ReceiverId;
      }
      if (other.MsgId.Length != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SenderId = input.ReadString();
            break;
          }
          case 18: {
            SenderName = input.ReadString();
            break;
          }
          case 26: {
            SenderIcon = input.ReadString();
            break;
          }
          case 32: {
            ChatType = (global::MelandGame3.ChatChannelType) input.ReadEnum();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 50: {
            ReceiverId = input.ReadString();
            break;
          }
          case 58: {
            MsgId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SenderId = input.ReadString();
            break;
          }
          case 18: {
            SenderName = input.ReadString();
            break;
          }
          case 26: {
            SenderIcon = input.ReadString();
            break;
          }
          case 32: {
            ChatType = (global::MelandGame3.ChatChannelType) input.ReadEnum();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 50: {
            ReceiverId = input.ReadString();
            break;
          }
          case 58: {
            MsgId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MinimapMark : pb::IMessage<MinimapMark>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MinimapMark> _parser = new pb::MessageParser<MinimapMark>(() => new MinimapMark());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MinimapMark> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinimapMark() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinimapMark(MinimapMark other) : this() {
      type_ = other.type_;
      displayType_ = other.displayType_;
      markId_ = other.markId_;
      name_ = other.name_;
      r_ = other.r_;
      c_ = other.c_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinimapMark Clone() {
      return new MinimapMark(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::MelandGame3.MinimapMarkType type_ = global::MelandGame3.MinimapMarkType.MinimapMarkTypeUnknown;
    /// <summary>
    /// 标记类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MinimapMarkType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "display_type" field.</summary>
    public const int DisplayTypeFieldNumber = 2;
    private global::MelandGame3.MinimapMarkDisplayType displayType_ = global::MelandGame3.MinimapMarkDisplayType.MinimapMarkDisplayTypeUnknown;
    /// <summary>
    /// 展示类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.MinimapMarkDisplayType DisplayType {
      get { return displayType_; }
      set {
        displayType_ = value;
      }
    }

    /// <summary>Field number for the "mark_id" field.</summary>
    public const int MarkIdFieldNumber = 3;
    private string markId_ = "";
    /// <summary>
    /// 系统标记没有 Mark id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarkId {
      get { return markId_; }
      set {
        markId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// 标志名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 5;
    private int r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "c" field.</summary>
    public const int CFieldNumber = 6;
    private int c_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int C {
      get { return c_; }
      set {
        c_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MinimapMark);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MinimapMark other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (DisplayType != other.DisplayType) return false;
      if (MarkId != other.MarkId) return false;
      if (Name != other.Name) return false;
      if (R != other.R) return false;
      if (C != other.C) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::MelandGame3.MinimapMarkType.MinimapMarkTypeUnknown) hash ^= Type.GetHashCode();
      if (DisplayType != global::MelandGame3.MinimapMarkDisplayType.MinimapMarkDisplayTypeUnknown) hash ^= DisplayType.GetHashCode();
      if (MarkId.Length != 0) hash ^= MarkId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (R != 0) hash ^= R.GetHashCode();
      if (C != 0) hash ^= C.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::MelandGame3.MinimapMarkType.MinimapMarkTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DisplayType != global::MelandGame3.MinimapMarkDisplayType.MinimapMarkDisplayTypeUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DisplayType);
      }
      if (MarkId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MarkId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (R != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(R);
      }
      if (C != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(C);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::MelandGame3.MinimapMarkType.MinimapMarkTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DisplayType != global::MelandGame3.MinimapMarkDisplayType.MinimapMarkDisplayTypeUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DisplayType);
      }
      if (MarkId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MarkId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (R != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(R);
      }
      if (C != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(C);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::MelandGame3.MinimapMarkType.MinimapMarkTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (DisplayType != global::MelandGame3.MinimapMarkDisplayType.MinimapMarkDisplayTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DisplayType);
      }
      if (MarkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarkId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (R != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(R);
      }
      if (C != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(C);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MinimapMark other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::MelandGame3.MinimapMarkType.MinimapMarkTypeUnknown) {
        Type = other.Type;
      }
      if (other.DisplayType != global::MelandGame3.MinimapMarkDisplayType.MinimapMarkDisplayTypeUnknown) {
        DisplayType = other.DisplayType;
      }
      if (other.MarkId.Length != 0) {
        MarkId = other.MarkId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.R != 0) {
        R = other.R;
      }
      if (other.C != 0) {
        C = other.C;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::MelandGame3.MinimapMarkType) input.ReadEnum();
            break;
          }
          case 16: {
            DisplayType = (global::MelandGame3.MinimapMarkDisplayType) input.ReadEnum();
            break;
          }
          case 26: {
            MarkId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            R = input.ReadInt32();
            break;
          }
          case 48: {
            C = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::MelandGame3.MinimapMarkType) input.ReadEnum();
            break;
          }
          case 16: {
            DisplayType = (global::MelandGame3.MinimapMarkDisplayType) input.ReadEnum();
            break;
          }
          case 26: {
            MarkId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            R = input.ReadInt32();
            break;
          }
          case 48: {
            C = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ref: model/player_talent.go
  /// </summary>
  public sealed partial class EntityProfile : pb::IMessage<EntityProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityProfile> _parser = new pb::MessageParser<EntityProfile>(() => new EntityProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfile(EntityProfile other) : this() {
      lv_ = other.lv_;
      exp_ = other.exp_;
      att_ = other.att_;
      attSpeed_ = other.attSpeed_;
      def_ = other.def_;
      hpCurrent_ = other.hpCurrent_;
      hpLimit_ = other.hpLimit_;
      critRate_ = other.critRate_;
      critDmg_ = other.critDmg_;
      hitRate_ = other.hitRate_;
      missRate_ = other.missRate_;
      moveSpeed_ = other.moveSpeed_;
      pushDmg_ = other.pushDmg_;
      pushDist_ = other.pushDist_;
      hpRecovery_ = other.hpRecovery_;
      hungryLimit_ = other.hungryLimit_;
      thirstyLimit_ = other.thirstyLimit_;
      fatigueLimit_ = other.fatigueLimit_;
      fatigueCurrent_ = other.fatigueCurrent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfile Clone() {
      return new EntityProfile(this);
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 1;
    private int lv_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Lv {
      get { return lv_; }
      set {
        lv_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 2;
    private string exp_ = "";
    /// <summary>
    /// 经验值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exp {
      get { return exp_; }
      set {
        exp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "att" field.</summary>
    public const int AttFieldNumber = 3;
    private int att_;
    /// <summary>
    /// 攻击力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Att {
      get { return att_; }
      set {
        att_ = value;
      }
    }

    /// <summary>Field number for the "att_speed" field.</summary>
    public const int AttSpeedFieldNumber = 4;
    private int attSpeed_;
    /// <summary>
    /// 攻击速率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttSpeed {
      get { return attSpeed_; }
      set {
        attSpeed_ = value;
      }
    }

    /// <summary>Field number for the "def" field.</summary>
    public const int DefFieldNumber = 5;
    private int def_;
    /// <summary>
    /// 防御力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Def {
      get { return def_; }
      set {
        def_ = value;
      }
    }

    /// <summary>Field number for the "hp_current" field.</summary>
    public const int HpCurrentFieldNumber = 6;
    private int hpCurrent_;
    /// <summary>
    /// 当前血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpCurrent {
      get { return hpCurrent_; }
      set {
        hpCurrent_ = value;
      }
    }

    /// <summary>Field number for the "hp_limit" field.</summary>
    public const int HpLimitFieldNumber = 7;
    private int hpLimit_;
    /// <summary>
    /// 血量上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpLimit {
      get { return hpLimit_; }
      set {
        hpLimit_ = value;
      }
    }

    /// <summary>Field number for the "crit_rate" field.</summary>
    public const int CritRateFieldNumber = 8;
    private int critRate_;
    /// <summary>
    /// 暴击(Critical Strikes)率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritRate {
      get { return critRate_; }
      set {
        critRate_ = value;
      }
    }

    /// <summary>Field number for the "crit_dmg" field.</summary>
    public const int CritDmgFieldNumber = 9;
    private int critDmg_;
    /// <summary>
    /// 暴击伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritDmg {
      get { return critDmg_; }
      set {
        critDmg_ = value;
      }
    }

    /// <summary>Field number for the "hit_rate" field.</summary>
    public const int HitRateFieldNumber = 10;
    private int hitRate_;
    /// <summary>
    /// 名中率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitRate {
      get { return hitRate_; }
      set {
        hitRate_ = value;
      }
    }

    /// <summary>Field number for the "miss_rate" field.</summary>
    public const int MissRateFieldNumber = 11;
    private int missRate_;
    /// <summary>
    /// 闪避率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MissRate {
      get { return missRate_; }
      set {
        missRate_ = value;
      }
    }

    /// <summary>Field number for the "move_speed" field.</summary>
    public const int MoveSpeedFieldNumber = 12;
    private int moveSpeed_;
    /// <summary>
    /// 移动速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "push_dmg" field.</summary>
    public const int PushDmgFieldNumber = 13;
    private int pushDmg_;
    /// <summary>
    /// 击退伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushDmg {
      get { return pushDmg_; }
      set {
        pushDmg_ = value;
      }
    }

    /// <summary>Field number for the "push_dist" field.</summary>
    public const int PushDistFieldNumber = 14;
    private int pushDist_;
    /// <summary>
    /// 击退距离
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushDist {
      get { return pushDist_; }
      set {
        pushDist_ = value;
      }
    }

    /// <summary>Field number for the "hp_recovery" field.</summary>
    public const int HpRecoveryFieldNumber = 21;
    private int hpRecovery_;
    /// <summary>
    /// HP恢复
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpRecovery {
      get { return hpRecovery_; }
      set {
        hpRecovery_ = value;
      }
    }

    /// <summary>Field number for the "hungry_limit" field.</summary>
    public const int HungryLimitFieldNumber = 25;
    private int hungryLimit_;
    /// <summary>
    /// 饥饿度limit (deprecated)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HungryLimit {
      get { return hungryLimit_; }
      set {
        hungryLimit_ = value;
      }
    }

    /// <summary>Field number for the "thirsty_limit" field.</summary>
    public const int ThirstyLimitFieldNumber = 26;
    private int thirstyLimit_;
    /// <summary>
    /// 饥渴度limit(deprecated)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThirstyLimit {
      get { return thirstyLimit_; }
      set {
        thirstyLimit_ = value;
      }
    }

    /// <summary>Field number for the "fatigue_limit" field.</summary>
    public const int FatigueLimitFieldNumber = 27;
    private int fatigueLimit_;
    /// <summary>
    /// 疲劳度limit(deprecated)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FatigueLimit {
      get { return fatigueLimit_; }
      set {
        fatigueLimit_ = value;
      }
    }

    /// <summary>Field number for the "fatigue_current" field.</summary>
    public const int FatigueCurrentFieldNumber = 28;
    private int fatigueCurrent_;
    /// <summary>
    /// 当前疲劳度(deprecated)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FatigueCurrent {
      get { return fatigueCurrent_; }
      set {
        fatigueCurrent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lv != other.Lv) return false;
      if (Exp != other.Exp) return false;
      if (Att != other.Att) return false;
      if (AttSpeed != other.AttSpeed) return false;
      if (Def != other.Def) return false;
      if (HpCurrent != other.HpCurrent) return false;
      if (HpLimit != other.HpLimit) return false;
      if (CritRate != other.CritRate) return false;
      if (CritDmg != other.CritDmg) return false;
      if (HitRate != other.HitRate) return false;
      if (MissRate != other.MissRate) return false;
      if (MoveSpeed != other.MoveSpeed) return false;
      if (PushDmg != other.PushDmg) return false;
      if (PushDist != other.PushDist) return false;
      if (HpRecovery != other.HpRecovery) return false;
      if (HungryLimit != other.HungryLimit) return false;
      if (ThirstyLimit != other.ThirstyLimit) return false;
      if (FatigueLimit != other.FatigueLimit) return false;
      if (FatigueCurrent != other.FatigueCurrent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Lv != 0) hash ^= Lv.GetHashCode();
      if (Exp.Length != 0) hash ^= Exp.GetHashCode();
      if (Att != 0) hash ^= Att.GetHashCode();
      if (AttSpeed != 0) hash ^= AttSpeed.GetHashCode();
      if (Def != 0) hash ^= Def.GetHashCode();
      if (HpCurrent != 0) hash ^= HpCurrent.GetHashCode();
      if (HpLimit != 0) hash ^= HpLimit.GetHashCode();
      if (CritRate != 0) hash ^= CritRate.GetHashCode();
      if (CritDmg != 0) hash ^= CritDmg.GetHashCode();
      if (HitRate != 0) hash ^= HitRate.GetHashCode();
      if (MissRate != 0) hash ^= MissRate.GetHashCode();
      if (MoveSpeed != 0) hash ^= MoveSpeed.GetHashCode();
      if (PushDmg != 0) hash ^= PushDmg.GetHashCode();
      if (PushDist != 0) hash ^= PushDist.GetHashCode();
      if (HpRecovery != 0) hash ^= HpRecovery.GetHashCode();
      if (HungryLimit != 0) hash ^= HungryLimit.GetHashCode();
      if (ThirstyLimit != 0) hash ^= ThirstyLimit.GetHashCode();
      if (FatigueLimit != 0) hash ^= FatigueLimit.GetHashCode();
      if (FatigueCurrent != 0) hash ^= FatigueCurrent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Lv != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Lv);
      }
      if (Exp.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Exp);
      }
      if (Att != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Att);
      }
      if (AttSpeed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttSpeed);
      }
      if (Def != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Def);
      }
      if (HpCurrent != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HpCurrent);
      }
      if (HpLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HpLimit);
      }
      if (CritRate != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CritRate);
      }
      if (CritDmg != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritDmg);
      }
      if (HitRate != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HitRate);
      }
      if (MissRate != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MissRate);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MoveSpeed);
      }
      if (PushDmg != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PushDmg);
      }
      if (PushDist != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(PushDist);
      }
      if (HpRecovery != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(HpRecovery);
      }
      if (HungryLimit != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(HungryLimit);
      }
      if (ThirstyLimit != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(ThirstyLimit);
      }
      if (FatigueLimit != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(FatigueLimit);
      }
      if (FatigueCurrent != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(FatigueCurrent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Lv != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Lv);
      }
      if (Exp.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Exp);
      }
      if (Att != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Att);
      }
      if (AttSpeed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttSpeed);
      }
      if (Def != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Def);
      }
      if (HpCurrent != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HpCurrent);
      }
      if (HpLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HpLimit);
      }
      if (CritRate != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CritRate);
      }
      if (CritDmg != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritDmg);
      }
      if (HitRate != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HitRate);
      }
      if (MissRate != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MissRate);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MoveSpeed);
      }
      if (PushDmg != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PushDmg);
      }
      if (PushDist != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(PushDist);
      }
      if (HpRecovery != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(HpRecovery);
      }
      if (HungryLimit != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(HungryLimit);
      }
      if (ThirstyLimit != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(ThirstyLimit);
      }
      if (FatigueLimit != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(FatigueLimit);
      }
      if (FatigueCurrent != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(FatigueCurrent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Lv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (Exp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exp);
      }
      if (Att != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Att);
      }
      if (AttSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttSpeed);
      }
      if (Def != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Def);
      }
      if (HpCurrent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpCurrent);
      }
      if (HpLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpLimit);
      }
      if (CritRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritRate);
      }
      if (CritDmg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritDmg);
      }
      if (HitRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitRate);
      }
      if (MissRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissRate);
      }
      if (MoveSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveSpeed);
      }
      if (PushDmg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushDmg);
      }
      if (PushDist != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushDist);
      }
      if (HpRecovery != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HpRecovery);
      }
      if (HungryLimit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HungryLimit);
      }
      if (ThirstyLimit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ThirstyLimit);
      }
      if (FatigueLimit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FatigueLimit);
      }
      if (FatigueCurrent != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FatigueCurrent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityProfile other) {
      if (other == null) {
        return;
      }
      if (other.Lv != 0) {
        Lv = other.Lv;
      }
      if (other.Exp.Length != 0) {
        Exp = other.Exp;
      }
      if (other.Att != 0) {
        Att = other.Att;
      }
      if (other.AttSpeed != 0) {
        AttSpeed = other.AttSpeed;
      }
      if (other.Def != 0) {
        Def = other.Def;
      }
      if (other.HpCurrent != 0) {
        HpCurrent = other.HpCurrent;
      }
      if (other.HpLimit != 0) {
        HpLimit = other.HpLimit;
      }
      if (other.CritRate != 0) {
        CritRate = other.CritRate;
      }
      if (other.CritDmg != 0) {
        CritDmg = other.CritDmg;
      }
      if (other.HitRate != 0) {
        HitRate = other.HitRate;
      }
      if (other.MissRate != 0) {
        MissRate = other.MissRate;
      }
      if (other.MoveSpeed != 0) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.PushDmg != 0) {
        PushDmg = other.PushDmg;
      }
      if (other.PushDist != 0) {
        PushDist = other.PushDist;
      }
      if (other.HpRecovery != 0) {
        HpRecovery = other.HpRecovery;
      }
      if (other.HungryLimit != 0) {
        HungryLimit = other.HungryLimit;
      }
      if (other.ThirstyLimit != 0) {
        ThirstyLimit = other.ThirstyLimit;
      }
      if (other.FatigueLimit != 0) {
        FatigueLimit = other.FatigueLimit;
      }
      if (other.FatigueCurrent != 0) {
        FatigueCurrent = other.FatigueCurrent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Lv = input.ReadInt32();
            break;
          }
          case 18: {
            Exp = input.ReadString();
            break;
          }
          case 24: {
            Att = input.ReadInt32();
            break;
          }
          case 32: {
            AttSpeed = input.ReadInt32();
            break;
          }
          case 40: {
            Def = input.ReadInt32();
            break;
          }
          case 48: {
            HpCurrent = input.ReadInt32();
            break;
          }
          case 56: {
            HpLimit = input.ReadInt32();
            break;
          }
          case 64: {
            CritRate = input.ReadInt32();
            break;
          }
          case 72: {
            CritDmg = input.ReadInt32();
            break;
          }
          case 80: {
            HitRate = input.ReadInt32();
            break;
          }
          case 88: {
            MissRate = input.ReadInt32();
            break;
          }
          case 96: {
            MoveSpeed = input.ReadInt32();
            break;
          }
          case 104: {
            PushDmg = input.ReadInt32();
            break;
          }
          case 112: {
            PushDist = input.ReadInt32();
            break;
          }
          case 168: {
            HpRecovery = input.ReadInt32();
            break;
          }
          case 200: {
            HungryLimit = input.ReadInt32();
            break;
          }
          case 208: {
            ThirstyLimit = input.ReadInt32();
            break;
          }
          case 216: {
            FatigueLimit = input.ReadInt32();
            break;
          }
          case 224: {
            FatigueCurrent = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Lv = input.ReadInt32();
            break;
          }
          case 18: {
            Exp = input.ReadString();
            break;
          }
          case 24: {
            Att = input.ReadInt32();
            break;
          }
          case 32: {
            AttSpeed = input.ReadInt32();
            break;
          }
          case 40: {
            Def = input.ReadInt32();
            break;
          }
          case 48: {
            HpCurrent = input.ReadInt32();
            break;
          }
          case 56: {
            HpLimit = input.ReadInt32();
            break;
          }
          case 64: {
            CritRate = input.ReadInt32();
            break;
          }
          case 72: {
            CritDmg = input.ReadInt32();
            break;
          }
          case 80: {
            HitRate = input.ReadInt32();
            break;
          }
          case 88: {
            MissRate = input.ReadInt32();
            break;
          }
          case 96: {
            MoveSpeed = input.ReadInt32();
            break;
          }
          case 104: {
            PushDmg = input.ReadInt32();
            break;
          }
          case 112: {
            PushDist = input.ReadInt32();
            break;
          }
          case 168: {
            HpRecovery = input.ReadInt32();
            break;
          }
          case 200: {
            HungryLimit = input.ReadInt32();
            break;
          }
          case 208: {
            ThirstyLimit = input.ReadInt32();
            break;
          }
          case 216: {
            FatigueLimit = input.ReadInt32();
            break;
          }
          case 224: {
            FatigueCurrent = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityProfileUpdate : pb::IMessage<EntityProfileUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityProfileUpdate> _parser = new pb::MessageParser<EntityProfileUpdate>(() => new EntityProfileUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityProfileUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfileUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfileUpdate(EntityProfileUpdate other) : this() {
      field_ = other.field_;
      curValue_ = other.curValue_;
      curValueStr_ = other.curValueStr_;
      useStringValue_ = other.useStringValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfileUpdate Clone() {
      return new EntityProfileUpdate(this);
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 1;
    private global::MelandGame3.EntityProfileField field_ = global::MelandGame3.EntityProfileField.EntityProfileFieldUnKnown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityProfileField Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    /// <summary>Field number for the "cur_value" field.</summary>
    public const int CurValueFieldNumber = 2;
    private int curValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurValue {
      get { return curValue_; }
      set {
        curValue_ = value;
      }
    }

    /// <summary>Field number for the "cur_value_str" field.</summary>
    public const int CurValueStrFieldNumber = 3;
    private string curValueStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurValueStr {
      get { return curValueStr_; }
      set {
        curValueStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_string_value" field.</summary>
    public const int UseStringValueFieldNumber = 4;
    private bool useStringValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseStringValue {
      get { return useStringValue_; }
      set {
        useStringValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityProfileUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityProfileUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Field != other.Field) return false;
      if (CurValue != other.CurValue) return false;
      if (CurValueStr != other.CurValueStr) return false;
      if (UseStringValue != other.UseStringValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Field != global::MelandGame3.EntityProfileField.EntityProfileFieldUnKnown) hash ^= Field.GetHashCode();
      if (CurValue != 0) hash ^= CurValue.GetHashCode();
      if (CurValueStr.Length != 0) hash ^= CurValueStr.GetHashCode();
      if (UseStringValue != false) hash ^= UseStringValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Field != global::MelandGame3.EntityProfileField.EntityProfileFieldUnKnown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Field);
      }
      if (CurValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurValue);
      }
      if (CurValueStr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CurValueStr);
      }
      if (UseStringValue != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseStringValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Field != global::MelandGame3.EntityProfileField.EntityProfileFieldUnKnown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Field);
      }
      if (CurValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurValue);
      }
      if (CurValueStr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CurValueStr);
      }
      if (UseStringValue != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseStringValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Field != global::MelandGame3.EntityProfileField.EntityProfileFieldUnKnown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Field);
      }
      if (CurValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurValue);
      }
      if (CurValueStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurValueStr);
      }
      if (UseStringValue != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityProfileUpdate other) {
      if (other == null) {
        return;
      }
      if (other.Field != global::MelandGame3.EntityProfileField.EntityProfileFieldUnKnown) {
        Field = other.Field;
      }
      if (other.CurValue != 0) {
        CurValue = other.CurValue;
      }
      if (other.CurValueStr.Length != 0) {
        CurValueStr = other.CurValueStr;
      }
      if (other.UseStringValue != false) {
        UseStringValue = other.UseStringValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Field = (global::MelandGame3.EntityProfileField) input.ReadEnum();
            break;
          }
          case 16: {
            CurValue = input.ReadInt32();
            break;
          }
          case 26: {
            CurValueStr = input.ReadString();
            break;
          }
          case 32: {
            UseStringValue = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Field = (global::MelandGame3.EntityProfileField) input.ReadEnum();
            break;
          }
          case 16: {
            CurValue = input.ReadInt32();
            break;
          }
          case 26: {
            CurValueStr = input.ReadString();
            break;
          }
          case 32: {
            UseStringValue = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// entity 对象场景效果
  /// </summary>
  public sealed partial class EntitySceneEffect : pb::IMessage<EntitySceneEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntitySceneEffect> _parser = new pb::MessageParser<EntitySceneEffect>(() => new EntitySceneEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntitySceneEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntitySceneEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntitySceneEffect(EntitySceneEffect other) : this() {
      effectId_ = other.effectId_;
      textContent_ = other.textContent_;
      expiredAt_ = other.expiredAt_;
      fromDevice_ = other.fromDevice_;
      fromNode_ = other.fromNode_;
      bubbleEffectType_ = other.bubbleEffectType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntitySceneEffect Clone() {
      return new EntitySceneEffect(this);
    }

    /// <summary>Field number for the "effect_id" field.</summary>
    public const int EffectIdFieldNumber = 1;
    private global::MelandGame3.EntitySceneEffectId effectId_ = global::MelandGame3.EntitySceneEffectId.EntitySceneEffectIdUnknown;
    /// <summary>
    /// 场景效果 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntitySceneEffectId EffectId {
      get { return effectId_; }
      set {
        effectId_ = value;
      }
    }

    /// <summary>Field number for the "text_content" field.</summary>
    public const int TextContentFieldNumber = 2;
    private string textContent_ = "";
    /// <summary>
    /// 效果文字内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextContent {
      get { return textContent_; }
      set {
        textContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expired_at" field.</summary>
    public const int ExpiredAtFieldNumber = 4;
    private int expiredAt_;
    /// <summary>
    /// 效果状态持续到的 unix 时间戳, 不传表示永久显示, 精确到秒
    /// e.g.: 1528786465
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpiredAt {
      get { return expiredAt_; }
      set {
        expiredAt_ = value;
      }
    }

    /// <summary>Field number for the "from_device" field.</summary>
    public const int FromDeviceFieldNumber = 5;
    private int fromDevice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FromDevice {
      get { return fromDevice_; }
      set {
        fromDevice_ = value;
      }
    }

    /// <summary>Field number for the "from_node" field.</summary>
    public const int FromNodeFieldNumber = 6;
    private int fromNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FromNode {
      get { return fromNode_; }
      set {
        fromNode_ = value;
      }
    }

    /// <summary>Field number for the "bubble_effect_type" field.</summary>
    public const int BubbleEffectTypeFieldNumber = 7;
    private global::MelandGame3.BubbleTextEffectType bubbleEffectType_ = global::MelandGame3.BubbleTextEffectType.BubbleTextEffectTypeNormal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.BubbleTextEffectType BubbleEffectType {
      get { return bubbleEffectType_; }
      set {
        bubbleEffectType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntitySceneEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntitySceneEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectId != other.EffectId) return false;
      if (TextContent != other.TextContent) return false;
      if (ExpiredAt != other.ExpiredAt) return false;
      if (FromDevice != other.FromDevice) return false;
      if (FromNode != other.FromNode) return false;
      if (BubbleEffectType != other.BubbleEffectType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectId != global::MelandGame3.EntitySceneEffectId.EntitySceneEffectIdUnknown) hash ^= EffectId.GetHashCode();
      if (TextContent.Length != 0) hash ^= TextContent.GetHashCode();
      if (ExpiredAt != 0) hash ^= ExpiredAt.GetHashCode();
      if (FromDevice != 0) hash ^= FromDevice.GetHashCode();
      if (FromNode != 0) hash ^= FromNode.GetHashCode();
      if (BubbleEffectType != global::MelandGame3.BubbleTextEffectType.BubbleTextEffectTypeNormal) hash ^= BubbleEffectType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EffectId != global::MelandGame3.EntitySceneEffectId.EntitySceneEffectIdUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EffectId);
      }
      if (TextContent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TextContent);
      }
      if (ExpiredAt != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExpiredAt);
      }
      if (FromDevice != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FromDevice);
      }
      if (FromNode != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FromNode);
      }
      if (BubbleEffectType != global::MelandGame3.BubbleTextEffectType.BubbleTextEffectTypeNormal) {
        output.WriteRawTag(56);
        output.WriteEnum((int) BubbleEffectType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EffectId != global::MelandGame3.EntitySceneEffectId.EntitySceneEffectIdUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EffectId);
      }
      if (TextContent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TextContent);
      }
      if (ExpiredAt != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExpiredAt);
      }
      if (FromDevice != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FromDevice);
      }
      if (FromNode != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FromNode);
      }
      if (BubbleEffectType != global::MelandGame3.BubbleTextEffectType.BubbleTextEffectTypeNormal) {
        output.WriteRawTag(56);
        output.WriteEnum((int) BubbleEffectType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EffectId != global::MelandGame3.EntitySceneEffectId.EntitySceneEffectIdUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectId);
      }
      if (TextContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextContent);
      }
      if (ExpiredAt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpiredAt);
      }
      if (FromDevice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromDevice);
      }
      if (FromNode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromNode);
      }
      if (BubbleEffectType != global::MelandGame3.BubbleTextEffectType.BubbleTextEffectTypeNormal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BubbleEffectType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntitySceneEffect other) {
      if (other == null) {
        return;
      }
      if (other.EffectId != global::MelandGame3.EntitySceneEffectId.EntitySceneEffectIdUnknown) {
        EffectId = other.EffectId;
      }
      if (other.TextContent.Length != 0) {
        TextContent = other.TextContent;
      }
      if (other.ExpiredAt != 0) {
        ExpiredAt = other.ExpiredAt;
      }
      if (other.FromDevice != 0) {
        FromDevice = other.FromDevice;
      }
      if (other.FromNode != 0) {
        FromNode = other.FromNode;
      }
      if (other.BubbleEffectType != global::MelandGame3.BubbleTextEffectType.BubbleTextEffectTypeNormal) {
        BubbleEffectType = other.BubbleEffectType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectId = (global::MelandGame3.EntitySceneEffectId) input.ReadEnum();
            break;
          }
          case 18: {
            TextContent = input.ReadString();
            break;
          }
          case 32: {
            ExpiredAt = input.ReadInt32();
            break;
          }
          case 40: {
            FromDevice = input.ReadInt32();
            break;
          }
          case 48: {
            FromNode = input.ReadInt32();
            break;
          }
          case 56: {
            BubbleEffectType = (global::MelandGame3.BubbleTextEffectType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EffectId = (global::MelandGame3.EntitySceneEffectId) input.ReadEnum();
            break;
          }
          case 18: {
            TextContent = input.ReadString();
            break;
          }
          case 32: {
            ExpiredAt = input.ReadInt32();
            break;
          }
          case 40: {
            FromDevice = input.ReadInt32();
            break;
          }
          case 48: {
            FromNode = input.ReadInt32();
            break;
          }
          case 56: {
            BubbleEffectType = (global::MelandGame3.BubbleTextEffectType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 机器人配置
  /// </summary>
  public sealed partial class BotSettings : pb::IMessage<BotSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BotSettings> _parser = new pb::MessageParser<BotSettings>(() => new BotSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BotSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotSettings(BotSettings other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      lvType_ = other.lvType_;
      kind_ = other.kind_;
      skill1Id_ = other.skill1Id_;
      skill2Id_ = other.skill2Id_;
      skillSequence_ = other.skillSequence_.Clone();
      robotCodeBlockId_ = other.robotCodeBlockId_;
      bagGridNum_ = other.bagGridNum_;
      fuelCeiling_ = other.fuelCeiling_;
      skin1_ = other.skin1_;
      skin2_ = other.skin2_;
      skin3_ = other.skin3_;
      skin4_ = other.skin4_;
      skin_ = other.skin_;
      acquisitionskills_ = other.acquisitionskills_;
      bodyRadius_ = other.bodyRadius_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotSettings Clone() {
      return new BotSettings(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lv_type" field.</summary>
    public const int LvTypeFieldNumber = 3;
    private int lvType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LvType {
      get { return lvType_; }
      set {
        lvType_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 4;
    private int kind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "skill1id" field.</summary>
    public const int Skill1IdFieldNumber = 5;
    private int skill1Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill1Id {
      get { return skill1Id_; }
      set {
        skill1Id_ = value;
      }
    }

    /// <summary>Field number for the "skill2id" field.</summary>
    public const int Skill2IdFieldNumber = 6;
    private int skill2Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill2Id {
      get { return skill2Id_; }
      set {
        skill2Id_ = value;
      }
    }

    /// <summary>Field number for the "skillSequence" field.</summary>
    public const int SkillSequenceFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_skillSequence_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> skillSequence_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> SkillSequence {
      get { return skillSequence_; }
    }

    /// <summary>Field number for the "robotCodeBlockId" field.</summary>
    public const int RobotCodeBlockIdFieldNumber = 8;
    private int robotCodeBlockId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RobotCodeBlockId {
      get { return robotCodeBlockId_; }
      set {
        robotCodeBlockId_ = value;
      }
    }

    /// <summary>Field number for the "bagGridNum" field.</summary>
    public const int BagGridNumFieldNumber = 9;
    private int bagGridNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BagGridNum {
      get { return bagGridNum_; }
      set {
        bagGridNum_ = value;
      }
    }

    /// <summary>Field number for the "fuelCeiling" field.</summary>
    public const int FuelCeilingFieldNumber = 10;
    private int fuelCeiling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FuelCeiling {
      get { return fuelCeiling_; }
      set {
        fuelCeiling_ = value;
      }
    }

    /// <summary>Field number for the "skin1" field.</summary>
    public const int Skin1FieldNumber = 11;
    private int skin1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin1 {
      get { return skin1_; }
      set {
        skin1_ = value;
      }
    }

    /// <summary>Field number for the "skin2" field.</summary>
    public const int Skin2FieldNumber = 12;
    private int skin2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin2 {
      get { return skin2_; }
      set {
        skin2_ = value;
      }
    }

    /// <summary>Field number for the "skin3" field.</summary>
    public const int Skin3FieldNumber = 13;
    private int skin3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin3 {
      get { return skin3_; }
      set {
        skin3_ = value;
      }
    }

    /// <summary>Field number for the "skin4" field.</summary>
    public const int Skin4FieldNumber = 14;
    private int skin4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin4 {
      get { return skin4_; }
      set {
        skin4_ = value;
      }
    }

    /// <summary>Field number for the "skin" field.</summary>
    public const int SkinFieldNumber = 15;
    private int skin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skin {
      get { return skin_; }
      set {
        skin_ = value;
      }
    }

    /// <summary>Field number for the "Acquisitionskills" field.</summary>
    public const int AcquisitionskillsFieldNumber = 16;
    private int acquisitionskills_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Acquisitionskills {
      get { return acquisitionskills_; }
      set {
        acquisitionskills_ = value;
      }
    }

    /// <summary>Field number for the "body_radius" field.</summary>
    public const int BodyRadiusFieldNumber = 17;
    private int bodyRadius_;
    /// <summary>
    /// 身体半径(像素)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BodyRadius {
      get { return bodyRadius_; }
      set {
        bodyRadius_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BotSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BotSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (LvType != other.LvType) return false;
      if (Kind != other.Kind) return false;
      if (Skill1Id != other.Skill1Id) return false;
      if (Skill2Id != other.Skill2Id) return false;
      if(!skillSequence_.Equals(other.skillSequence_)) return false;
      if (RobotCodeBlockId != other.RobotCodeBlockId) return false;
      if (BagGridNum != other.BagGridNum) return false;
      if (FuelCeiling != other.FuelCeiling) return false;
      if (Skin1 != other.Skin1) return false;
      if (Skin2 != other.Skin2) return false;
      if (Skin3 != other.Skin3) return false;
      if (Skin4 != other.Skin4) return false;
      if (Skin != other.Skin) return false;
      if (Acquisitionskills != other.Acquisitionskills) return false;
      if (BodyRadius != other.BodyRadius) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LvType != 0) hash ^= LvType.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (Skill1Id != 0) hash ^= Skill1Id.GetHashCode();
      if (Skill2Id != 0) hash ^= Skill2Id.GetHashCode();
      hash ^= skillSequence_.GetHashCode();
      if (RobotCodeBlockId != 0) hash ^= RobotCodeBlockId.GetHashCode();
      if (BagGridNum != 0) hash ^= BagGridNum.GetHashCode();
      if (FuelCeiling != 0) hash ^= FuelCeiling.GetHashCode();
      if (Skin1 != 0) hash ^= Skin1.GetHashCode();
      if (Skin2 != 0) hash ^= Skin2.GetHashCode();
      if (Skin3 != 0) hash ^= Skin3.GetHashCode();
      if (Skin4 != 0) hash ^= Skin4.GetHashCode();
      if (Skin != 0) hash ^= Skin.GetHashCode();
      if (Acquisitionskills != 0) hash ^= Acquisitionskills.GetHashCode();
      if (BodyRadius != 0) hash ^= BodyRadius.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LvType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LvType);
      }
      if (Kind != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Kind);
      }
      if (Skill1Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Skill1Id);
      }
      if (Skill2Id != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Skill2Id);
      }
      skillSequence_.WriteTo(output, _repeated_skillSequence_codec);
      if (RobotCodeBlockId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RobotCodeBlockId);
      }
      if (BagGridNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(BagGridNum);
      }
      if (FuelCeiling != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(FuelCeiling);
      }
      if (Skin1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Skin1);
      }
      if (Skin2 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Skin2);
      }
      if (Skin3 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Skin3);
      }
      if (Skin4 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Skin4);
      }
      if (Skin != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Skin);
      }
      if (Acquisitionskills != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Acquisitionskills);
      }
      if (BodyRadius != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BodyRadius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LvType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LvType);
      }
      if (Kind != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Kind);
      }
      if (Skill1Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Skill1Id);
      }
      if (Skill2Id != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Skill2Id);
      }
      skillSequence_.WriteTo(ref output, _repeated_skillSequence_codec);
      if (RobotCodeBlockId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RobotCodeBlockId);
      }
      if (BagGridNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(BagGridNum);
      }
      if (FuelCeiling != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(FuelCeiling);
      }
      if (Skin1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Skin1);
      }
      if (Skin2 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Skin2);
      }
      if (Skin3 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Skin3);
      }
      if (Skin4 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Skin4);
      }
      if (Skin != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Skin);
      }
      if (Acquisitionskills != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Acquisitionskills);
      }
      if (BodyRadius != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BodyRadius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LvType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LvType);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kind);
      }
      if (Skill1Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill1Id);
      }
      if (Skill2Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill2Id);
      }
      size += skillSequence_.CalculateSize(_repeated_skillSequence_codec);
      if (RobotCodeBlockId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RobotCodeBlockId);
      }
      if (BagGridNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BagGridNum);
      }
      if (FuelCeiling != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FuelCeiling);
      }
      if (Skin1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin1);
      }
      if (Skin2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin2);
      }
      if (Skin3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin3);
      }
      if (Skin4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin4);
      }
      if (Skin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skin);
      }
      if (Acquisitionskills != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Acquisitionskills);
      }
      if (BodyRadius != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BodyRadius);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BotSettings other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LvType != 0) {
        LvType = other.LvType;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.Skill1Id != 0) {
        Skill1Id = other.Skill1Id;
      }
      if (other.Skill2Id != 0) {
        Skill2Id = other.Skill2Id;
      }
      skillSequence_.Add(other.skillSequence_);
      if (other.RobotCodeBlockId != 0) {
        RobotCodeBlockId = other.RobotCodeBlockId;
      }
      if (other.BagGridNum != 0) {
        BagGridNum = other.BagGridNum;
      }
      if (other.FuelCeiling != 0) {
        FuelCeiling = other.FuelCeiling;
      }
      if (other.Skin1 != 0) {
        Skin1 = other.Skin1;
      }
      if (other.Skin2 != 0) {
        Skin2 = other.Skin2;
      }
      if (other.Skin3 != 0) {
        Skin3 = other.Skin3;
      }
      if (other.Skin4 != 0) {
        Skin4 = other.Skin4;
      }
      if (other.Skin != 0) {
        Skin = other.Skin;
      }
      if (other.Acquisitionskills != 0) {
        Acquisitionskills = other.Acquisitionskills;
      }
      if (other.BodyRadius != 0) {
        BodyRadius = other.BodyRadius;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            LvType = input.ReadInt32();
            break;
          }
          case 32: {
            Kind = input.ReadInt32();
            break;
          }
          case 40: {
            Skill1Id = input.ReadInt32();
            break;
          }
          case 48: {
            Skill2Id = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            skillSequence_.AddEntriesFrom(input, _repeated_skillSequence_codec);
            break;
          }
          case 64: {
            RobotCodeBlockId = input.ReadInt32();
            break;
          }
          case 72: {
            BagGridNum = input.ReadInt32();
            break;
          }
          case 80: {
            FuelCeiling = input.ReadInt32();
            break;
          }
          case 88: {
            Skin1 = input.ReadInt32();
            break;
          }
          case 96: {
            Skin2 = input.ReadInt32();
            break;
          }
          case 104: {
            Skin3 = input.ReadInt32();
            break;
          }
          case 112: {
            Skin4 = input.ReadInt32();
            break;
          }
          case 120: {
            Skin = input.ReadInt32();
            break;
          }
          case 128: {
            Acquisitionskills = input.ReadInt32();
            break;
          }
          case 136: {
            BodyRadius = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            LvType = input.ReadInt32();
            break;
          }
          case 32: {
            Kind = input.ReadInt32();
            break;
          }
          case 40: {
            Skill1Id = input.ReadInt32();
            break;
          }
          case 48: {
            Skill2Id = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            skillSequence_.AddEntriesFrom(ref input, _repeated_skillSequence_codec);
            break;
          }
          case 64: {
            RobotCodeBlockId = input.ReadInt32();
            break;
          }
          case 72: {
            BagGridNum = input.ReadInt32();
            break;
          }
          case 80: {
            FuelCeiling = input.ReadInt32();
            break;
          }
          case 88: {
            Skin1 = input.ReadInt32();
            break;
          }
          case 96: {
            Skin2 = input.ReadInt32();
            break;
          }
          case 104: {
            Skin3 = input.ReadInt32();
            break;
          }
          case 112: {
            Skin4 = input.ReadInt32();
            break;
          }
          case 120: {
            Skin = input.ReadInt32();
            break;
          }
          case 128: {
            Acquisitionskills = input.ReadInt32();
            break;
          }
          case 136: {
            BodyRadius = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerArea : pb::IMessage<PlayerArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerArea> _parser = new pb::MessageParser<PlayerArea>(() => new PlayerArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerArea(PlayerArea other) : this() {
      mapId_ = other.mapId_;
      rCenter_ = other.rCenter_;
      cCenter_ = other.cCenter_;
      itemCid_ = other.itemCid_;
      buyMarks_ = other.buyMarks_;
      ownerId_ = other.ownerId_;
      ownerName_ = other.ownerName_;
      rCoreRadius_ = other.rCoreRadius_;
      cCoreRadius_ = other.cCoreRadius_;
      rExtendRadius_ = other.rExtendRadius_;
      cExtendRadius_ = other.cExtendRadius_;
      templateId_ = other.templateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerArea Clone() {
      return new PlayerArea(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "r_center" field.</summary>
    public const int RCenterFieldNumber = 2;
    private int rCenter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RCenter {
      get { return rCenter_; }
      set {
        rCenter_ = value;
      }
    }

    /// <summary>Field number for the "c_center" field.</summary>
    public const int CCenterFieldNumber = 3;
    private int cCenter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CCenter {
      get { return cCenter_; }
      set {
        cCenter_ = value;
      }
    }

    /// <summary>Field number for the "item_cid" field.</summary>
    public const int ItemCidFieldNumber = 4;
    private int itemCid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemCid {
      get { return itemCid_; }
      set {
        itemCid_ = value;
      }
    }

    /// <summary>Field number for the "buy_marks" field.</summary>
    public const int BuyMarksFieldNumber = 5;
    private pb::ByteString buyMarks_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BuyMarks {
      get { return buyMarks_; }
      set {
        buyMarks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 6;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_name" field.</summary>
    public const int OwnerNameFieldNumber = 7;
    private string ownerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "r_core_radius" field.</summary>
    public const int RCoreRadiusFieldNumber = 8;
    private int rCoreRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RCoreRadius {
      get { return rCoreRadius_; }
      set {
        rCoreRadius_ = value;
      }
    }

    /// <summary>Field number for the "c_core_radius" field.</summary>
    public const int CCoreRadiusFieldNumber = 9;
    private int cCoreRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CCoreRadius {
      get { return cCoreRadius_; }
      set {
        cCoreRadius_ = value;
      }
    }

    /// <summary>Field number for the "r_extend_radius" field.</summary>
    public const int RExtendRadiusFieldNumber = 10;
    private int rExtendRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RExtendRadius {
      get { return rExtendRadius_; }
      set {
        rExtendRadius_ = value;
      }
    }

    /// <summary>Field number for the "c_extend_radius" field.</summary>
    public const int CExtendRadiusFieldNumber = 11;
    private int cExtendRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CExtendRadius {
      get { return cExtendRadius_; }
      set {
        cExtendRadius_ = value;
      }
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 12;
    private int templateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TemplateId {
      get { return templateId_; }
      set {
        templateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (RCenter != other.RCenter) return false;
      if (CCenter != other.CCenter) return false;
      if (ItemCid != other.ItemCid) return false;
      if (BuyMarks != other.BuyMarks) return false;
      if (OwnerId != other.OwnerId) return false;
      if (OwnerName != other.OwnerName) return false;
      if (RCoreRadius != other.RCoreRadius) return false;
      if (CCoreRadius != other.CCoreRadius) return false;
      if (RExtendRadius != other.RExtendRadius) return false;
      if (CExtendRadius != other.CExtendRadius) return false;
      if (TemplateId != other.TemplateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (RCenter != 0) hash ^= RCenter.GetHashCode();
      if (CCenter != 0) hash ^= CCenter.GetHashCode();
      if (ItemCid != 0) hash ^= ItemCid.GetHashCode();
      if (BuyMarks.Length != 0) hash ^= BuyMarks.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (RCoreRadius != 0) hash ^= RCoreRadius.GetHashCode();
      if (CCoreRadius != 0) hash ^= CCoreRadius.GetHashCode();
      if (RExtendRadius != 0) hash ^= RExtendRadius.GetHashCode();
      if (CExtendRadius != 0) hash ^= CExtendRadius.GetHashCode();
      if (TemplateId != 0) hash ^= TemplateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (RCenter != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RCenter);
      }
      if (CCenter != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CCenter);
      }
      if (ItemCid != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemCid);
      }
      if (BuyMarks.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(BuyMarks);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OwnerId);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OwnerName);
      }
      if (RCoreRadius != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RCoreRadius);
      }
      if (CCoreRadius != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CCoreRadius);
      }
      if (RExtendRadius != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RExtendRadius);
      }
      if (CExtendRadius != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CExtendRadius);
      }
      if (TemplateId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TemplateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (RCenter != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RCenter);
      }
      if (CCenter != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CCenter);
      }
      if (ItemCid != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemCid);
      }
      if (BuyMarks.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(BuyMarks);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OwnerId);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OwnerName);
      }
      if (RCoreRadius != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RCoreRadius);
      }
      if (CCoreRadius != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CCoreRadius);
      }
      if (RExtendRadius != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RExtendRadius);
      }
      if (CExtendRadius != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CExtendRadius);
      }
      if (TemplateId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TemplateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (RCenter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RCenter);
      }
      if (CCenter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CCenter);
      }
      if (ItemCid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCid);
      }
      if (BuyMarks.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BuyMarks);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (OwnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (RCoreRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RCoreRadius);
      }
      if (CCoreRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CCoreRadius);
      }
      if (RExtendRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RExtendRadius);
      }
      if (CExtendRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CExtendRadius);
      }
      if (TemplateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemplateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerArea other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.RCenter != 0) {
        RCenter = other.RCenter;
      }
      if (other.CCenter != 0) {
        CCenter = other.CCenter;
      }
      if (other.ItemCid != 0) {
        ItemCid = other.ItemCid;
      }
      if (other.BuyMarks.Length != 0) {
        BuyMarks = other.BuyMarks;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.RCoreRadius != 0) {
        RCoreRadius = other.RCoreRadius;
      }
      if (other.CCoreRadius != 0) {
        CCoreRadius = other.CCoreRadius;
      }
      if (other.RExtendRadius != 0) {
        RExtendRadius = other.RExtendRadius;
      }
      if (other.CExtendRadius != 0) {
        CExtendRadius = other.CExtendRadius;
      }
      if (other.TemplateId != 0) {
        TemplateId = other.TemplateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 16: {
            RCenter = input.ReadInt32();
            break;
          }
          case 24: {
            CCenter = input.ReadInt32();
            break;
          }
          case 32: {
            ItemCid = input.ReadInt32();
            break;
          }
          case 42: {
            BuyMarks = input.ReadBytes();
            break;
          }
          case 50: {
            OwnerId = input.ReadString();
            break;
          }
          case 58: {
            OwnerName = input.ReadString();
            break;
          }
          case 64: {
            RCoreRadius = input.ReadInt32();
            break;
          }
          case 72: {
            CCoreRadius = input.ReadInt32();
            break;
          }
          case 80: {
            RExtendRadius = input.ReadInt32();
            break;
          }
          case 88: {
            CExtendRadius = input.ReadInt32();
            break;
          }
          case 96: {
            TemplateId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 16: {
            RCenter = input.ReadInt32();
            break;
          }
          case 24: {
            CCenter = input.ReadInt32();
            break;
          }
          case 32: {
            ItemCid = input.ReadInt32();
            break;
          }
          case 42: {
            BuyMarks = input.ReadBytes();
            break;
          }
          case 50: {
            OwnerId = input.ReadString();
            break;
          }
          case 58: {
            OwnerName = input.ReadString();
            break;
          }
          case 64: {
            RCoreRadius = input.ReadInt32();
            break;
          }
          case 72: {
            CCoreRadius = input.ReadInt32();
            break;
          }
          case 80: {
            RExtendRadius = input.ReadInt32();
            break;
          }
          case 88: {
            CExtendRadius = input.ReadInt32();
            break;
          }
          case 96: {
            TemplateId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerAreaBrief : pb::IMessage<PlayerAreaBrief>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerAreaBrief> _parser = new pb::MessageParser<PlayerAreaBrief>(() => new PlayerAreaBrief());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerAreaBrief> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAreaBrief() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAreaBrief(PlayerAreaBrief other) : this() {
      rCenter_ = other.rCenter_;
      cCenter_ = other.cCenter_;
      ownerId_ = other.ownerId_;
      ownerName_ = other.ownerName_;
      rCoreRadius_ = other.rCoreRadius_;
      cCoreRadius_ = other.cCoreRadius_;
      rExtendRadius_ = other.rExtendRadius_;
      cExtendRadius_ = other.cExtendRadius_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAreaBrief Clone() {
      return new PlayerAreaBrief(this);
    }

    /// <summary>Field number for the "r_center" field.</summary>
    public const int RCenterFieldNumber = 2;
    private int rCenter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RCenter {
      get { return rCenter_; }
      set {
        rCenter_ = value;
      }
    }

    /// <summary>Field number for the "c_center" field.</summary>
    public const int CCenterFieldNumber = 3;
    private int cCenter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CCenter {
      get { return cCenter_; }
      set {
        cCenter_ = value;
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 6;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_name" field.</summary>
    public const int OwnerNameFieldNumber = 7;
    private string ownerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "r_core_radius" field.</summary>
    public const int RCoreRadiusFieldNumber = 8;
    private int rCoreRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RCoreRadius {
      get { return rCoreRadius_; }
      set {
        rCoreRadius_ = value;
      }
    }

    /// <summary>Field number for the "c_core_radius" field.</summary>
    public const int CCoreRadiusFieldNumber = 9;
    private int cCoreRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CCoreRadius {
      get { return cCoreRadius_; }
      set {
        cCoreRadius_ = value;
      }
    }

    /// <summary>Field number for the "r_extend_radius" field.</summary>
    public const int RExtendRadiusFieldNumber = 10;
    private int rExtendRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RExtendRadius {
      get { return rExtendRadius_; }
      set {
        rExtendRadius_ = value;
      }
    }

    /// <summary>Field number for the "c_extend_radius" field.</summary>
    public const int CExtendRadiusFieldNumber = 11;
    private int cExtendRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CExtendRadius {
      get { return cExtendRadius_; }
      set {
        cExtendRadius_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerAreaBrief);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerAreaBrief other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RCenter != other.RCenter) return false;
      if (CCenter != other.CCenter) return false;
      if (OwnerId != other.OwnerId) return false;
      if (OwnerName != other.OwnerName) return false;
      if (RCoreRadius != other.RCoreRadius) return false;
      if (CCoreRadius != other.CCoreRadius) return false;
      if (RExtendRadius != other.RExtendRadius) return false;
      if (CExtendRadius != other.CExtendRadius) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RCenter != 0) hash ^= RCenter.GetHashCode();
      if (CCenter != 0) hash ^= CCenter.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (RCoreRadius != 0) hash ^= RCoreRadius.GetHashCode();
      if (CCoreRadius != 0) hash ^= CCoreRadius.GetHashCode();
      if (RExtendRadius != 0) hash ^= RExtendRadius.GetHashCode();
      if (CExtendRadius != 0) hash ^= CExtendRadius.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RCenter != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RCenter);
      }
      if (CCenter != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CCenter);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OwnerId);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OwnerName);
      }
      if (RCoreRadius != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RCoreRadius);
      }
      if (CCoreRadius != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CCoreRadius);
      }
      if (RExtendRadius != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RExtendRadius);
      }
      if (CExtendRadius != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CExtendRadius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RCenter != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RCenter);
      }
      if (CCenter != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CCenter);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OwnerId);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OwnerName);
      }
      if (RCoreRadius != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RCoreRadius);
      }
      if (CCoreRadius != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CCoreRadius);
      }
      if (RExtendRadius != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RExtendRadius);
      }
      if (CExtendRadius != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CExtendRadius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RCenter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RCenter);
      }
      if (CCenter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CCenter);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (OwnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (RCoreRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RCoreRadius);
      }
      if (CCoreRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CCoreRadius);
      }
      if (RExtendRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RExtendRadius);
      }
      if (CExtendRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CExtendRadius);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerAreaBrief other) {
      if (other == null) {
        return;
      }
      if (other.RCenter != 0) {
        RCenter = other.RCenter;
      }
      if (other.CCenter != 0) {
        CCenter = other.CCenter;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.RCoreRadius != 0) {
        RCoreRadius = other.RCoreRadius;
      }
      if (other.CCoreRadius != 0) {
        CCoreRadius = other.CCoreRadius;
      }
      if (other.RExtendRadius != 0) {
        RExtendRadius = other.RExtendRadius;
      }
      if (other.CExtendRadius != 0) {
        CExtendRadius = other.CExtendRadius;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            RCenter = input.ReadInt32();
            break;
          }
          case 24: {
            CCenter = input.ReadInt32();
            break;
          }
          case 50: {
            OwnerId = input.ReadString();
            break;
          }
          case 58: {
            OwnerName = input.ReadString();
            break;
          }
          case 64: {
            RCoreRadius = input.ReadInt32();
            break;
          }
          case 72: {
            CCoreRadius = input.ReadInt32();
            break;
          }
          case 80: {
            RExtendRadius = input.ReadInt32();
            break;
          }
          case 88: {
            CExtendRadius = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            RCenter = input.ReadInt32();
            break;
          }
          case 24: {
            CCenter = input.ReadInt32();
            break;
          }
          case 50: {
            OwnerId = input.ReadString();
            break;
          }
          case 58: {
            OwnerName = input.ReadString();
            break;
          }
          case 64: {
            RCoreRadius = input.ReadInt32();
            break;
          }
          case 72: {
            CCoreRadius = input.ReadInt32();
            break;
          }
          case 80: {
            RExtendRadius = input.ReadInt32();
            break;
          }
          case 88: {
            CExtendRadius = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CodeblockTemplate : pb::IMessage<CodeblockTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CodeblockTemplate> _parser = new pb::MessageParser<CodeblockTemplate>(() => new CodeblockTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CodeblockTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodeblockTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodeblockTemplate(CodeblockTemplate other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      thumbnail_ = other.thumbnail_;
      isNew_ = other.isNew_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodeblockTemplate Clone() {
      return new CodeblockTemplate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private global::MelandGame3.CodeBlockPrograms data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.CodeBlockPrograms Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "thumbnail" field.</summary>
    public const int ThumbnailFieldNumber = 4;
    private string thumbnail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Thumbnail {
      get { return thumbnail_; }
      set {
        thumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_new" field.</summary>
    public const int IsNewFieldNumber = 5;
    private bool isNew_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNew {
      get { return isNew_; }
      set {
        isNew_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private global::MelandGame3.CodeblockTemplateType type_ = global::MelandGame3.CodeblockTemplateType.CodeblockTemplateTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.CodeblockTemplateType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CodeblockTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CodeblockTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (Thumbnail != other.Thumbnail) return false;
      if (IsNew != other.IsNew) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (Thumbnail.Length != 0) hash ^= Thumbnail.GetHashCode();
      if (IsNew != false) hash ^= IsNew.GetHashCode();
      if (Type != global::MelandGame3.CodeblockTemplateType.CodeblockTemplateTypeUnknown) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (data_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Data);
      }
      if (Thumbnail.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Thumbnail);
      }
      if (IsNew != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsNew);
      }
      if (Type != global::MelandGame3.CodeblockTemplateType.CodeblockTemplateTypeUnknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (data_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Data);
      }
      if (Thumbnail.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Thumbnail);
      }
      if (IsNew != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsNew);
      }
      if (Type != global::MelandGame3.CodeblockTemplateType.CodeblockTemplateTypeUnknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (Thumbnail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Thumbnail);
      }
      if (IsNew != false) {
        size += 1 + 1;
      }
      if (Type != global::MelandGame3.CodeblockTemplateType.CodeblockTemplateTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CodeblockTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::MelandGame3.CodeBlockPrograms();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.Thumbnail.Length != 0) {
        Thumbnail = other.Thumbnail;
      }
      if (other.IsNew != false) {
        IsNew = other.IsNew;
      }
      if (other.Type != global::MelandGame3.CodeblockTemplateType.CodeblockTemplateTypeUnknown) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (data_ == null) {
              Data = new global::MelandGame3.CodeBlockPrograms();
            }
            input.ReadMessage(Data);
            break;
          }
          case 34: {
            Thumbnail = input.ReadString();
            break;
          }
          case 40: {
            IsNew = input.ReadBool();
            break;
          }
          case 48: {
            Type = (global::MelandGame3.CodeblockTemplateType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (data_ == null) {
              Data = new global::MelandGame3.CodeBlockPrograms();
            }
            input.ReadMessage(Data);
            break;
          }
          case 34: {
            Thumbnail = input.ReadString();
            break;
          }
          case 40: {
            IsNew = input.ReadBool();
            break;
          }
          case 48: {
            Type = (global::MelandGame3.CodeblockTemplateType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Role : pb::IMessage<Role>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Role> _parser = new pb::MessageParser<Role>(() => new Role());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Role> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Role() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Role(Role other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      gender_ = other.gender_;
      skeleton_ = other.skeleton_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Role Clone() {
      return new Role(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 角色名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 3;
    private string gender_ = "";
    /// <summary>
    /// 性别（male|female|other）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Gender {
      get { return gender_; }
      set {
        gender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skeleton" field.</summary>
    public const int SkeletonFieldNumber = 4;
    private string skeleton_ = "";
    /// <summary>
    /// 骨架资源名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Skeleton {
      get { return skeleton_; }
      set {
        skeleton_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Role);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Role other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Gender != other.Gender) return false;
      if (Skeleton != other.Skeleton) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gender.Length != 0) hash ^= Gender.GetHashCode();
      if (Skeleton.Length != 0) hash ^= Skeleton.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Gender);
      }
      if (Skeleton.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Skeleton);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Gender);
      }
      if (Skeleton.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Skeleton);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gender);
      }
      if (Skeleton.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Skeleton);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Role other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gender.Length != 0) {
        Gender = other.Gender;
      }
      if (other.Skeleton.Length != 0) {
        Skeleton = other.Skeleton;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Gender = input.ReadString();
            break;
          }
          case 34: {
            Skeleton = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Gender = input.ReadString();
            break;
          }
          case 34: {
            Skeleton = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 出生点
  /// </summary>
  public sealed partial class SpawnPoint : pb::IMessage<SpawnPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpawnPoint> _parser = new pb::MessageParser<SpawnPoint>(() => new SpawnPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpawnPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnPoint(SpawnPoint other) : this() {
      id_ = other.id_;
      mapId_ = other.mapId_;
      x_ = other.x_;
      y_ = other.y_;
      initial_ = other.initial_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpawnPoint Clone() {
      return new SpawnPoint(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 2;
    private int mapId_;
    /// <summary>
    /// 对象所在地图 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private int x_;
    /// <summary>
    /// 对象地图内 xy 坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "initial" field.</summary>
    public const int InitialFieldNumber = 5;
    private bool initial_;
    /// <summary>
    ///是否为初始复活点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Initial {
      get { return initial_; }
      set {
        initial_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpawnPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpawnPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MapId != other.MapId) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Initial != other.Initial) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Initial != false) hash ^= Initial.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (X != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (Initial != false) {
        output.WriteRawTag(40);
        output.WriteBool(Initial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (X != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (Initial != false) {
        output.WriteRawTag(40);
        output.WriteBool(Initial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Initial != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpawnPoint other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Initial != false) {
        Initial = other.Initial;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Initial = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Initial = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SceneWeather : pb::IMessage<SceneWeather>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SceneWeather> _parser = new pb::MessageParser<SceneWeather>(() => new SceneWeather());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SceneWeather> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneWeather() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneWeather(SceneWeather other) : this() {
      sceneId_ = other.sceneId_;
      weather_ = other.weather_;
      temperature_ = other.temperature_;
      startRate_ = other.startRate_;
      stopRate_ = other.stopRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneWeather Clone() {
      return new SceneWeather(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "weather" field.</summary>
    public const int WeatherFieldNumber = 2;
    private global::MelandGame3.WeatherType weather_ = global::MelandGame3.WeatherType.WeatherTypeNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.WeatherType Weather {
      get { return weather_; }
      set {
        weather_ = value;
      }
    }

    /// <summary>Field number for the "temperature" field.</summary>
    public const int TemperatureFieldNumber = 3;
    private int temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    /// <summary>Field number for the "start_rate" field.</summary>
    public const int StartRateFieldNumber = 4;
    private int startRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartRate {
      get { return startRate_; }
      set {
        startRate_ = value;
      }
    }

    /// <summary>Field number for the "stop_rate" field.</summary>
    public const int StopRateFieldNumber = 5;
    private int stopRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StopRate {
      get { return stopRate_; }
      set {
        stopRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SceneWeather);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SceneWeather other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (Weather != other.Weather) return false;
      if (Temperature != other.Temperature) return false;
      if (StartRate != other.StartRate) return false;
      if (StopRate != other.StopRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (Weather != global::MelandGame3.WeatherType.WeatherTypeNone) hash ^= Weather.GetHashCode();
      if (Temperature != 0) hash ^= Temperature.GetHashCode();
      if (StartRate != 0) hash ^= StartRate.GetHashCode();
      if (StopRate != 0) hash ^= StopRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneId);
      }
      if (Weather != global::MelandGame3.WeatherType.WeatherTypeNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Weather);
      }
      if (Temperature != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Temperature);
      }
      if (StartRate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartRate);
      }
      if (StopRate != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StopRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneId);
      }
      if (Weather != global::MelandGame3.WeatherType.WeatherTypeNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Weather);
      }
      if (Temperature != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Temperature);
      }
      if (StartRate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartRate);
      }
      if (StopRate != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StopRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneId);
      }
      if (Weather != global::MelandGame3.WeatherType.WeatherTypeNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Weather);
      }
      if (Temperature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Temperature);
      }
      if (StartRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartRate);
      }
      if (StopRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StopRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SceneWeather other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.Weather != global::MelandGame3.WeatherType.WeatherTypeNone) {
        Weather = other.Weather;
      }
      if (other.Temperature != 0) {
        Temperature = other.Temperature;
      }
      if (other.StartRate != 0) {
        StartRate = other.StartRate;
      }
      if (other.StopRate != 0) {
        StopRate = other.StopRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SceneId = input.ReadInt32();
            break;
          }
          case 16: {
            Weather = (global::MelandGame3.WeatherType) input.ReadEnum();
            break;
          }
          case 24: {
            Temperature = input.ReadInt32();
            break;
          }
          case 32: {
            StartRate = input.ReadInt32();
            break;
          }
          case 40: {
            StopRate = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SceneId = input.ReadInt32();
            break;
          }
          case 16: {
            Weather = (global::MelandGame3.WeatherType) input.ReadEnum();
            break;
          }
          case 24: {
            Temperature = input.ReadInt32();
            break;
          }
          case 32: {
            StartRate = input.ReadInt32();
            break;
          }
          case 40: {
            StopRate = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WeatherState : pb::IMessage<WeatherState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeatherState> _parser = new pb::MessageParser<WeatherState>(() => new WeatherState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WeatherState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeatherState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeatherState(WeatherState other) : this() {
      sceneId_ = other.sceneId_;
      weatherType_ = other.weatherType_;
      temperature_ = other.temperature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeatherState Clone() {
      return new WeatherState(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "weather_type" field.</summary>
    public const int WeatherTypeFieldNumber = 2;
    private global::MelandGame3.WeatherType weatherType_ = global::MelandGame3.WeatherType.WeatherTypeNone;
    /// <summary>
    /// 天气是否启动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.WeatherType WeatherType {
      get { return weatherType_; }
      set {
        weatherType_ = value;
      }
    }

    /// <summary>Field number for the "temperature" field.</summary>
    public const int TemperatureFieldNumber = 3;
    private int temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WeatherState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WeatherState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (WeatherType != other.WeatherType) return false;
      if (Temperature != other.Temperature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (WeatherType != global::MelandGame3.WeatherType.WeatherTypeNone) hash ^= WeatherType.GetHashCode();
      if (Temperature != 0) hash ^= Temperature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneId);
      }
      if (WeatherType != global::MelandGame3.WeatherType.WeatherTypeNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WeatherType);
      }
      if (Temperature != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Temperature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneId);
      }
      if (WeatherType != global::MelandGame3.WeatherType.WeatherTypeNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WeatherType);
      }
      if (Temperature != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Temperature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneId);
      }
      if (WeatherType != global::MelandGame3.WeatherType.WeatherTypeNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeatherType);
      }
      if (Temperature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Temperature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WeatherState other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.WeatherType != global::MelandGame3.WeatherType.WeatherTypeNone) {
        WeatherType = other.WeatherType;
      }
      if (other.Temperature != 0) {
        Temperature = other.Temperature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SceneId = input.ReadInt32();
            break;
          }
          case 16: {
            WeatherType = (global::MelandGame3.WeatherType) input.ReadEnum();
            break;
          }
          case 24: {
            Temperature = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SceneId = input.ReadInt32();
            break;
          }
          case 16: {
            WeatherType = (global::MelandGame3.WeatherType) input.ReadEnum();
            break;
          }
          case 24: {
            Temperature = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AchieveIndex : pb::IMessage<AchieveIndex>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AchieveIndex> _parser = new pb::MessageParser<AchieveIndex>(() => new AchieveIndex());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AchieveIndex> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchieveIndex() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchieveIndex(AchieveIndex other) : this() {
      requireNum_ = other.requireNum_;
      rewardId_ = other.rewardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchieveIndex Clone() {
      return new AchieveIndex(this);
    }

    /// <summary>Field number for the "require_num" field.</summary>
    public const int RequireNumFieldNumber = 1;
    private int requireNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequireNum {
      get { return requireNum_; }
      set {
        requireNum_ = value;
      }
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 2;
    private int rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AchieveIndex);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AchieveIndex other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequireNum != other.RequireNum) return false;
      if (RewardId != other.RewardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequireNum != 0) hash ^= RequireNum.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequireNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequireNum);
      }
      if (RewardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RewardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequireNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequireNum);
      }
      if (RewardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RewardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequireNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequireNum);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AchieveIndex other) {
      if (other == null) {
        return;
      }
      if (other.RequireNum != 0) {
        RequireNum = other.RequireNum;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequireNum = input.ReadInt32();
            break;
          }
          case 16: {
            RewardId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequireNum = input.ReadInt32();
            break;
          }
          case 16: {
            RewardId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Achieve : pb::IMessage<Achieve>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Achieve> _parser = new pb::MessageParser<Achieve>(() => new Achieve());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Achieve> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Achieve() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Achieve(Achieve other) : this() {
      achieveId_ = other.achieveId_;
      achieveType_ = other.achieveType_;
      achieveIndex_ = other.achieveIndex_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Achieve Clone() {
      return new Achieve(this);
    }

    /// <summary>Field number for the "achieve_id" field.</summary>
    public const int AchieveIdFieldNumber = 1;
    private int achieveId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AchieveId {
      get { return achieveId_; }
      set {
        achieveId_ = value;
      }
    }

    /// <summary>Field number for the "achieve_type" field.</summary>
    public const int AchieveTypeFieldNumber = 2;
    private global::MelandGame3.AchieveType achieveType_ = global::MelandGame3.AchieveType.AchieveTypeUnknow;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AchieveType AchieveType {
      get { return achieveType_; }
      set {
        achieveType_ = value;
      }
    }

    /// <summary>Field number for the "achieve_index" field.</summary>
    public const int AchieveIndexFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MelandGame3.AchieveIndex> _repeated_achieveIndex_codec
        = pb::FieldCodec.ForMessage(26, global::MelandGame3.AchieveIndex.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.AchieveIndex> achieveIndex_ = new pbc::RepeatedField<global::MelandGame3.AchieveIndex>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.AchieveIndex> AchieveIndex {
      get { return achieveIndex_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Achieve);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Achieve other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AchieveId != other.AchieveId) return false;
      if (AchieveType != other.AchieveType) return false;
      if(!achieveIndex_.Equals(other.achieveIndex_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AchieveId != 0) hash ^= AchieveId.GetHashCode();
      if (AchieveType != global::MelandGame3.AchieveType.AchieveTypeUnknow) hash ^= AchieveType.GetHashCode();
      hash ^= achieveIndex_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AchieveId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AchieveId);
      }
      if (AchieveType != global::MelandGame3.AchieveType.AchieveTypeUnknow) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AchieveType);
      }
      achieveIndex_.WriteTo(output, _repeated_achieveIndex_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AchieveId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AchieveId);
      }
      if (AchieveType != global::MelandGame3.AchieveType.AchieveTypeUnknow) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AchieveType);
      }
      achieveIndex_.WriteTo(ref output, _repeated_achieveIndex_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AchieveId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AchieveId);
      }
      if (AchieveType != global::MelandGame3.AchieveType.AchieveTypeUnknow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AchieveType);
      }
      size += achieveIndex_.CalculateSize(_repeated_achieveIndex_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Achieve other) {
      if (other == null) {
        return;
      }
      if (other.AchieveId != 0) {
        AchieveId = other.AchieveId;
      }
      if (other.AchieveType != global::MelandGame3.AchieveType.AchieveTypeUnknow) {
        AchieveType = other.AchieveType;
      }
      achieveIndex_.Add(other.achieveIndex_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AchieveId = input.ReadInt32();
            break;
          }
          case 16: {
            AchieveType = (global::MelandGame3.AchieveType) input.ReadEnum();
            break;
          }
          case 26: {
            achieveIndex_.AddEntriesFrom(input, _repeated_achieveIndex_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AchieveId = input.ReadInt32();
            break;
          }
          case 16: {
            AchieveType = (global::MelandGame3.AchieveType) input.ReadEnum();
            break;
          }
          case 26: {
            achieveIndex_.AddEntriesFrom(ref input, _repeated_achieveIndex_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 等级配置
  /// </summary>
  public sealed partial class EntityLvSettings : pb::IMessage<EntityLvSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityLvSettings> _parser = new pb::MessageParser<EntityLvSettings>(() => new EntityLvSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityLvSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityLvSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityLvSettings(EntityLvSettings other) : this() {
      lv_ = other.lv_;
      exp_ = other.exp_;
      att_ = other.att_;
      attSpeed_ = other.attSpeed_;
      def_ = other.def_;
      hpRecovery_ = other.hpRecovery_;
      hpLimit_ = other.hpLimit_;
      critRate_ = other.critRate_;
      critDmg_ = other.critDmg_;
      hitRate_ = other.hitRate_;
      missRate_ = other.missRate_;
      moveSpeed_ = other.moveSpeed_;
      pushDmg_ = other.pushDmg_;
      pushDist_ = other.pushDist_;
      deathLossExp_ = other.deathLossExp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityLvSettings Clone() {
      return new EntityLvSettings(this);
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 1;
    private int lv_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Lv {
      get { return lv_; }
      set {
        lv_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 2;
    private int exp_;
    /// <summary>
    /// 经验值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "att" field.</summary>
    public const int AttFieldNumber = 3;
    private int att_;
    /// <summary>
    /// 攻击力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Att {
      get { return att_; }
      set {
        att_ = value;
      }
    }

    /// <summary>Field number for the "att_speed" field.</summary>
    public const int AttSpeedFieldNumber = 4;
    private int attSpeed_;
    /// <summary>
    /// 攻击速率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttSpeed {
      get { return attSpeed_; }
      set {
        attSpeed_ = value;
      }
    }

    /// <summary>Field number for the "def" field.</summary>
    public const int DefFieldNumber = 5;
    private int def_;
    /// <summary>
    /// 防御力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Def {
      get { return def_; }
      set {
        def_ = value;
      }
    }

    /// <summary>Field number for the "hp_recovery" field.</summary>
    public const int HpRecoveryFieldNumber = 6;
    private int hpRecovery_;
    /// <summary>
    /// 生命恢复
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpRecovery {
      get { return hpRecovery_; }
      set {
        hpRecovery_ = value;
      }
    }

    /// <summary>Field number for the "hp_limit" field.</summary>
    public const int HpLimitFieldNumber = 7;
    private int hpLimit_;
    /// <summary>
    /// 血量上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpLimit {
      get { return hpLimit_; }
      set {
        hpLimit_ = value;
      }
    }

    /// <summary>Field number for the "crit_rate" field.</summary>
    public const int CritRateFieldNumber = 8;
    private int critRate_;
    /// <summary>
    /// 暴击(Critical Strikes)率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritRate {
      get { return critRate_; }
      set {
        critRate_ = value;
      }
    }

    /// <summary>Field number for the "crit_dmg" field.</summary>
    public const int CritDmgFieldNumber = 9;
    private int critDmg_;
    /// <summary>
    /// 暴击伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritDmg {
      get { return critDmg_; }
      set {
        critDmg_ = value;
      }
    }

    /// <summary>Field number for the "hit_rate" field.</summary>
    public const int HitRateFieldNumber = 10;
    private int hitRate_;
    /// <summary>
    /// 名中率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitRate {
      get { return hitRate_; }
      set {
        hitRate_ = value;
      }
    }

    /// <summary>Field number for the "miss_rate" field.</summary>
    public const int MissRateFieldNumber = 11;
    private int missRate_;
    /// <summary>
    /// 闪避率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MissRate {
      get { return missRate_; }
      set {
        missRate_ = value;
      }
    }

    /// <summary>Field number for the "move_speed" field.</summary>
    public const int MoveSpeedFieldNumber = 12;
    private int moveSpeed_;
    /// <summary>
    /// 移动速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "push_dmg" field.</summary>
    public const int PushDmgFieldNumber = 13;
    private int pushDmg_;
    /// <summary>
    /// 击退伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushDmg {
      get { return pushDmg_; }
      set {
        pushDmg_ = value;
      }
    }

    /// <summary>Field number for the "push_dist" field.</summary>
    public const int PushDistFieldNumber = 14;
    private int pushDist_;
    /// <summary>
    /// 击退距离
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushDist {
      get { return pushDist_; }
      set {
        pushDist_ = value;
      }
    }

    /// <summary>Field number for the "death_loss_exp" field.</summary>
    public const int DeathLossExpFieldNumber = 15;
    private int deathLossExp_;
    /// <summary>
    /// 死亡扣除的比例
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DeathLossExp {
      get { return deathLossExp_; }
      set {
        deathLossExp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityLvSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityLvSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lv != other.Lv) return false;
      if (Exp != other.Exp) return false;
      if (Att != other.Att) return false;
      if (AttSpeed != other.AttSpeed) return false;
      if (Def != other.Def) return false;
      if (HpRecovery != other.HpRecovery) return false;
      if (HpLimit != other.HpLimit) return false;
      if (CritRate != other.CritRate) return false;
      if (CritDmg != other.CritDmg) return false;
      if (HitRate != other.HitRate) return false;
      if (MissRate != other.MissRate) return false;
      if (MoveSpeed != other.MoveSpeed) return false;
      if (PushDmg != other.PushDmg) return false;
      if (PushDist != other.PushDist) return false;
      if (DeathLossExp != other.DeathLossExp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Lv != 0) hash ^= Lv.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (Att != 0) hash ^= Att.GetHashCode();
      if (AttSpeed != 0) hash ^= AttSpeed.GetHashCode();
      if (Def != 0) hash ^= Def.GetHashCode();
      if (HpRecovery != 0) hash ^= HpRecovery.GetHashCode();
      if (HpLimit != 0) hash ^= HpLimit.GetHashCode();
      if (CritRate != 0) hash ^= CritRate.GetHashCode();
      if (CritDmg != 0) hash ^= CritDmg.GetHashCode();
      if (HitRate != 0) hash ^= HitRate.GetHashCode();
      if (MissRate != 0) hash ^= MissRate.GetHashCode();
      if (MoveSpeed != 0) hash ^= MoveSpeed.GetHashCode();
      if (PushDmg != 0) hash ^= PushDmg.GetHashCode();
      if (PushDist != 0) hash ^= PushDist.GetHashCode();
      if (DeathLossExp != 0) hash ^= DeathLossExp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Lv != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Lv);
      }
      if (Exp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exp);
      }
      if (Att != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Att);
      }
      if (AttSpeed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttSpeed);
      }
      if (Def != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Def);
      }
      if (HpRecovery != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HpRecovery);
      }
      if (HpLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HpLimit);
      }
      if (CritRate != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CritRate);
      }
      if (CritDmg != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritDmg);
      }
      if (HitRate != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HitRate);
      }
      if (MissRate != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MissRate);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MoveSpeed);
      }
      if (PushDmg != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PushDmg);
      }
      if (PushDist != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(PushDist);
      }
      if (DeathLossExp != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(DeathLossExp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Lv != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Lv);
      }
      if (Exp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exp);
      }
      if (Att != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Att);
      }
      if (AttSpeed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttSpeed);
      }
      if (Def != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Def);
      }
      if (HpRecovery != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HpRecovery);
      }
      if (HpLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HpLimit);
      }
      if (CritRate != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CritRate);
      }
      if (CritDmg != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritDmg);
      }
      if (HitRate != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HitRate);
      }
      if (MissRate != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MissRate);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MoveSpeed);
      }
      if (PushDmg != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PushDmg);
      }
      if (PushDist != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(PushDist);
      }
      if (DeathLossExp != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(DeathLossExp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Lv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (Att != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Att);
      }
      if (AttSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttSpeed);
      }
      if (Def != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Def);
      }
      if (HpRecovery != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpRecovery);
      }
      if (HpLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpLimit);
      }
      if (CritRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritRate);
      }
      if (CritDmg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritDmg);
      }
      if (HitRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitRate);
      }
      if (MissRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissRate);
      }
      if (MoveSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveSpeed);
      }
      if (PushDmg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushDmg);
      }
      if (PushDist != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushDist);
      }
      if (DeathLossExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeathLossExp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityLvSettings other) {
      if (other == null) {
        return;
      }
      if (other.Lv != 0) {
        Lv = other.Lv;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.Att != 0) {
        Att = other.Att;
      }
      if (other.AttSpeed != 0) {
        AttSpeed = other.AttSpeed;
      }
      if (other.Def != 0) {
        Def = other.Def;
      }
      if (other.HpRecovery != 0) {
        HpRecovery = other.HpRecovery;
      }
      if (other.HpLimit != 0) {
        HpLimit = other.HpLimit;
      }
      if (other.CritRate != 0) {
        CritRate = other.CritRate;
      }
      if (other.CritDmg != 0) {
        CritDmg = other.CritDmg;
      }
      if (other.HitRate != 0) {
        HitRate = other.HitRate;
      }
      if (other.MissRate != 0) {
        MissRate = other.MissRate;
      }
      if (other.MoveSpeed != 0) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.PushDmg != 0) {
        PushDmg = other.PushDmg;
      }
      if (other.PushDist != 0) {
        PushDist = other.PushDist;
      }
      if (other.DeathLossExp != 0) {
        DeathLossExp = other.DeathLossExp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Lv = input.ReadInt32();
            break;
          }
          case 16: {
            Exp = input.ReadInt32();
            break;
          }
          case 24: {
            Att = input.ReadInt32();
            break;
          }
          case 32: {
            AttSpeed = input.ReadInt32();
            break;
          }
          case 40: {
            Def = input.ReadInt32();
            break;
          }
          case 48: {
            HpRecovery = input.ReadInt32();
            break;
          }
          case 56: {
            HpLimit = input.ReadInt32();
            break;
          }
          case 64: {
            CritRate = input.ReadInt32();
            break;
          }
          case 72: {
            CritDmg = input.ReadInt32();
            break;
          }
          case 80: {
            HitRate = input.ReadInt32();
            break;
          }
          case 88: {
            MissRate = input.ReadInt32();
            break;
          }
          case 96: {
            MoveSpeed = input.ReadInt32();
            break;
          }
          case 104: {
            PushDmg = input.ReadInt32();
            break;
          }
          case 112: {
            PushDist = input.ReadInt32();
            break;
          }
          case 120: {
            DeathLossExp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Lv = input.ReadInt32();
            break;
          }
          case 16: {
            Exp = input.ReadInt32();
            break;
          }
          case 24: {
            Att = input.ReadInt32();
            break;
          }
          case 32: {
            AttSpeed = input.ReadInt32();
            break;
          }
          case 40: {
            Def = input.ReadInt32();
            break;
          }
          case 48: {
            HpRecovery = input.ReadInt32();
            break;
          }
          case 56: {
            HpLimit = input.ReadInt32();
            break;
          }
          case 64: {
            CritRate = input.ReadInt32();
            break;
          }
          case 72: {
            CritDmg = input.ReadInt32();
            break;
          }
          case 80: {
            HitRate = input.ReadInt32();
            break;
          }
          case 88: {
            MissRate = input.ReadInt32();
            break;
          }
          case 96: {
            MoveSpeed = input.ReadInt32();
            break;
          }
          case 104: {
            PushDmg = input.ReadInt32();
            break;
          }
          case 112: {
            PushDist = input.ReadInt32();
            break;
          }
          case 120: {
            DeathLossExp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///机器人等级配置
  /// </summary>
  public sealed partial class BotLvSettings : pb::IMessage<BotLvSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BotLvSettings> _parser = new pb::MessageParser<BotLvSettings>(() => new BotLvSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BotLvSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotLvSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotLvSettings(BotLvSettings other) : this() {
      id_ = other.id_;
      lvType_ = other.lvType_;
      entityLvSettings_ = other.entityLvSettings_ != null ? other.entityLvSettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotLvSettings Clone() {
      return new BotLvSettings(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "lv_type" field.</summary>
    public const int LvTypeFieldNumber = 2;
    private int lvType_;
    /// <summary>
    /// 等级适配分组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LvType {
      get { return lvType_; }
      set {
        lvType_ = value;
      }
    }

    /// <summary>Field number for the "entity_lv_settings" field.</summary>
    public const int EntityLvSettingsFieldNumber = 3;
    private global::MelandGame3.EntityLvSettings entityLvSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLvSettings EntityLvSettings {
      get { return entityLvSettings_; }
      set {
        entityLvSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BotLvSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BotLvSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LvType != other.LvType) return false;
      if (!object.Equals(EntityLvSettings, other.EntityLvSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (LvType != 0) hash ^= LvType.GetHashCode();
      if (entityLvSettings_ != null) hash ^= EntityLvSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (LvType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LvType);
      }
      if (entityLvSettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EntityLvSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (LvType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LvType);
      }
      if (entityLvSettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EntityLvSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (LvType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LvType);
      }
      if (entityLvSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityLvSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BotLvSettings other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.LvType != 0) {
        LvType = other.LvType;
      }
      if (other.entityLvSettings_ != null) {
        if (entityLvSettings_ == null) {
          EntityLvSettings = new global::MelandGame3.EntityLvSettings();
        }
        EntityLvSettings.MergeFrom(other.EntityLvSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            LvType = input.ReadInt32();
            break;
          }
          case 26: {
            if (entityLvSettings_ == null) {
              EntityLvSettings = new global::MelandGame3.EntityLvSettings();
            }
            input.ReadMessage(EntityLvSettings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            LvType = input.ReadInt32();
            break;
          }
          case 26: {
            if (entityLvSettings_ == null) {
              EntityLvSettings = new global::MelandGame3.EntityLvSettings();
            }
            input.ReadMessage(EntityLvSettings);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemLet : pb::IMessage<ItemLet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemLet> _parser = new pb::MessageParser<ItemLet>(() => new ItemLet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemLet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLet(ItemLet other) : this() {
      itemId_ = other.itemId_;
      quantity_ = other.quantity_;
      needRand_ = other.needRand_;
      attribute_ = other.attribute_ != null ? other.attribute_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLet Clone() {
      return new ItemLet(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "NeedRand" field.</summary>
    public const int NeedRandFieldNumber = 3;
    private bool needRand_;
    /// <summary>
    /// 装备生成时是否需要随机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedRand {
      get { return needRand_; }
      set {
        needRand_ = value;
      }
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 4;
    private global::MelandGame3.AvatarAttribute attribute_;
    /// <summary>
    /// 属性只对装备有效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AvatarAttribute Attribute {
      get { return attribute_; }
      set {
        attribute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemLet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemLet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Quantity != other.Quantity) return false;
      if (NeedRand != other.NeedRand) return false;
      if (!object.Equals(Attribute, other.Attribute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (NeedRand != false) hash ^= NeedRand.GetHashCode();
      if (attribute_ != null) hash ^= Attribute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (NeedRand != false) {
        output.WriteRawTag(24);
        output.WriteBool(NeedRand);
      }
      if (attribute_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Attribute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (NeedRand != false) {
        output.WriteRawTag(24);
        output.WriteBool(NeedRand);
      }
      if (attribute_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Attribute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (NeedRand != false) {
        size += 1 + 1;
      }
      if (attribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attribute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemLet other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.NeedRand != false) {
        NeedRand = other.NeedRand;
      }
      if (other.attribute_ != null) {
        if (attribute_ == null) {
          Attribute = new global::MelandGame3.AvatarAttribute();
        }
        Attribute.MergeFrom(other.Attribute);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 24: {
            NeedRand = input.ReadBool();
            break;
          }
          case 34: {
            if (attribute_ == null) {
              Attribute = new global::MelandGame3.AvatarAttribute();
            }
            input.ReadMessage(Attribute);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 24: {
            NeedRand = input.ReadBool();
            break;
          }
          case 34: {
            if (attribute_ == null) {
              Attribute = new global::MelandGame3.AvatarAttribute();
            }
            input.ReadMessage(Attribute);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Mail : pb::IMessage<Mail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Mail> _parser = new pb::MessageParser<Mail>(() => new Mail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Mail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mail(Mail other) : this() {
      mailId_ = other.mailId_;
      title_ = other.title_;
      content_ = other.content_;
      parameters_ = other.parameters_.Clone();
      top_ = other.top_;
      sender_ = other.sender_;
      expiredAt_ = other.expiredAt_;
      read_ = other.read_;
      taken_ = other.taken_;
      attachments_ = other.attachments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mail Clone() {
      return new Mail(this);
    }

    /// <summary>Field number for the "mail_id" field.</summary>
    public const int MailIdFieldNumber = 1;
    private string mailId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MailId {
      get { return mailId_; }
      set {
        mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    /// <summary>
    ///邮件模板内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_parameters_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> parameters_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///邮件模板填充参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Parameters {
      get { return parameters_; }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 5;
    private int top_;
    /// <summary>
    ///是否置顶0=false,1=true
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 6;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expired_at" field.</summary>
    public const int ExpiredAtFieldNumber = 7;
    private long expiredAt_;
    /// <summary>
    /// 失效时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpiredAt {
      get { return expiredAt_; }
      set {
        expiredAt_ = value;
      }
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 8;
    private bool read_;
    /// <summary>
    /// 是否已读
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Read {
      get { return read_; }
      set {
        read_ = value;
      }
    }

    /// <summary>Field number for the "taken" field.</summary>
    public const int TakenFieldNumber = 9;
    private bool taken_;
    /// <summary>
    /// 是否已领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Taken {
      get { return taken_; }
      set {
        taken_ = value;
      }
    }

    /// <summary>Field number for the "attachments" field.</summary>
    public const int AttachmentsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::MelandGame3.ItemLet> _repeated_attachments_codec
        = pb::FieldCodec.ForMessage(82, global::MelandGame3.ItemLet.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.ItemLet> attachments_ = new pbc::RepeatedField<global::MelandGame3.ItemLet>();
    /// <summary>
    /// 附件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.ItemLet> Attachments {
      get { return attachments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Mail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Mail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailId != other.MailId) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      if (Top != other.Top) return false;
      if (Sender != other.Sender) return false;
      if (ExpiredAt != other.ExpiredAt) return false;
      if (Read != other.Read) return false;
      if (Taken != other.Taken) return false;
      if(!attachments_.Equals(other.attachments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MailId.Length != 0) hash ^= MailId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (Top != 0) hash ^= Top.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (ExpiredAt != 0L) hash ^= ExpiredAt.GetHashCode();
      if (Read != false) hash ^= Read.GetHashCode();
      if (Taken != false) hash ^= Taken.GetHashCode();
      hash ^= attachments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MailId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MailId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (Top != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Top);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Sender);
      }
      if (ExpiredAt != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ExpiredAt);
      }
      if (Read != false) {
        output.WriteRawTag(64);
        output.WriteBool(Read);
      }
      if (Taken != false) {
        output.WriteRawTag(72);
        output.WriteBool(Taken);
      }
      attachments_.WriteTo(output, _repeated_attachments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MailId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MailId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      parameters_.WriteTo(ref output, _repeated_parameters_codec);
      if (Top != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Top);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Sender);
      }
      if (ExpiredAt != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ExpiredAt);
      }
      if (Read != false) {
        output.WriteRawTag(64);
        output.WriteBool(Read);
      }
      if (Taken != false) {
        output.WriteRawTag(72);
        output.WriteBool(Taken);
      }
      attachments_.WriteTo(ref output, _repeated_attachments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (Top != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Top);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (ExpiredAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiredAt);
      }
      if (Read != false) {
        size += 1 + 1;
      }
      if (Taken != false) {
        size += 1 + 1;
      }
      size += attachments_.CalculateSize(_repeated_attachments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Mail other) {
      if (other == null) {
        return;
      }
      if (other.MailId.Length != 0) {
        MailId = other.MailId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      parameters_.Add(other.parameters_);
      if (other.Top != 0) {
        Top = other.Top;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.ExpiredAt != 0L) {
        ExpiredAt = other.ExpiredAt;
      }
      if (other.Read != false) {
        Read = other.Read;
      }
      if (other.Taken != false) {
        Taken = other.Taken;
      }
      attachments_.Add(other.attachments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MailId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 34: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
          case 40: {
            Top = input.ReadInt32();
            break;
          }
          case 50: {
            Sender = input.ReadString();
            break;
          }
          case 56: {
            ExpiredAt = input.ReadInt64();
            break;
          }
          case 64: {
            Read = input.ReadBool();
            break;
          }
          case 72: {
            Taken = input.ReadBool();
            break;
          }
          case 82: {
            attachments_.AddEntriesFrom(input, _repeated_attachments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MailId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 34: {
            parameters_.AddEntriesFrom(ref input, _repeated_parameters_codec);
            break;
          }
          case 40: {
            Top = input.ReadInt32();
            break;
          }
          case 50: {
            Sender = input.ReadString();
            break;
          }
          case 56: {
            ExpiredAt = input.ReadInt64();
            break;
          }
          case 64: {
            Read = input.ReadBool();
            break;
          }
          case 72: {
            Taken = input.ReadBool();
            break;
          }
          case 82: {
            attachments_.AddEntriesFrom(ref input, _repeated_attachments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MailHead : pb::IMessage<MailHead>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MailHead> _parser = new pb::MessageParser<MailHead>(() => new MailHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MailHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailHead(MailHead other) : this() {
      mailId_ = other.mailId_;
      title_ = other.title_;
      expiredAt_ = other.expiredAt_;
      top_ = other.top_;
      read_ = other.read_;
      attachments_ = other.attachments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailHead Clone() {
      return new MailHead(this);
    }

    /// <summary>Field number for the "mail_id" field.</summary>
    public const int MailIdFieldNumber = 1;
    private string mailId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MailId {
      get { return mailId_; }
      set {
        mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expired_at" field.</summary>
    public const int ExpiredAtFieldNumber = 3;
    private long expiredAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpiredAt {
      get { return expiredAt_; }
      set {
        expiredAt_ = value;
      }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 4;
    private int top_;
    /// <summary>
    ///是否置顶0=false,1=true
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 5;
    private bool read_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Read {
      get { return read_; }
      set {
        read_ = value;
      }
    }

    /// <summary>Field number for the "attachments" field.</summary>
    public const int AttachmentsFieldNumber = 6;
    private bool attachments_;
    /// <summary>
    ///有没有附件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Attachments {
      get { return attachments_; }
      set {
        attachments_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MailHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MailHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailId != other.MailId) return false;
      if (Title != other.Title) return false;
      if (ExpiredAt != other.ExpiredAt) return false;
      if (Top != other.Top) return false;
      if (Read != other.Read) return false;
      if (Attachments != other.Attachments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MailId.Length != 0) hash ^= MailId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (ExpiredAt != 0L) hash ^= ExpiredAt.GetHashCode();
      if (Top != 0) hash ^= Top.GetHashCode();
      if (Read != false) hash ^= Read.GetHashCode();
      if (Attachments != false) hash ^= Attachments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MailId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MailId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (ExpiredAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpiredAt);
      }
      if (Top != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Top);
      }
      if (Read != false) {
        output.WriteRawTag(40);
        output.WriteBool(Read);
      }
      if (Attachments != false) {
        output.WriteRawTag(48);
        output.WriteBool(Attachments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MailId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MailId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (ExpiredAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpiredAt);
      }
      if (Top != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Top);
      }
      if (Read != false) {
        output.WriteRawTag(40);
        output.WriteBool(Read);
      }
      if (Attachments != false) {
        output.WriteRawTag(48);
        output.WriteBool(Attachments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (ExpiredAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiredAt);
      }
      if (Top != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Top);
      }
      if (Read != false) {
        size += 1 + 1;
      }
      if (Attachments != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MailHead other) {
      if (other == null) {
        return;
      }
      if (other.MailId.Length != 0) {
        MailId = other.MailId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.ExpiredAt != 0L) {
        ExpiredAt = other.ExpiredAt;
      }
      if (other.Top != 0) {
        Top = other.Top;
      }
      if (other.Read != false) {
        Read = other.Read;
      }
      if (other.Attachments != false) {
        Attachments = other.Attachments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MailId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            ExpiredAt = input.ReadInt64();
            break;
          }
          case 32: {
            Top = input.ReadInt32();
            break;
          }
          case 40: {
            Read = input.ReadBool();
            break;
          }
          case 48: {
            Attachments = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MailId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            ExpiredAt = input.ReadInt64();
            break;
          }
          case 32: {
            Top = input.ReadInt32();
            break;
          }
          case 40: {
            Read = input.ReadBool();
            break;
          }
          case 48: {
            Attachments = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MailTemplate : pb::IMessage<MailTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MailTemplate> _parser = new pb::MessageParser<MailTemplate>(() => new MailTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MailTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailTemplate(MailTemplate other) : this() {
      templateId_ = other.templateId_;
      name_ = other.name_;
      template_ = other.template_;
      top_ = other.top_;
      rewardGiftId_ = other.rewardGiftId_;
      initial_ = other.initial_;
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailTemplate Clone() {
      return new MailTemplate(this);
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 1;
    private int templateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TemplateId {
      get { return templateId_; }
      set {
        templateId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template" field.</summary>
    public const int TemplateFieldNumber = 3;
    private string template_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Template {
      get { return template_; }
      set {
        template_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 4;
    private int top_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "reward_gift_id" field.</summary>
    public const int RewardGiftIdFieldNumber = 5;
    private int rewardGiftId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardGiftId {
      get { return rewardGiftId_; }
      set {
        rewardGiftId_ = value;
      }
    }

    /// <summary>Field number for the "initial" field.</summary>
    public const int InitialFieldNumber = 6;
    private int initial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Initial {
      get { return initial_; }
      set {
        initial_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 7;
    private long duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MailTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MailTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemplateId != other.TemplateId) return false;
      if (Name != other.Name) return false;
      if (Template != other.Template) return false;
      if (Top != other.Top) return false;
      if (RewardGiftId != other.RewardGiftId) return false;
      if (Initial != other.Initial) return false;
      if (Duration != other.Duration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TemplateId != 0) hash ^= TemplateId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Template.Length != 0) hash ^= Template.GetHashCode();
      if (Top != 0) hash ^= Top.GetHashCode();
      if (RewardGiftId != 0) hash ^= RewardGiftId.GetHashCode();
      if (Initial != 0) hash ^= Initial.GetHashCode();
      if (Duration != 0L) hash ^= Duration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemplateId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Template.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Template);
      }
      if (Top != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Top);
      }
      if (RewardGiftId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardGiftId);
      }
      if (Initial != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Initial);
      }
      if (Duration != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemplateId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Template.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Template);
      }
      if (Top != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Top);
      }
      if (RewardGiftId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardGiftId);
      }
      if (Initial != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Initial);
      }
      if (Duration != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TemplateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemplateId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Template.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Template);
      }
      if (Top != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Top);
      }
      if (RewardGiftId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardGiftId);
      }
      if (Initial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Initial);
      }
      if (Duration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MailTemplate other) {
      if (other == null) {
        return;
      }
      if (other.TemplateId != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Template.Length != 0) {
        Template = other.Template;
      }
      if (other.Top != 0) {
        Top = other.Top;
      }
      if (other.RewardGiftId != 0) {
        RewardGiftId = other.RewardGiftId;
      }
      if (other.Initial != 0) {
        Initial = other.Initial;
      }
      if (other.Duration != 0L) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TemplateId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Template = input.ReadString();
            break;
          }
          case 32: {
            Top = input.ReadInt32();
            break;
          }
          case 40: {
            RewardGiftId = input.ReadInt32();
            break;
          }
          case 48: {
            Initial = input.ReadInt32();
            break;
          }
          case 56: {
            Duration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TemplateId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Template = input.ReadString();
            break;
          }
          case 32: {
            Top = input.ReadInt32();
            break;
          }
          case 40: {
            RewardGiftId = input.ReadInt32();
            break;
          }
          case 48: {
            Initial = input.ReadInt32();
            break;
          }
          case 56: {
            Duration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerHungry : pb::IMessage<PlayerHungry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerHungry> _parser = new pb::MessageParser<PlayerHungry>(() => new PlayerHungry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerHungry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerHungry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerHungry(PlayerHungry other) : this() {
      limit_ = other.limit_;
      currentVal_ = other.currentVal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerHungry Clone() {
      return new PlayerHungry(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "current_val" field.</summary>
    public const int CurrentValFieldNumber = 2;
    private int currentVal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentVal {
      get { return currentVal_; }
      set {
        currentVal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerHungry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerHungry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (CurrentVal != other.CurrentVal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (CurrentVal != 0) hash ^= CurrentVal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Limit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Limit);
      }
      if (CurrentVal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Limit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Limit);
      }
      if (CurrentVal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (CurrentVal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerHungry other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.CurrentVal != 0) {
        CurrentVal = other.CurrentVal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentVal = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentVal = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerThirsty : pb::IMessage<PlayerThirsty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerThirsty> _parser = new pb::MessageParser<PlayerThirsty>(() => new PlayerThirsty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerThirsty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerThirsty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerThirsty(PlayerThirsty other) : this() {
      limit_ = other.limit_;
      currentVal_ = other.currentVal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerThirsty Clone() {
      return new PlayerThirsty(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "current_val" field.</summary>
    public const int CurrentValFieldNumber = 2;
    private int currentVal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentVal {
      get { return currentVal_; }
      set {
        currentVal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerThirsty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerThirsty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (CurrentVal != other.CurrentVal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (CurrentVal != 0) hash ^= CurrentVal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Limit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Limit);
      }
      if (CurrentVal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Limit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Limit);
      }
      if (CurrentVal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (CurrentVal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerThirsty other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.CurrentVal != 0) {
        CurrentVal = other.CurrentVal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentVal = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentVal = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerFatigue : pb::IMessage<PlayerFatigue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerFatigue> _parser = new pb::MessageParser<PlayerFatigue>(() => new PlayerFatigue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerFatigue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFatigue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFatigue(PlayerFatigue other) : this() {
      limit_ = other.limit_;
      currentVal_ = other.currentVal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFatigue Clone() {
      return new PlayerFatigue(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "current_val" field.</summary>
    public const int CurrentValFieldNumber = 2;
    private int currentVal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentVal {
      get { return currentVal_; }
      set {
        currentVal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerFatigue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerFatigue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (CurrentVal != other.CurrentVal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (CurrentVal != 0) hash ^= CurrentVal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Limit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Limit);
      }
      if (CurrentVal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Limit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Limit);
      }
      if (CurrentVal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (CurrentVal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerFatigue other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.CurrentVal != 0) {
        CurrentVal = other.CurrentVal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentVal = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentVal = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 功能物件配置数据
  /// </summary>
  public sealed partial class SpecialBuildSettings : pb::IMessage<SpecialBuildSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecialBuildSettings> _parser = new pb::MessageParser<SpecialBuildSettings>(() => new SpecialBuildSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpecialBuildSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecialBuildSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecialBuildSettings(SpecialBuildSettings other) : this() {
      id_ = other.id_;
      dataFrom_ = other.dataFrom_;
      type_ = other.type_;
      formulas_ = other.formulas_.Clone();
      gridNum_ = other.gridNum_;
      needFuel_ = other.needFuel_.Clone();
      burningRation_ = other.burningRation_;
      maxChars_ = other.maxChars_;
      content_ = other.content_;
      displayTime_ = other.displayTime_;
      triggerRange_ = other.triggerRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecialBuildSettings Clone() {
      return new SpecialBuildSettings(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "data_from" field.</summary>
    public const int DataFromFieldNumber = 2;
    private int dataFrom_;
    /// <summary>
    ///工作台数据来自那张 XXX.xlsx
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DataFrom {
      get { return dataFrom_; }
      set {
        dataFrom_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::MelandGame3.SpecialBuildSubType type_ = global::MelandGame3.SpecialBuildSubType.SpecialBuildSubTypeUnknown;
    /// <summary>
    ///功能物件 子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.SpecialBuildSubType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "formulas" field.</summary>
    public const int FormulasFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_formulas_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> formulas_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///可是使用的配方id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Formulas {
      get { return formulas_; }
    }

    /// <summary>Field number for the "grid_num" field.</summary>
    public const int GridNumFieldNumber = 5;
    private int gridNum_;
    /// <summary>
    ///格子数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GridNum {
      get { return gridNum_; }
      set {
        gridNum_ = value;
      }
    }

    /// <summary>Field number for the "need_fuel" field.</summary>
    public const int NeedFuelFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_needFuel_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> needFuel_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///可是使用的燃料id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> NeedFuel {
      get { return needFuel_; }
    }

    /// <summary>Field number for the "burning_ration" field.</summary>
    public const int BurningRationFieldNumber = 7;
    private int burningRation_;
    /// <summary>
    ///燃烧效率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BurningRation {
      get { return burningRation_; }
      set {
        burningRation_ = value;
      }
    }

    /// <summary>Field number for the "max_chars" field.</summary>
    public const int MaxCharsFieldNumber = 8;
    private int maxChars_;
    /// <summary>
    ///提示框最大字符数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxChars {
      get { return maxChars_; }
      set {
        maxChars_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 9;
    private string content_ = "";
    /// <summary>
    ///提示信息(默认)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_time" field.</summary>
    public const int DisplayTimeFieldNumber = 10;
    private int displayTime_;
    /// <summary>
    ///提示信息每次展示时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DisplayTime {
      get { return displayTime_; }
      set {
        displayTime_ = value;
      }
    }

    /// <summary>Field number for the "trigger_range" field.</summary>
    public const int TriggerRangeFieldNumber = 11;
    private int triggerRange_;
    /// <summary>
    ///提示信息的展示触发范围
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TriggerRange {
      get { return triggerRange_; }
      set {
        triggerRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpecialBuildSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpecialBuildSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DataFrom != other.DataFrom) return false;
      if (Type != other.Type) return false;
      if(!formulas_.Equals(other.formulas_)) return false;
      if (GridNum != other.GridNum) return false;
      if(!needFuel_.Equals(other.needFuel_)) return false;
      if (BurningRation != other.BurningRation) return false;
      if (MaxChars != other.MaxChars) return false;
      if (Content != other.Content) return false;
      if (DisplayTime != other.DisplayTime) return false;
      if (TriggerRange != other.TriggerRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (DataFrom != 0) hash ^= DataFrom.GetHashCode();
      if (Type != global::MelandGame3.SpecialBuildSubType.SpecialBuildSubTypeUnknown) hash ^= Type.GetHashCode();
      hash ^= formulas_.GetHashCode();
      if (GridNum != 0) hash ^= GridNum.GetHashCode();
      hash ^= needFuel_.GetHashCode();
      if (BurningRation != 0) hash ^= BurningRation.GetHashCode();
      if (MaxChars != 0) hash ^= MaxChars.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (DisplayTime != 0) hash ^= DisplayTime.GetHashCode();
      if (TriggerRange != 0) hash ^= TriggerRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DataFrom != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DataFrom);
      }
      if (Type != global::MelandGame3.SpecialBuildSubType.SpecialBuildSubTypeUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      formulas_.WriteTo(output, _repeated_formulas_codec);
      if (GridNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GridNum);
      }
      needFuel_.WriteTo(output, _repeated_needFuel_codec);
      if (BurningRation != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BurningRation);
      }
      if (MaxChars != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxChars);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Content);
      }
      if (DisplayTime != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DisplayTime);
      }
      if (TriggerRange != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(TriggerRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DataFrom != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DataFrom);
      }
      if (Type != global::MelandGame3.SpecialBuildSubType.SpecialBuildSubTypeUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      formulas_.WriteTo(ref output, _repeated_formulas_codec);
      if (GridNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GridNum);
      }
      needFuel_.WriteTo(ref output, _repeated_needFuel_codec);
      if (BurningRation != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BurningRation);
      }
      if (MaxChars != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxChars);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Content);
      }
      if (DisplayTime != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DisplayTime);
      }
      if (TriggerRange != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(TriggerRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (DataFrom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataFrom);
      }
      if (Type != global::MelandGame3.SpecialBuildSubType.SpecialBuildSubTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += formulas_.CalculateSize(_repeated_formulas_codec);
      if (GridNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GridNum);
      }
      size += needFuel_.CalculateSize(_repeated_needFuel_codec);
      if (BurningRation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BurningRation);
      }
      if (MaxChars != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxChars);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (DisplayTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisplayTime);
      }
      if (TriggerRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TriggerRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpecialBuildSettings other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.DataFrom != 0) {
        DataFrom = other.DataFrom;
      }
      if (other.Type != global::MelandGame3.SpecialBuildSubType.SpecialBuildSubTypeUnknown) {
        Type = other.Type;
      }
      formulas_.Add(other.formulas_);
      if (other.GridNum != 0) {
        GridNum = other.GridNum;
      }
      needFuel_.Add(other.needFuel_);
      if (other.BurningRation != 0) {
        BurningRation = other.BurningRation;
      }
      if (other.MaxChars != 0) {
        MaxChars = other.MaxChars;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.DisplayTime != 0) {
        DisplayTime = other.DisplayTime;
      }
      if (other.TriggerRange != 0) {
        TriggerRange = other.TriggerRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            DataFrom = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::MelandGame3.SpecialBuildSubType) input.ReadEnum();
            break;
          }
          case 34:
          case 32: {
            formulas_.AddEntriesFrom(input, _repeated_formulas_codec);
            break;
          }
          case 40: {
            GridNum = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            needFuel_.AddEntriesFrom(input, _repeated_needFuel_codec);
            break;
          }
          case 56: {
            BurningRation = input.ReadInt32();
            break;
          }
          case 64: {
            MaxChars = input.ReadInt32();
            break;
          }
          case 74: {
            Content = input.ReadString();
            break;
          }
          case 80: {
            DisplayTime = input.ReadInt32();
            break;
          }
          case 88: {
            TriggerRange = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            DataFrom = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::MelandGame3.SpecialBuildSubType) input.ReadEnum();
            break;
          }
          case 34:
          case 32: {
            formulas_.AddEntriesFrom(ref input, _repeated_formulas_codec);
            break;
          }
          case 40: {
            GridNum = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            needFuel_.AddEntriesFrom(ref input, _repeated_needFuel_codec);
            break;
          }
          case 56: {
            BurningRation = input.ReadInt32();
            break;
          }
          case 64: {
            MaxChars = input.ReadInt32();
            break;
          }
          case 74: {
            Content = input.ReadString();
            break;
          }
          case 80: {
            DisplayTime = input.ReadInt32();
            break;
          }
          case 88: {
            TriggerRange = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GainItem : pb::IMessage<GainItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GainItem> _parser = new pb::MessageParser<GainItem>(() => new GainItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GainItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GainItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GainItem(GainItem other) : this() {
      id_ = other.id_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GainItem Clone() {
      return new GainItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GainItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GainItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GainItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BotGain : pb::IMessage<BotGain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BotGain> _parser = new pb::MessageParser<BotGain>(() => new BotGain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BotGain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotGain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotGain(BotGain other) : this() {
      botId_ = other.botId_;
      levelDis_ = other.levelDis_;
      fuelDis_ = other.fuelDis_;
      itemList_ = other.itemList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BotGain Clone() {
      return new BotGain(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private long botId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BotId {
      get { return botId_; }
      set {
        botId_ = value;
      }
    }

    /// <summary>Field number for the "level_dis" field.</summary>
    public const int LevelDisFieldNumber = 2;
    private int levelDis_;
    /// <summary>
    /// 等级变化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LevelDis {
      get { return levelDis_; }
      set {
        levelDis_ = value;
      }
    }

    /// <summary>Field number for the "fuel_dis" field.</summary>
    public const int FuelDisFieldNumber = 3;
    private int fuelDis_;
    /// <summary>
    /// 燃油变化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FuelDis {
      get { return fuelDis_; }
      set {
        fuelDis_ = value;
      }
    }

    /// <summary>Field number for the "item_list" field.</summary>
    public const int ItemListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::MelandGame3.GainItem> _repeated_itemList_codec
        = pb::FieldCodec.ForMessage(34, global::MelandGame3.GainItem.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.GainItem> itemList_ = new pbc::RepeatedField<global::MelandGame3.GainItem>();
    /// <summary>
    /// 物品变化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.GainItem> ItemList {
      get { return itemList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BotGain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BotGain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (LevelDis != other.LevelDis) return false;
      if (FuelDis != other.FuelDis) return false;
      if(!itemList_.Equals(other.itemList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId != 0L) hash ^= BotId.GetHashCode();
      if (LevelDis != 0) hash ^= LevelDis.GetHashCode();
      if (FuelDis != 0) hash ^= FuelDis.GetHashCode();
      hash ^= itemList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BotId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BotId);
      }
      if (LevelDis != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LevelDis);
      }
      if (FuelDis != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FuelDis);
      }
      itemList_.WriteTo(output, _repeated_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BotId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BotId);
      }
      if (LevelDis != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LevelDis);
      }
      if (FuelDis != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FuelDis);
      }
      itemList_.WriteTo(ref output, _repeated_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BotId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BotId);
      }
      if (LevelDis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelDis);
      }
      if (FuelDis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FuelDis);
      }
      size += itemList_.CalculateSize(_repeated_itemList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BotGain other) {
      if (other == null) {
        return;
      }
      if (other.BotId != 0L) {
        BotId = other.BotId;
      }
      if (other.LevelDis != 0) {
        LevelDis = other.LevelDis;
      }
      if (other.FuelDis != 0) {
        FuelDis = other.FuelDis;
      }
      itemList_.Add(other.itemList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BotId = input.ReadInt64();
            break;
          }
          case 16: {
            LevelDis = input.ReadInt32();
            break;
          }
          case 24: {
            FuelDis = input.ReadInt32();
            break;
          }
          case 34: {
            itemList_.AddEntriesFrom(input, _repeated_itemList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BotId = input.ReadInt64();
            break;
          }
          case 16: {
            LevelDis = input.ReadInt32();
            break;
          }
          case 24: {
            FuelDis = input.ReadInt32();
            break;
          }
          case 34: {
            itemList_.AddEntriesFrom(ref input, _repeated_itemList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 实体控件属性
  /// </summary>
  public sealed partial class EntityAttribute : pb::IMessage<EntityAttribute>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityAttribute> _parser = new pb::MessageParser<EntityAttribute>(() => new EntityAttribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAttribute(EntityAttribute other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      widgets_ = other.widgets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAttribute Clone() {
      return new EntityAttribute(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::MelandGame3.EntityId entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "widgets" field.</summary>
    public const int WidgetsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MelandGame3.Widget> _repeated_widgets_codec
        = pb::FieldCodec.ForMessage(26, global::MelandGame3.Widget.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Widget> widgets_ = new pbc::RepeatedField<global::MelandGame3.Widget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Widget> Widgets {
      get { return widgets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if(!widgets_.Equals(other.widgets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      hash ^= widgets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      widgets_.WriteTo(output, _repeated_widgets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      widgets_.WriteTo(ref output, _repeated_widgets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      size += widgets_.CalculateSize(_repeated_widgets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityAttribute other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::MelandGame3.EntityId();
        }
        Entity.MergeFrom(other.Entity);
      }
      widgets_.Add(other.widgets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 26: {
            widgets_.AddEntriesFrom(input, _repeated_widgets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 26: {
            widgets_.AddEntriesFrom(ref input, _repeated_widgets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityAttributes : pb::IMessage<EntityAttributes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityAttributes> _parser = new pb::MessageParser<EntityAttributes>(() => new EntityAttributes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityAttributes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAttributes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAttributes(EntityAttributes other) : this() {
      widgets_ = other.widgets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAttributes Clone() {
      return new EntityAttributes(this);
    }

    /// <summary>Field number for the "widgets" field.</summary>
    public const int WidgetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MelandGame3.Widget> _repeated_widgets_codec
        = pb::FieldCodec.ForMessage(10, global::MelandGame3.Widget.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Widget> widgets_ = new pbc::RepeatedField<global::MelandGame3.Widget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Widget> Widgets {
      get { return widgets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityAttributes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityAttributes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!widgets_.Equals(other.widgets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= widgets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      widgets_.WriteTo(output, _repeated_widgets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      widgets_.WriteTo(ref output, _repeated_widgets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += widgets_.CalculateSize(_repeated_widgets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityAttributes other) {
      if (other == null) {
        return;
      }
      widgets_.Add(other.widgets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            widgets_.AddEntriesFrom(input, _repeated_widgets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            widgets_.AddEntriesFrom(ref input, _repeated_widgets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Student : pb::IMessage<Student>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Student> _parser = new pb::MessageParser<Student>(() => new Student());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Student> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Student() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Student(Student other) : this() {
      id_ = other.id_;
      gameName_ = other.gameName_;
      hashId_ = other.hashId_;
      realName_ = other.realName_;
      rc_ = other.rc_ != null ? other.rc_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Student Clone() {
      return new Student(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_name" field.</summary>
    public const int GameNameFieldNumber = 2;
    private string gameName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash_id" field.</summary>
    public const int HashIdFieldNumber = 3;
    private string hashId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HashId {
      get { return hashId_; }
      set {
        hashId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "real_name" field.</summary>
    public const int RealNameFieldNumber = 4;
    private string realName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RealName {
      get { return realName_; }
      set {
        realName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rc" field.</summary>
    public const int RcFieldNumber = 5;
    private global::MelandGame3.VectorXY rc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY Rc {
      get { return rc_; }
      set {
        rc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Student);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Student other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GameName != other.GameName) return false;
      if (HashId != other.HashId) return false;
      if (RealName != other.RealName) return false;
      if (!object.Equals(Rc, other.Rc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      if (HashId.Length != 0) hash ^= HashId.GetHashCode();
      if (RealName.Length != 0) hash ^= RealName.GetHashCode();
      if (rc_ != null) hash ^= Rc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (GameName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameName);
      }
      if (HashId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HashId);
      }
      if (RealName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RealName);
      }
      if (rc_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Rc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (GameName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameName);
      }
      if (HashId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HashId);
      }
      if (RealName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RealName);
      }
      if (rc_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Rc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (HashId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashId);
      }
      if (RealName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RealName);
      }
      if (rc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Student other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      if (other.HashId.Length != 0) {
        HashId = other.HashId;
      }
      if (other.RealName.Length != 0) {
        RealName = other.RealName;
      }
      if (other.rc_ != null) {
        if (rc_ == null) {
          Rc = new global::MelandGame3.VectorXY();
        }
        Rc.MergeFrom(other.Rc);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            GameName = input.ReadString();
            break;
          }
          case 26: {
            HashId = input.ReadString();
            break;
          }
          case 34: {
            RealName = input.ReadString();
            break;
          }
          case 42: {
            if (rc_ == null) {
              Rc = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Rc);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            GameName = input.ReadString();
            break;
          }
          case 26: {
            HashId = input.ReadString();
            break;
          }
          case 34: {
            RealName = input.ReadString();
            break;
          }
          case 42: {
            if (rc_ == null) {
              Rc = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Rc);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingPoint : pb::IMessage<BuildingPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingPoint> _parser = new pb::MessageParser<BuildingPoint>(() => new BuildingPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingPoint(BuildingPoint other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingPoint Clone() {
      return new BuildingPoint(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private int z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private global::MelandGame3.VectorXY dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Z != 0) hash ^= Z.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Z != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Z);
      }
      if (dir_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Z != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Z);
      }
      if (dir_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Z != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Z);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingPoint other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Z != 0) {
        Z = other.Z;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.VectorXY();
        }
        Dir.MergeFrom(other.Dir);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Z = input.ReadInt32();
            break;
          }
          case 34: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Z = input.ReadInt32();
            break;
          }
          case 34: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityAdd : pb::IMessage<EntityAdd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityAdd> _parser = new pb::MessageParser<EntityAdd>(() => new EntityAdd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityAdd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAdd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAdd(EntityAdd other) : this() {
      buildPuppet_ = other.buildPuppet_;
      itemId_ = other.itemId_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      mirror_ = other.mirror_;
      fromEntityTemplate_ = other.fromEntityTemplate_;
      stateId_ = other.stateId_;
      cid_ = other.cid_;
      isItem_ = other.isItem_;
      forceDir_ = other.forceDir_.Clone();
      survivalTime_ = other.survivalTime_;
      pictureFrameUrl_ = other.pictureFrameUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAdd Clone() {
      return new EntityAdd(this);
    }

    /// <summary>Field number for the "build_puppet" field.</summary>
    public const int BuildPuppetFieldNumber = 1;
    private bool buildPuppet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BuildPuppet {
      get { return buildPuppet_; }
      set {
        buildPuppet_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private string itemId_ = "";
    /// <summary>
    ///道具唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemId {
      get { return itemId_; }
      set {
        itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 3;
    private global::MelandGame3.Vector3 pos_;
    /// <summary>
    /// 摆放的位置 pix
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 5;
    private bool mirror_;
    /// <summary>
    /// 是否镜像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "from_entity_template" field.</summary>
    public const int FromEntityTemplateFieldNumber = 6;
    private bool fromEntityTemplate_;
    /// <summary>
    /// 使用实体模板创建?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FromEntityTemplate {
      get { return fromEntityTemplate_; }
      set {
        fromEntityTemplate_ = value;
      }
    }

    /// <summary>Field number for the "state_id" field.</summary>
    public const int StateIdFieldNumber = 7;
    private int stateId_;
    /// <summary>
    /// 当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 8;
    private int cid_;
    /// <summary>
    /// 建造物品CID 服务器流转用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "isItem" field.</summary>
    public const int IsItemFieldNumber = 9;
    private bool isItem_;
    /// <summary>
    /// 是否来自于item表的物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsItem {
      get { return isItem_; }
      set {
        isItem_ = value;
      }
    }

    /// <summary>Field number for the "force_dir" field.</summary>
    public const int ForceDirFieldNumber = 10;
    private static readonly pb::FieldCodec<global::MelandGame3.Vector3> _repeated_forceDir_codec
        = pb::FieldCodec.ForMessage(82, global::MelandGame3.Vector3.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Vector3> forceDir_ = new pbc::RepeatedField<global::MelandGame3.Vector3>();
    /// <summary>
    /// 实体场景作用力向量(放大1000倍 取整)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Vector3> ForceDir {
      get { return forceDir_; }
    }

    /// <summary>Field number for the "survival_time" field.</summary>
    public const int SurvivalTimeFieldNumber = 11;
    private int survivalTime_;
    /// <summary>
    /// 建造到地图后实体的存活时间 单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SurvivalTime {
      get { return survivalTime_; }
      set {
        survivalTime_ = value;
      }
    }

    /// <summary>Field number for the "picture_frame_url" field.</summary>
    public const int PictureFrameUrlFieldNumber = 12;
    private string pictureFrameUrl_ = "";
    /// <summary>
    /// 第三方实体相框地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PictureFrameUrl {
      get { return pictureFrameUrl_; }
      set {
        pictureFrameUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityAdd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityAdd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildPuppet != other.BuildPuppet) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (Mirror != other.Mirror) return false;
      if (FromEntityTemplate != other.FromEntityTemplate) return false;
      if (StateId != other.StateId) return false;
      if (Cid != other.Cid) return false;
      if (IsItem != other.IsItem) return false;
      if(!forceDir_.Equals(other.forceDir_)) return false;
      if (SurvivalTime != other.SurvivalTime) return false;
      if (PictureFrameUrl != other.PictureFrameUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildPuppet != false) hash ^= BuildPuppet.GetHashCode();
      if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (Mirror != false) hash ^= Mirror.GetHashCode();
      if (FromEntityTemplate != false) hash ^= FromEntityTemplate.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (IsItem != false) hash ^= IsItem.GetHashCode();
      hash ^= forceDir_.GetHashCode();
      if (SurvivalTime != 0) hash ^= SurvivalTime.GetHashCode();
      if (PictureFrameUrl.Length != 0) hash ^= PictureFrameUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BuildPuppet != false) {
        output.WriteRawTag(8);
        output.WriteBool(BuildPuppet);
      }
      if (ItemId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ItemId);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Dir);
      }
      if (Mirror != false) {
        output.WriteRawTag(40);
        output.WriteBool(Mirror);
      }
      if (FromEntityTemplate != false) {
        output.WriteRawTag(48);
        output.WriteBool(FromEntityTemplate);
      }
      if (StateId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StateId);
      }
      if (Cid != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Cid);
      }
      if (IsItem != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsItem);
      }
      forceDir_.WriteTo(output, _repeated_forceDir_codec);
      if (SurvivalTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SurvivalTime);
      }
      if (PictureFrameUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PictureFrameUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BuildPuppet != false) {
        output.WriteRawTag(8);
        output.WriteBool(BuildPuppet);
      }
      if (ItemId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ItemId);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Dir);
      }
      if (Mirror != false) {
        output.WriteRawTag(40);
        output.WriteBool(Mirror);
      }
      if (FromEntityTemplate != false) {
        output.WriteRawTag(48);
        output.WriteBool(FromEntityTemplate);
      }
      if (StateId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StateId);
      }
      if (Cid != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Cid);
      }
      if (IsItem != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsItem);
      }
      forceDir_.WriteTo(ref output, _repeated_forceDir_codec);
      if (SurvivalTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SurvivalTime);
      }
      if (PictureFrameUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PictureFrameUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BuildPuppet != false) {
        size += 1 + 1;
      }
      if (ItemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (Mirror != false) {
        size += 1 + 1;
      }
      if (FromEntityTemplate != false) {
        size += 1 + 1;
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (IsItem != false) {
        size += 1 + 1;
      }
      size += forceDir_.CalculateSize(_repeated_forceDir_codec);
      if (SurvivalTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SurvivalTime);
      }
      if (PictureFrameUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PictureFrameUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityAdd other) {
      if (other == null) {
        return;
      }
      if (other.BuildPuppet != false) {
        BuildPuppet = other.BuildPuppet;
      }
      if (other.ItemId.Length != 0) {
        ItemId = other.ItemId;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::MelandGame3.Vector3();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.Mirror != false) {
        Mirror = other.Mirror;
      }
      if (other.FromEntityTemplate != false) {
        FromEntityTemplate = other.FromEntityTemplate;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.IsItem != false) {
        IsItem = other.IsItem;
      }
      forceDir_.Add(other.forceDir_);
      if (other.SurvivalTime != 0) {
        SurvivalTime = other.SurvivalTime;
      }
      if (other.PictureFrameUrl.Length != 0) {
        PictureFrameUrl = other.PictureFrameUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildPuppet = input.ReadBool();
            break;
          }
          case 18: {
            ItemId = input.ReadString();
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 34: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 40: {
            Mirror = input.ReadBool();
            break;
          }
          case 48: {
            FromEntityTemplate = input.ReadBool();
            break;
          }
          case 56: {
            StateId = input.ReadInt32();
            break;
          }
          case 64: {
            Cid = input.ReadInt32();
            break;
          }
          case 72: {
            IsItem = input.ReadBool();
            break;
          }
          case 82: {
            forceDir_.AddEntriesFrom(input, _repeated_forceDir_codec);
            break;
          }
          case 88: {
            SurvivalTime = input.ReadInt32();
            break;
          }
          case 98: {
            PictureFrameUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BuildPuppet = input.ReadBool();
            break;
          }
          case 18: {
            ItemId = input.ReadString();
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 34: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 40: {
            Mirror = input.ReadBool();
            break;
          }
          case 48: {
            FromEntityTemplate = input.ReadBool();
            break;
          }
          case 56: {
            StateId = input.ReadInt32();
            break;
          }
          case 64: {
            Cid = input.ReadInt32();
            break;
          }
          case 72: {
            IsItem = input.ReadBool();
            break;
          }
          case 82: {
            forceDir_.AddEntriesFrom(ref input, _repeated_forceDir_codec);
            break;
          }
          case 88: {
            SurvivalTime = input.ReadInt32();
            break;
          }
          case 98: {
            PictureFrameUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityCopy : pb::IMessage<EntityCopy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityCopy> _parser = new pb::MessageParser<EntityCopy>(() => new EntityCopy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityCopy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityCopy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityCopy(EntityCopy other) : this() {
      from_ = other.from_ != null ? other.from_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      mirror_ = other.mirror_;
      forceDir_ = other.forceDir_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityCopy Clone() {
      return new EntityCopy(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private global::MelandGame3.EntityId from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::MelandGame3.Vector3 pos_;
    /// <summary>
    /// 位置 pix
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 3;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 5;
    private bool mirror_;
    /// <summary>
    /// 是否镜像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "force_dir" field.</summary>
    public const int ForceDirFieldNumber = 6;
    private static readonly pb::FieldCodec<global::MelandGame3.Vector3> _repeated_forceDir_codec
        = pb::FieldCodec.ForMessage(50, global::MelandGame3.Vector3.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Vector3> forceDir_ = new pbc::RepeatedField<global::MelandGame3.Vector3>();
    /// <summary>
    /// 实体场景作用力向量(放大1000倍 取整)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Vector3> ForceDir {
      get { return forceDir_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityCopy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityCopy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (Mirror != other.Mirror) return false;
      if(!forceDir_.Equals(other.forceDir_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (from_ != null) hash ^= From.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (Mirror != false) hash ^= Mirror.GetHashCode();
      hash ^= forceDir_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dir);
      }
      if (Mirror != false) {
        output.WriteRawTag(40);
        output.WriteBool(Mirror);
      }
      forceDir_.WriteTo(output, _repeated_forceDir_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dir);
      }
      if (Mirror != false) {
        output.WriteRawTag(40);
        output.WriteBool(Mirror);
      }
      forceDir_.WriteTo(ref output, _repeated_forceDir_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (Mirror != false) {
        size += 1 + 1;
      }
      size += forceDir_.CalculateSize(_repeated_forceDir_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityCopy other) {
      if (other == null) {
        return;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::MelandGame3.EntityId();
        }
        From.MergeFrom(other.From);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::MelandGame3.Vector3();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.Mirror != false) {
        Mirror = other.Mirror;
      }
      forceDir_.Add(other.forceDir_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (from_ == null) {
              From = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(From);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 40: {
            Mirror = input.ReadBool();
            break;
          }
          case 50: {
            forceDir_.AddEntriesFrom(input, _repeated_forceDir_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (from_ == null) {
              From = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(From);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 40: {
            Mirror = input.ReadBool();
            break;
          }
          case 50: {
            forceDir_.AddEntriesFrom(ref input, _repeated_forceDir_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityMove : pb::IMessage<EntityMove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityMove> _parser = new pb::MessageParser<EntityMove>(() => new EntityMove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMove(EntityMove other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      mirror_ = other.mirror_;
      forceDir_ = other.forceDir_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityMove Clone() {
      return new EntityMove(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::MelandGame3.EntityId entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::MelandGame3.Vector3 pos_;
    /// <summary>
    /// 位置坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 3;
    private global::MelandGame3.Vector3 dir_;
    /// <summary>
    /// 朝向(如果不更改这传nil)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "mirror" field.</summary>
    public const int MirrorFieldNumber = 4;
    private int mirror_;
    /// <summary>
    /// 是否镜像(-1=不修改,0=false,1=true)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mirror {
      get { return mirror_; }
      set {
        mirror_ = value;
      }
    }

    /// <summary>Field number for the "force_dir" field.</summary>
    public const int ForceDirFieldNumber = 7;
    private static readonly pb::FieldCodec<global::MelandGame3.Vector3> _repeated_forceDir_codec
        = pb::FieldCodec.ForMessage(58, global::MelandGame3.Vector3.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Vector3> forceDir_ = new pbc::RepeatedField<global::MelandGame3.Vector3>();
    /// <summary>
    /// 实体场景作用力向量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Vector3> ForceDir {
      get { return forceDir_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (Mirror != other.Mirror) return false;
      if(!forceDir_.Equals(other.forceDir_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (Mirror != 0) hash ^= Mirror.GetHashCode();
      hash ^= forceDir_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dir);
      }
      if (Mirror != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Mirror);
      }
      forceDir_.WriteTo(output, _repeated_forceDir_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dir);
      }
      if (Mirror != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Mirror);
      }
      forceDir_.WriteTo(ref output, _repeated_forceDir_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (Mirror != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mirror);
      }
      size += forceDir_.CalculateSize(_repeated_forceDir_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityMove other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::MelandGame3.EntityId();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::MelandGame3.Vector3();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.Mirror != 0) {
        Mirror = other.Mirror;
      }
      forceDir_.Add(other.forceDir_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 32: {
            Mirror = input.ReadInt32();
            break;
          }
          case 58: {
            forceDir_.AddEntriesFrom(input, _repeated_forceDir_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 32: {
            Mirror = input.ReadInt32();
            break;
          }
          case 58: {
            forceDir_.AddEntriesFrom(ref input, _repeated_forceDir_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityDelRes : pb::IMessage<EntityDelRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityDelRes> _parser = new pb::MessageParser<EntityDelRes>(() => new EntityDelRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityDelRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityDelRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityDelRes(EntityDelRes other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityDelRes Clone() {
      return new EntityDelRes(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::MelandGame3.EntityId entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::MelandGame3.Vector3 pos_;
    /// <summary>
    /// 位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 3;
    private global::MelandGame3.Vector3 dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityDelRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityDelRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityDelRes other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::MelandGame3.EntityId();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::MelandGame3.Vector3();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::MelandGame3.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (dir_ == null) {
              Dir = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingModePos : pb::IMessage<BuildingModePos>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingModePos> _parser = new pb::MessageParser<BuildingModePos>(() => new BuildingModePos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingModePos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingModePos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingModePos(BuildingModePos other) : this() {
      cid_ = other.cid_;
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      entityTemplateId_ = other.entityTemplateId_;
      dirs_ = other.dirs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingModePos Clone() {
      return new BuildingModePos(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 2;
    private global::MelandGame3.EntityId entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "entity_template_id" field.</summary>
    public const int EntityTemplateIdFieldNumber = 3;
    private string entityTemplateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntityTemplateId {
      get { return entityTemplateId_; }
      set {
        entityTemplateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dirs" field.</summary>
    public const int DirsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::MelandGame3.BuildingPoint> _repeated_dirs_codec
        = pb::FieldCodec.ForMessage(34, global::MelandGame3.BuildingPoint.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.BuildingPoint> dirs_ = new pbc::RepeatedField<global::MelandGame3.BuildingPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.BuildingPoint> Dirs {
      get { return dirs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingModePos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingModePos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (!object.Equals(Entity, other.Entity)) return false;
      if (EntityTemplateId != other.EntityTemplateId) return false;
      if(!dirs_.Equals(other.dirs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (EntityTemplateId.Length != 0) hash ^= EntityTemplateId.GetHashCode();
      hash ^= dirs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (entity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Entity);
      }
      if (EntityTemplateId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EntityTemplateId);
      }
      dirs_.WriteTo(output, _repeated_dirs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (entity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Entity);
      }
      if (EntityTemplateId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EntityTemplateId);
      }
      dirs_.WriteTo(ref output, _repeated_dirs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (EntityTemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityTemplateId);
      }
      size += dirs_.CalculateSize(_repeated_dirs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingModePos other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::MelandGame3.EntityId();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.EntityTemplateId.Length != 0) {
        EntityTemplateId = other.EntityTemplateId;
      }
      dirs_.Add(other.dirs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 26: {
            EntityTemplateId = input.ReadString();
            break;
          }
          case 34: {
            dirs_.AddEntriesFrom(input, _repeated_dirs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 26: {
            EntityTemplateId = input.ReadString();
            break;
          }
          case 34: {
            dirs_.AddEntriesFrom(ref input, _repeated_dirs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///骨骼动画
  /// </summary>
  public sealed partial class AnimationBone : pb::IMessage<AnimationBone>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnimationBone> _parser = new pb::MessageParser<AnimationBone>(() => new AnimationBone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnimationBone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationBone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationBone(AnimationBone other) : this() {
      id_ = other.id_;
      animName_ = other.animName_;
      resName_ = other.resName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationBone Clone() {
      return new AnimationBone(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "anim_name" field.</summary>
    public const int AnimNameFieldNumber = 2;
    private string animName_ = "";
    /// <summary>
    ///动画名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnimName {
      get { return animName_; }
      set {
        animName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "res_name" field.</summary>
    public const int ResNameFieldNumber = 3;
    private string resName_ = "";
    /// <summary>
    ///资源名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResName {
      get { return resName_; }
      set {
        resName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnimationBone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnimationBone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AnimName != other.AnimName) return false;
      if (ResName != other.ResName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (AnimName.Length != 0) hash ^= AnimName.GetHashCode();
      if (ResName.Length != 0) hash ^= ResName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (AnimName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AnimName);
      }
      if (ResName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (AnimName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AnimName);
      }
      if (ResName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (AnimName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnimName);
      }
      if (ResName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnimationBone other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.AnimName.Length != 0) {
        AnimName = other.AnimName;
      }
      if (other.ResName.Length != 0) {
        ResName = other.ResName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            AnimName = input.ReadString();
            break;
          }
          case 26: {
            ResName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            AnimName = input.ReadString();
            break;
          }
          case 26: {
            ResName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///帧动画
  /// </summary>
  public sealed partial class AnimationFrame : pb::IMessage<AnimationFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnimationFrame> _parser = new pb::MessageParser<AnimationFrame>(() => new AnimationFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnimationFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationFrame(AnimationFrame other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      index_ = other.index_;
      url_ = other.url_;
      rectUrl_ = other.rectUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationFrame Clone() {
      return new AnimationFrame(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 4;
    private string url_ = "";
    /// <summary>
    ///url 斜45度地图纹理
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rect_url" field.</summary>
    public const int RectUrlFieldNumber = 5;
    private string rectUrl_ = "";
    /// <summary>
    ///url 正视角地图纹理
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RectUrl {
      get { return rectUrl_; }
      set {
        rectUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnimationFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnimationFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Index != other.Index) return false;
      if (Url != other.Url) return false;
      if (RectUrl != other.RectUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (RectUrl.Length != 0) hash ^= RectUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (RectUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RectUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (RectUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RectUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (RectUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RectUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnimationFrame other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.RectUrl.Length != 0) {
        RectUrl = other.RectUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 42: {
            RectUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 42: {
            RectUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Animation : pb::IMessage<Animation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Animation> _parser = new pb::MessageParser<Animation>(() => new Animation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Animation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Animation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Animation(Animation other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      index_ = other.index_;
      type_ = other.type_;
      frames_ = other.frames_.Clone();
      boneAnim_ = other.boneAnim_ != null ? other.boneAnim_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Animation Clone() {
      return new Animation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::MelandGame3.AnimationType type_ = global::MelandGame3.AnimationType.AnimationTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AnimationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::MelandGame3.AnimationFrame> _repeated_frames_codec
        = pb::FieldCodec.ForMessage(42, global::MelandGame3.AnimationFrame.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.AnimationFrame> frames_ = new pbc::RepeatedField<global::MelandGame3.AnimationFrame>();
    /// <summary>
    ///帧动画
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.AnimationFrame> Frames {
      get { return frames_; }
    }

    /// <summary>Field number for the "bone_anim" field.</summary>
    public const int BoneAnimFieldNumber = 6;
    private global::MelandGame3.AnimationBone boneAnim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AnimationBone BoneAnim {
      get { return boneAnim_; }
      set {
        boneAnim_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Animation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Animation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Index != other.Index) return false;
      if (Type != other.Type) return false;
      if(!frames_.Equals(other.frames_)) return false;
      if (!object.Equals(BoneAnim, other.BoneAnim)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Type != global::MelandGame3.AnimationType.AnimationTypeUnknown) hash ^= Type.GetHashCode();
      hash ^= frames_.GetHashCode();
      if (boneAnim_ != null) hash ^= BoneAnim.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (Type != global::MelandGame3.AnimationType.AnimationTypeUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      frames_.WriteTo(output, _repeated_frames_codec);
      if (boneAnim_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(BoneAnim);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (Type != global::MelandGame3.AnimationType.AnimationTypeUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      frames_.WriteTo(ref output, _repeated_frames_codec);
      if (boneAnim_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(BoneAnim);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Type != global::MelandGame3.AnimationType.AnimationTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += frames_.CalculateSize(_repeated_frames_codec);
      if (boneAnim_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoneAnim);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Animation other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Type != global::MelandGame3.AnimationType.AnimationTypeUnknown) {
        Type = other.Type;
      }
      frames_.Add(other.frames_);
      if (other.boneAnim_ != null) {
        if (boneAnim_ == null) {
          BoneAnim = new global::MelandGame3.AnimationBone();
        }
        BoneAnim.MergeFrom(other.BoneAnim);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
          case 32: {
            Type = (global::MelandGame3.AnimationType) input.ReadEnum();
            break;
          }
          case 42: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
          case 50: {
            if (boneAnim_ == null) {
              BoneAnim = new global::MelandGame3.AnimationBone();
            }
            input.ReadMessage(BoneAnim);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
          case 32: {
            Type = (global::MelandGame3.AnimationType) input.ReadEnum();
            break;
          }
          case 42: {
            frames_.AddEntriesFrom(ref input, _repeated_frames_codec);
            break;
          }
          case 50: {
            if (boneAnim_ == null) {
              BoneAnim = new global::MelandGame3.AnimationBone();
            }
            input.ReadMessage(BoneAnim);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityAnimations : pb::IMessage<EntityAnimations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityAnimations> _parser = new pb::MessageParser<EntityAnimations>(() => new EntityAnimations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityAnimations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAnimations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAnimations(EntityAnimations other) : this() {
      animations_ = other.animations_.Clone();
      emojis_ = other.emojis_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityAnimations Clone() {
      return new EntityAnimations(this);
    }

    /// <summary>Field number for the "animations" field.</summary>
    public const int AnimationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MelandGame3.Animation> _repeated_animations_codec
        = pb::FieldCodec.ForMessage(10, global::MelandGame3.Animation.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Animation> animations_ = new pbc::RepeatedField<global::MelandGame3.Animation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Animation> Animations {
      get { return animations_; }
    }

    /// <summary>Field number for the "Emojis" field.</summary>
    public const int EmojisFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MelandGame3.Animation> _repeated_emojis_codec
        = pb::FieldCodec.ForMessage(18, global::MelandGame3.Animation.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.Animation> emojis_ = new pbc::RepeatedField<global::MelandGame3.Animation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.Animation> Emojis {
      get { return emojis_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityAnimations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityAnimations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!animations_.Equals(other.animations_)) return false;
      if(!emojis_.Equals(other.emojis_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= animations_.GetHashCode();
      hash ^= emojis_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      animations_.WriteTo(output, _repeated_animations_codec);
      emojis_.WriteTo(output, _repeated_emojis_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      animations_.WriteTo(ref output, _repeated_animations_codec);
      emojis_.WriteTo(ref output, _repeated_emojis_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += animations_.CalculateSize(_repeated_animations_codec);
      size += emojis_.CalculateSize(_repeated_emojis_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityAnimations other) {
      if (other == null) {
        return;
      }
      animations_.Add(other.animations_);
      emojis_.Add(other.emojis_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            animations_.AddEntriesFrom(input, _repeated_animations_codec);
            break;
          }
          case 18: {
            emojis_.AddEntriesFrom(input, _repeated_emojis_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            animations_.AddEntriesFrom(ref input, _repeated_animations_codec);
            break;
          }
          case 18: {
            emojis_.AddEntriesFrom(ref input, _repeated_emojis_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityTemplate : pb::IMessage<EntityTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityTemplate> _parser = new pb::MessageParser<EntityTemplate>(() => new EntityTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTemplate(EntityTemplate other) : this() {
      playerName_ = other.playerName_;
      templateId_ = other.templateId_;
      name_ = other.name_;
      desc_ = other.desc_;
      walkDir_ = other.walkDir_;
      iconUrl_ = other.iconUrl_;
      imageUrl_ = other.imageUrl_;
      animUrl_ = other.animUrl_.Clone();
      area_ = other.area_;
      direction_ = other.direction_;
      buildHeight_ = other.buildHeight_;
      buildType_ = other.buildType_;
      fromCid_ = other.fromCid_;
      createTypeId_ = other.createTypeId_;
      codeLibId_ = other.codeLibId_;
      animations_ = other.animations_ != null ? other.animations_.Clone() : null;
      attribute_ = other.attribute_ != null ? other.attribute_.Clone() : null;
      audios_ = other.audios_ != null ? other.audios_.Clone() : null;
      timeLines_ = other.timeLines_ != null ? other.timeLines_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTemplate Clone() {
      return new EntityTemplate(this);
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 2;
    private string templateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 4;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "walk_dir" field.</summary>
    public const int WalkDirFieldNumber = 5;
    private string walkDir_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WalkDir {
      get { return walkDir_; }
      set {
        walkDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_url" field.</summary>
    public const int IconUrlFieldNumber = 6;
    private string iconUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconUrl {
      get { return iconUrl_; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_url" field.</summary>
    public const int ImageUrlFieldNumber = 7;
    private string imageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "anim_url" field.</summary>
    public const int AnimUrlFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_animUrl_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> animUrl_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AnimUrl {
      get { return animUrl_; }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 9;
    private string area_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Area {
      get { return area_; }
      set {
        area_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 10;
    private int direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "build_height" field.</summary>
    public const int BuildHeightFieldNumber = 11;
    private int buildHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildHeight {
      get { return buildHeight_; }
      set {
        buildHeight_ = value;
      }
    }

    /// <summary>Field number for the "build_type" field.</summary>
    public const int BuildTypeFieldNumber = 12;
    private int buildType_;
    /// <summary>
    /// 0 = 建筑; 1 = 生物
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildType {
      get { return buildType_; }
      set {
        buildType_ = value;
      }
    }

    /// <summary>Field number for the "from_cid" field.</summary>
    public const int FromCidFieldNumber = 13;
    private int fromCid_;
    /// <summary>
    /// 继承自系统配置的模板 使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FromCid {
      get { return fromCid_; }
      set {
        fromCid_ = value;
      }
    }

    /// <summary>Field number for the "create_type_id" field.</summary>
    public const int CreateTypeIdFieldNumber = 14;
    private int createTypeId_;
    /// <summary>
    /// 外观属性配置id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CreateTypeId {
      get { return createTypeId_; }
      set {
        createTypeId_ = value;
      }
    }

    /// <summary>Field number for the "code_lib_id" field.</summary>
    public const int CodeLibIdFieldNumber = 15;
    private int codeLibId_;
    /// <summary>
    /// 使用的代码库Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CodeLibId {
      get { return codeLibId_; }
      set {
        codeLibId_ = value;
      }
    }

    /// <summary>Field number for the "animations" field.</summary>
    public const int AnimationsFieldNumber = 16;
    private global::MelandGame3.EntityAnimations animations_;
    /// <summary>
    /// 动画 没有配置=nil
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAnimations Animations {
      get { return animations_; }
      set {
        animations_ = value;
      }
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 17;
    private global::MelandGame3.EntityAttributes attribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAttributes Attribute {
      get { return attribute_; }
      set {
        attribute_ = value;
      }
    }

    /// <summary>Field number for the "audios" field.</summary>
    public const int AudiosFieldNumber = 18;
    private global::MelandGame3.EntityAudios audios_;
    /// <summary>
    /// 音频
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAudios Audios {
      get { return audios_; }
      set {
        audios_ = value;
      }
    }

    /// <summary>Field number for the "time_lines" field.</summary>
    public const int TimeLinesFieldNumber = 19;
    private global::MelandGame3.EntityTimeLineList timeLines_;
    /// <summary>
    /// 时间线
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityTimeLineList TimeLines {
      get { return timeLines_; }
      set {
        timeLines_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      if (TemplateId != other.TemplateId) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (WalkDir != other.WalkDir) return false;
      if (IconUrl != other.IconUrl) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if(!animUrl_.Equals(other.animUrl_)) return false;
      if (Area != other.Area) return false;
      if (Direction != other.Direction) return false;
      if (BuildHeight != other.BuildHeight) return false;
      if (BuildType != other.BuildType) return false;
      if (FromCid != other.FromCid) return false;
      if (CreateTypeId != other.CreateTypeId) return false;
      if (CodeLibId != other.CodeLibId) return false;
      if (!object.Equals(Animations, other.Animations)) return false;
      if (!object.Equals(Attribute, other.Attribute)) return false;
      if (!object.Equals(Audios, other.Audios)) return false;
      if (!object.Equals(TimeLines, other.TimeLines)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (WalkDir.Length != 0) hash ^= WalkDir.GetHashCode();
      if (IconUrl.Length != 0) hash ^= IconUrl.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      hash ^= animUrl_.GetHashCode();
      if (Area.Length != 0) hash ^= Area.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (BuildHeight != 0) hash ^= BuildHeight.GetHashCode();
      if (BuildType != 0) hash ^= BuildType.GetHashCode();
      if (FromCid != 0) hash ^= FromCid.GetHashCode();
      if (CreateTypeId != 0) hash ^= CreateTypeId.GetHashCode();
      if (CodeLibId != 0) hash ^= CodeLibId.GetHashCode();
      if (animations_ != null) hash ^= Animations.GetHashCode();
      if (attribute_ != null) hash ^= Attribute.GetHashCode();
      if (audios_ != null) hash ^= Audios.GetHashCode();
      if (timeLines_ != null) hash ^= TimeLines.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      if (WalkDir.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(WalkDir);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IconUrl);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ImageUrl);
      }
      animUrl_.WriteTo(output, _repeated_animUrl_codec);
      if (Area.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Area);
      }
      if (Direction != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Direction);
      }
      if (BuildHeight != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(BuildHeight);
      }
      if (BuildType != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BuildType);
      }
      if (FromCid != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(FromCid);
      }
      if (CreateTypeId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(CreateTypeId);
      }
      if (CodeLibId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(CodeLibId);
      }
      if (animations_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Animations);
      }
      if (attribute_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Attribute);
      }
      if (audios_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Audios);
      }
      if (timeLines_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(TimeLines);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      if (WalkDir.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(WalkDir);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IconUrl);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ImageUrl);
      }
      animUrl_.WriteTo(ref output, _repeated_animUrl_codec);
      if (Area.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Area);
      }
      if (Direction != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Direction);
      }
      if (BuildHeight != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(BuildHeight);
      }
      if (BuildType != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BuildType);
      }
      if (FromCid != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(FromCid);
      }
      if (CreateTypeId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(CreateTypeId);
      }
      if (CodeLibId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(CodeLibId);
      }
      if (animations_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Animations);
      }
      if (attribute_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Attribute);
      }
      if (audios_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Audios);
      }
      if (timeLines_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(TimeLines);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (WalkDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WalkDir);
      }
      if (IconUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      size += animUrl_.CalculateSize(_repeated_animUrl_codec);
      if (Area.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Area);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Direction);
      }
      if (BuildHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildHeight);
      }
      if (BuildType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildType);
      }
      if (FromCid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromCid);
      }
      if (CreateTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreateTypeId);
      }
      if (CodeLibId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodeLibId);
      }
      if (animations_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Animations);
      }
      if (attribute_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Attribute);
      }
      if (audios_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Audios);
      }
      if (timeLines_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimeLines);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityTemplate other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.WalkDir.Length != 0) {
        WalkDir = other.WalkDir;
      }
      if (other.IconUrl.Length != 0) {
        IconUrl = other.IconUrl;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
      animUrl_.Add(other.animUrl_);
      if (other.Area.Length != 0) {
        Area = other.Area;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      if (other.BuildHeight != 0) {
        BuildHeight = other.BuildHeight;
      }
      if (other.BuildType != 0) {
        BuildType = other.BuildType;
      }
      if (other.FromCid != 0) {
        FromCid = other.FromCid;
      }
      if (other.CreateTypeId != 0) {
        CreateTypeId = other.CreateTypeId;
      }
      if (other.CodeLibId != 0) {
        CodeLibId = other.CodeLibId;
      }
      if (other.animations_ != null) {
        if (animations_ == null) {
          Animations = new global::MelandGame3.EntityAnimations();
        }
        Animations.MergeFrom(other.Animations);
      }
      if (other.attribute_ != null) {
        if (attribute_ == null) {
          Attribute = new global::MelandGame3.EntityAttributes();
        }
        Attribute.MergeFrom(other.Attribute);
      }
      if (other.audios_ != null) {
        if (audios_ == null) {
          Audios = new global::MelandGame3.EntityAudios();
        }
        Audios.MergeFrom(other.Audios);
      }
      if (other.timeLines_ != null) {
        if (timeLines_ == null) {
          TimeLines = new global::MelandGame3.EntityTimeLineList();
        }
        TimeLines.MergeFrom(other.TimeLines);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 18: {
            TemplateId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 42: {
            WalkDir = input.ReadString();
            break;
          }
          case 50: {
            IconUrl = input.ReadString();
            break;
          }
          case 58: {
            ImageUrl = input.ReadString();
            break;
          }
          case 66: {
            animUrl_.AddEntriesFrom(input, _repeated_animUrl_codec);
            break;
          }
          case 74: {
            Area = input.ReadString();
            break;
          }
          case 80: {
            Direction = input.ReadInt32();
            break;
          }
          case 88: {
            BuildHeight = input.ReadInt32();
            break;
          }
          case 96: {
            BuildType = input.ReadInt32();
            break;
          }
          case 104: {
            FromCid = input.ReadInt32();
            break;
          }
          case 112: {
            CreateTypeId = input.ReadInt32();
            break;
          }
          case 120: {
            CodeLibId = input.ReadInt32();
            break;
          }
          case 130: {
            if (animations_ == null) {
              Animations = new global::MelandGame3.EntityAnimations();
            }
            input.ReadMessage(Animations);
            break;
          }
          case 138: {
            if (attribute_ == null) {
              Attribute = new global::MelandGame3.EntityAttributes();
            }
            input.ReadMessage(Attribute);
            break;
          }
          case 146: {
            if (audios_ == null) {
              Audios = new global::MelandGame3.EntityAudios();
            }
            input.ReadMessage(Audios);
            break;
          }
          case 154: {
            if (timeLines_ == null) {
              TimeLines = new global::MelandGame3.EntityTimeLineList();
            }
            input.ReadMessage(TimeLines);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 18: {
            TemplateId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 42: {
            WalkDir = input.ReadString();
            break;
          }
          case 50: {
            IconUrl = input.ReadString();
            break;
          }
          case 58: {
            ImageUrl = input.ReadString();
            break;
          }
          case 66: {
            animUrl_.AddEntriesFrom(ref input, _repeated_animUrl_codec);
            break;
          }
          case 74: {
            Area = input.ReadString();
            break;
          }
          case 80: {
            Direction = input.ReadInt32();
            break;
          }
          case 88: {
            BuildHeight = input.ReadInt32();
            break;
          }
          case 96: {
            BuildType = input.ReadInt32();
            break;
          }
          case 104: {
            FromCid = input.ReadInt32();
            break;
          }
          case 112: {
            CreateTypeId = input.ReadInt32();
            break;
          }
          case 120: {
            CodeLibId = input.ReadInt32();
            break;
          }
          case 130: {
            if (animations_ == null) {
              Animations = new global::MelandGame3.EntityAnimations();
            }
            input.ReadMessage(Animations);
            break;
          }
          case 138: {
            if (attribute_ == null) {
              Attribute = new global::MelandGame3.EntityAttributes();
            }
            input.ReadMessage(Attribute);
            break;
          }
          case 146: {
            if (audios_ == null) {
              Audios = new global::MelandGame3.EntityAudios();
            }
            input.ReadMessage(Audios);
            break;
          }
          case 154: {
            if (timeLines_ == null) {
              TimeLines = new global::MelandGame3.EntityTimeLineList();
            }
            input.ReadMessage(TimeLines);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///组件 位置 xy 为相对位置
  /// </summary>
  public sealed partial class EntityPosition : pb::IMessage<EntityPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityPosition> _parser = new pb::MessageParser<EntityPosition>(() => new EntityPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityPosition(EntityPosition other) : this() {
      templateId_ = other.templateId_;
      vec_ = other.vec_ != null ? other.vec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityPosition Clone() {
      return new EntityPosition(this);
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 1;
    private string templateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vec" field.</summary>
    public const int VecFieldNumber = 2;
    private global::MelandGame3.Vector3 vec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Vector3 Vec {
      get { return vec_; }
      set {
        vec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemplateId != other.TemplateId) return false;
      if (!object.Equals(Vec, other.Vec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (vec_ != null) hash ^= Vec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateId);
      }
      if (vec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Vec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateId);
      }
      if (vec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Vec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (vec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityPosition other) {
      if (other == null) {
        return;
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.vec_ != null) {
        if (vec_ == null) {
          Vec = new global::MelandGame3.Vector3();
        }
        Vec.MergeFrom(other.Vec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TemplateId = input.ReadString();
            break;
          }
          case 18: {
            if (vec_ == null) {
              Vec = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Vec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TemplateId = input.ReadString();
            break;
          }
          case 18: {
            if (vec_ == null) {
              Vec = new global::MelandGame3.Vector3();
            }
            input.ReadMessage(Vec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///组件组合
  /// </summary>
  public sealed partial class EntityTemplateGroup : pb::IMessage<EntityTemplateGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityTemplateGroup> _parser = new pb::MessageParser<EntityTemplateGroup>(() => new EntityTemplateGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityTemplateGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTemplateGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTemplateGroup(EntityTemplateGroup other) : this() {
      templateId_ = other.templateId_;
      name_ = other.name_;
      desc_ = other.desc_;
      iconUrl_ = other.iconUrl_;
      etemplates_ = other.etemplates_.Clone();
      epos_ = other.epos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityTemplateGroup Clone() {
      return new EntityTemplateGroup(this);
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 1;
    private string templateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_url" field.</summary>
    public const int IconUrlFieldNumber = 4;
    private string iconUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconUrl {
      get { return iconUrl_; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "etemplates" field.</summary>
    public const int EtemplatesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::MelandGame3.EntityTemplate> _repeated_etemplates_codec
        = pb::FieldCodec.ForMessage(42, global::MelandGame3.EntityTemplate.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.EntityTemplate> etemplates_ = new pbc::RepeatedField<global::MelandGame3.EntityTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.EntityTemplate> Etemplates {
      get { return etemplates_; }
    }

    /// <summary>Field number for the "epos" field.</summary>
    public const int EposFieldNumber = 6;
    private static readonly pb::FieldCodec<global::MelandGame3.EntityPosition> _repeated_epos_codec
        = pb::FieldCodec.ForMessage(50, global::MelandGame3.EntityPosition.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.EntityPosition> epos_ = new pbc::RepeatedField<global::MelandGame3.EntityPosition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.EntityPosition> Epos {
      get { return epos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityTemplateGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityTemplateGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemplateId != other.TemplateId) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (IconUrl != other.IconUrl) return false;
      if(!etemplates_.Equals(other.etemplates_)) return false;
      if(!epos_.Equals(other.epos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (IconUrl.Length != 0) hash ^= IconUrl.GetHashCode();
      hash ^= etemplates_.GetHashCode();
      hash ^= epos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IconUrl);
      }
      etemplates_.WriteTo(output, _repeated_etemplates_codec);
      epos_.WriteTo(output, _repeated_epos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IconUrl);
      }
      etemplates_.WriteTo(ref output, _repeated_etemplates_codec);
      epos_.WriteTo(ref output, _repeated_epos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (IconUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      size += etemplates_.CalculateSize(_repeated_etemplates_codec);
      size += epos_.CalculateSize(_repeated_epos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityTemplateGroup other) {
      if (other == null) {
        return;
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.IconUrl.Length != 0) {
        IconUrl = other.IconUrl;
      }
      etemplates_.Add(other.etemplates_);
      epos_.Add(other.epos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TemplateId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 34: {
            IconUrl = input.ReadString();
            break;
          }
          case 42: {
            etemplates_.AddEntriesFrom(input, _repeated_etemplates_codec);
            break;
          }
          case 50: {
            epos_.AddEntriesFrom(input, _repeated_epos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TemplateId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 34: {
            IconUrl = input.ReadString();
            break;
          }
          case 42: {
            etemplates_.AddEntriesFrom(ref input, _repeated_etemplates_codec);
            break;
          }
          case 50: {
            epos_.AddEntriesFrom(ref input, _repeated_epos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeypressEvent : pb::IMessage<KeypressEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeypressEvent> _parser = new pb::MessageParser<KeypressEvent>(() => new KeypressEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeypressEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeypressEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeypressEvent(KeypressEvent other) : this() {
      keyId_ = other.keyId_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeypressEvent Clone() {
      return new KeypressEvent(this);
    }

    /// <summary>Field number for the "key_id" field.</summary>
    public const int KeyIdFieldNumber = 1;
    private int keyId_;
    /// <summary>
    ///普通按键=ascall码, √=9900, ○=9901, ×=9902, □=9903, △=9904
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int KeyId {
      get { return keyId_; }
      set {
        keyId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::MelandGame3.KeypressState state_ = global::MelandGame3.KeypressState.Up;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.KeypressState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeypressEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeypressEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KeyId != other.KeyId) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (KeyId != 0) hash ^= KeyId.GetHashCode();
      if (State != global::MelandGame3.KeypressState.Up) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (KeyId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(KeyId);
      }
      if (State != global::MelandGame3.KeypressState.Up) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (KeyId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(KeyId);
      }
      if (State != global::MelandGame3.KeypressState.Up) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (KeyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeyId);
      }
      if (State != global::MelandGame3.KeypressState.Up) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeypressEvent other) {
      if (other == null) {
        return;
      }
      if (other.KeyId != 0) {
        KeyId = other.KeyId;
      }
      if (other.State != global::MelandGame3.KeypressState.Up) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            KeyId = input.ReadInt32();
            break;
          }
          case 16: {
            State = (global::MelandGame3.KeypressState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            KeyId = input.ReadInt32();
            break;
          }
          case 16: {
            State = (global::MelandGame3.KeypressState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Keypress : pb::IMessage<Keypress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Keypress> _parser = new pb::MessageParser<Keypress>(() => new Keypress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Keypress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Keypress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Keypress(Keypress other) : this() {
      key_ = other.key_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Keypress Clone() {
      return new Keypress(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::MelandGame3.KeypressState state_ = global::MelandGame3.KeypressState.Up;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.KeypressState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Keypress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Keypress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (State != global::MelandGame3.KeypressState.Up) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (State != global::MelandGame3.KeypressState.Up) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (State != global::MelandGame3.KeypressState.Up) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (State != global::MelandGame3.KeypressState.Up) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Keypress other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.State != global::MelandGame3.KeypressState.Up) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            State = (global::MelandGame3.KeypressState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            State = (global::MelandGame3.KeypressState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InputEvent : pb::IMessage<InputEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputEvent> _parser = new pb::MessageParser<InputEvent>(() => new InputEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InputEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputEvent(InputEvent other) : this() {
      type_ = other.type_;
      switch (other.DataCase) {
        case DataOneofCase.Keypress:
          Keypress = other.Keypress.Clone();
          break;
        case DataOneofCase.Key:
          Key = other.Key.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputEvent Clone() {
      return new InputEvent(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::MelandGame3.InputEventType type_ = global::MelandGame3.InputEventType.InputEventTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.InputEventType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "keypress" field.</summary>
    public const int KeypressFieldNumber = 50;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.KeypressEvent Keypress {
      get { return dataCase_ == DataOneofCase.Keypress ? (global::MelandGame3.KeypressEvent) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Keypress;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 51;
    /// <summary>
    ///按键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Keypress Key {
      get { return dataCase_ == DataOneofCase.Key ? (global::MelandGame3.Keypress) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Key;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Keypress = 50,
      Key = 51,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InputEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InputEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Keypress, other.Keypress)) return false;
      if (!object.Equals(Key, other.Key)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::MelandGame3.InputEventType.InputEventTypeUnknown) hash ^= Type.GetHashCode();
      if (dataCase_ == DataOneofCase.Keypress) hash ^= Keypress.GetHashCode();
      if (dataCase_ == DataOneofCase.Key) hash ^= Key.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::MelandGame3.InputEventType.InputEventTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.Keypress) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(Keypress);
      }
      if (dataCase_ == DataOneofCase.Key) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::MelandGame3.InputEventType.InputEventTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.Keypress) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(Keypress);
      }
      if (dataCase_ == DataOneofCase.Key) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::MelandGame3.InputEventType.InputEventTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (dataCase_ == DataOneofCase.Keypress) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Keypress);
      }
      if (dataCase_ == DataOneofCase.Key) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InputEvent other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::MelandGame3.InputEventType.InputEventTypeUnknown) {
        Type = other.Type;
      }
      switch (other.DataCase) {
        case DataOneofCase.Keypress:
          if (Keypress == null) {
            Keypress = new global::MelandGame3.KeypressEvent();
          }
          Keypress.MergeFrom(other.Keypress);
          break;
        case DataOneofCase.Key:
          if (Key == null) {
            Key = new global::MelandGame3.Keypress();
          }
          Key.MergeFrom(other.Key);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::MelandGame3.InputEventType) input.ReadEnum();
            break;
          }
          case 402: {
            global::MelandGame3.KeypressEvent subBuilder = new global::MelandGame3.KeypressEvent();
            if (dataCase_ == DataOneofCase.Keypress) {
              subBuilder.MergeFrom(Keypress);
            }
            input.ReadMessage(subBuilder);
            Keypress = subBuilder;
            break;
          }
          case 410: {
            global::MelandGame3.Keypress subBuilder = new global::MelandGame3.Keypress();
            if (dataCase_ == DataOneofCase.Key) {
              subBuilder.MergeFrom(Key);
            }
            input.ReadMessage(subBuilder);
            Key = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::MelandGame3.InputEventType) input.ReadEnum();
            break;
          }
          case 402: {
            global::MelandGame3.KeypressEvent subBuilder = new global::MelandGame3.KeypressEvent();
            if (dataCase_ == DataOneofCase.Keypress) {
              subBuilder.MergeFrom(Keypress);
            }
            input.ReadMessage(subBuilder);
            Keypress = subBuilder;
            break;
          }
          case 410: {
            global::MelandGame3.Keypress subBuilder = new global::MelandGame3.Keypress();
            if (dataCase_ == DataOneofCase.Key) {
              subBuilder.MergeFrom(Key);
            }
            input.ReadMessage(subBuilder);
            Key = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PanelProfile : pb::IMessage<PanelProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PanelProfile> _parser = new pb::MessageParser<PanelProfile>(() => new PanelProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PanelProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelProfile(PanelProfile other) : this() {
      panelType_ = other.panelType_;
      switch (other.DataCase) {
        case DataOneofCase.Style:
          Style = other.Style.Clone();
          break;
        case DataOneofCase.RowNum:
          RowNum = other.RowNum;
          break;
        case DataOneofCase.ColNum:
          ColNum = other.ColNum;
          break;
        case DataOneofCase.Title:
          Title = other.Title.Clone();
          break;
        case DataOneofCase.GridProfile:
          GridProfile = other.GridProfile.Clone();
          break;
        case DataOneofCase.RowHeight:
          RowHeight = other.RowHeight.Clone();
          break;
        case DataOneofCase.ColWidth:
          ColWidth = other.ColWidth.Clone();
          break;
        case DataOneofCase.Anchor:
          Anchor = other.Anchor.Clone();
          break;
        case DataOneofCase.IsHidden:
          IsHidden = other.IsHidden;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelProfile Clone() {
      return new PanelProfile(this);
    }

    /// <summary>Field number for the "panel_type" field.</summary>
    public const int PanelTypeFieldNumber = 1;
    private global::MelandGame3.PanelProfileType panelType_ = global::MelandGame3.PanelProfileType.PanelTypeBgstyle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PanelProfileType PanelType {
      get { return panelType_; }
      set {
        panelType_ = value;
      }
    }

    /// <summary>Field number for the "style" field.</summary>
    public const int StyleFieldNumber = 10;
    /// <summary>
    ///背景样式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PanelBGStyle Style {
      get { return dataCase_ == DataOneofCase.Style ? (global::MelandGame3.PanelBGStyle) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Style;
      }
    }

    /// <summary>Field number for the "row_num" field.</summary>
    public const int RowNumFieldNumber = 11;
    /// <summary>
    ///行数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RowNum {
      get { return dataCase_ == DataOneofCase.RowNum ? (int) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.RowNum;
      }
    }

    /// <summary>Field number for the "col_num" field.</summary>
    public const int ColNumFieldNumber = 12;
    /// <summary>
    ///列数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColNum {
      get { return dataCase_ == DataOneofCase.ColNum ? (int) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.ColNum;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 13;
    /// <summary>
    ///标题属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PanelTitle Title {
      get { return dataCase_ == DataOneofCase.Title ? (global::MelandGame3.PanelTitle) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Title;
      }
    }

    /// <summary>Field number for the "grid_profile" field.</summary>
    public const int GridProfileFieldNumber = 14;
    /// <summary>
    ///格子属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PanelGridProfile GridProfile {
      get { return dataCase_ == DataOneofCase.GridProfile ? (global::MelandGame3.PanelGridProfile) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GridProfile;
      }
    }

    /// <summary>Field number for the "row_height" field.</summary>
    public const int RowHeightFieldNumber = 15;
    /// <summary>
    ///行属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PanelRowColSize RowHeight {
      get { return dataCase_ == DataOneofCase.RowHeight ? (global::MelandGame3.PanelRowColSize) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.RowHeight;
      }
    }

    /// <summary>Field number for the "col_width" field.</summary>
    public const int ColWidthFieldNumber = 16;
    /// <summary>
    ///列属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PanelRowColSize ColWidth {
      get { return dataCase_ == DataOneofCase.ColWidth ? (global::MelandGame3.PanelRowColSize) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ColWidth;
      }
    }

    /// <summary>Field number for the "anchor" field.</summary>
    public const int AnchorFieldNumber = 17;
    /// <summary>
    ///锚点属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PanelAnchor Anchor {
      get { return dataCase_ == DataOneofCase.Anchor ? (global::MelandGame3.PanelAnchor) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Anchor;
      }
    }

    /// <summary>Field number for the "is_hidden" field.</summary>
    public const int IsHiddenFieldNumber = 18;
    /// <summary>
    ///是否隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHidden {
      get { return dataCase_ == DataOneofCase.IsHidden ? (bool) data_ : false; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.IsHidden;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Style = 10,
      RowNum = 11,
      ColNum = 12,
      Title = 13,
      GridProfile = 14,
      RowHeight = 15,
      ColWidth = 16,
      Anchor = 17,
      IsHidden = 18,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PanelProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PanelProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PanelType != other.PanelType) return false;
      if (!object.Equals(Style, other.Style)) return false;
      if (RowNum != other.RowNum) return false;
      if (ColNum != other.ColNum) return false;
      if (!object.Equals(Title, other.Title)) return false;
      if (!object.Equals(GridProfile, other.GridProfile)) return false;
      if (!object.Equals(RowHeight, other.RowHeight)) return false;
      if (!object.Equals(ColWidth, other.ColWidth)) return false;
      if (!object.Equals(Anchor, other.Anchor)) return false;
      if (IsHidden != other.IsHidden) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PanelType != global::MelandGame3.PanelProfileType.PanelTypeBgstyle) hash ^= PanelType.GetHashCode();
      if (dataCase_ == DataOneofCase.Style) hash ^= Style.GetHashCode();
      if (dataCase_ == DataOneofCase.RowNum) hash ^= RowNum.GetHashCode();
      if (dataCase_ == DataOneofCase.ColNum) hash ^= ColNum.GetHashCode();
      if (dataCase_ == DataOneofCase.Title) hash ^= Title.GetHashCode();
      if (dataCase_ == DataOneofCase.GridProfile) hash ^= GridProfile.GetHashCode();
      if (dataCase_ == DataOneofCase.RowHeight) hash ^= RowHeight.GetHashCode();
      if (dataCase_ == DataOneofCase.ColWidth) hash ^= ColWidth.GetHashCode();
      if (dataCase_ == DataOneofCase.Anchor) hash ^= Anchor.GetHashCode();
      if (dataCase_ == DataOneofCase.IsHidden) hash ^= IsHidden.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PanelType != global::MelandGame3.PanelProfileType.PanelTypeBgstyle) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PanelType);
      }
      if (dataCase_ == DataOneofCase.Style) {
        output.WriteRawTag(82);
        output.WriteMessage(Style);
      }
      if (dataCase_ == DataOneofCase.RowNum) {
        output.WriteRawTag(88);
        output.WriteInt32(RowNum);
      }
      if (dataCase_ == DataOneofCase.ColNum) {
        output.WriteRawTag(96);
        output.WriteInt32(ColNum);
      }
      if (dataCase_ == DataOneofCase.Title) {
        output.WriteRawTag(106);
        output.WriteMessage(Title);
      }
      if (dataCase_ == DataOneofCase.GridProfile) {
        output.WriteRawTag(114);
        output.WriteMessage(GridProfile);
      }
      if (dataCase_ == DataOneofCase.RowHeight) {
        output.WriteRawTag(122);
        output.WriteMessage(RowHeight);
      }
      if (dataCase_ == DataOneofCase.ColWidth) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ColWidth);
      }
      if (dataCase_ == DataOneofCase.Anchor) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Anchor);
      }
      if (dataCase_ == DataOneofCase.IsHidden) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsHidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PanelType != global::MelandGame3.PanelProfileType.PanelTypeBgstyle) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PanelType);
      }
      if (dataCase_ == DataOneofCase.Style) {
        output.WriteRawTag(82);
        output.WriteMessage(Style);
      }
      if (dataCase_ == DataOneofCase.RowNum) {
        output.WriteRawTag(88);
        output.WriteInt32(RowNum);
      }
      if (dataCase_ == DataOneofCase.ColNum) {
        output.WriteRawTag(96);
        output.WriteInt32(ColNum);
      }
      if (dataCase_ == DataOneofCase.Title) {
        output.WriteRawTag(106);
        output.WriteMessage(Title);
      }
      if (dataCase_ == DataOneofCase.GridProfile) {
        output.WriteRawTag(114);
        output.WriteMessage(GridProfile);
      }
      if (dataCase_ == DataOneofCase.RowHeight) {
        output.WriteRawTag(122);
        output.WriteMessage(RowHeight);
      }
      if (dataCase_ == DataOneofCase.ColWidth) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ColWidth);
      }
      if (dataCase_ == DataOneofCase.Anchor) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Anchor);
      }
      if (dataCase_ == DataOneofCase.IsHidden) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsHidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PanelType != global::MelandGame3.PanelProfileType.PanelTypeBgstyle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PanelType);
      }
      if (dataCase_ == DataOneofCase.Style) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Style);
      }
      if (dataCase_ == DataOneofCase.RowNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowNum);
      }
      if (dataCase_ == DataOneofCase.ColNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColNum);
      }
      if (dataCase_ == DataOneofCase.Title) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
      }
      if (dataCase_ == DataOneofCase.GridProfile) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GridProfile);
      }
      if (dataCase_ == DataOneofCase.RowHeight) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RowHeight);
      }
      if (dataCase_ == DataOneofCase.ColWidth) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ColWidth);
      }
      if (dataCase_ == DataOneofCase.Anchor) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Anchor);
      }
      if (dataCase_ == DataOneofCase.IsHidden) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PanelProfile other) {
      if (other == null) {
        return;
      }
      if (other.PanelType != global::MelandGame3.PanelProfileType.PanelTypeBgstyle) {
        PanelType = other.PanelType;
      }
      switch (other.DataCase) {
        case DataOneofCase.Style:
          if (Style == null) {
            Style = new global::MelandGame3.PanelBGStyle();
          }
          Style.MergeFrom(other.Style);
          break;
        case DataOneofCase.RowNum:
          RowNum = other.RowNum;
          break;
        case DataOneofCase.ColNum:
          ColNum = other.ColNum;
          break;
        case DataOneofCase.Title:
          if (Title == null) {
            Title = new global::MelandGame3.PanelTitle();
          }
          Title.MergeFrom(other.Title);
          break;
        case DataOneofCase.GridProfile:
          if (GridProfile == null) {
            GridProfile = new global::MelandGame3.PanelGridProfile();
          }
          GridProfile.MergeFrom(other.GridProfile);
          break;
        case DataOneofCase.RowHeight:
          if (RowHeight == null) {
            RowHeight = new global::MelandGame3.PanelRowColSize();
          }
          RowHeight.MergeFrom(other.RowHeight);
          break;
        case DataOneofCase.ColWidth:
          if (ColWidth == null) {
            ColWidth = new global::MelandGame3.PanelRowColSize();
          }
          ColWidth.MergeFrom(other.ColWidth);
          break;
        case DataOneofCase.Anchor:
          if (Anchor == null) {
            Anchor = new global::MelandGame3.PanelAnchor();
          }
          Anchor.MergeFrom(other.Anchor);
          break;
        case DataOneofCase.IsHidden:
          IsHidden = other.IsHidden;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PanelType = (global::MelandGame3.PanelProfileType) input.ReadEnum();
            break;
          }
          case 82: {
            global::MelandGame3.PanelBGStyle subBuilder = new global::MelandGame3.PanelBGStyle();
            if (dataCase_ == DataOneofCase.Style) {
              subBuilder.MergeFrom(Style);
            }
            input.ReadMessage(subBuilder);
            Style = subBuilder;
            break;
          }
          case 88: {
            RowNum = input.ReadInt32();
            break;
          }
          case 96: {
            ColNum = input.ReadInt32();
            break;
          }
          case 106: {
            global::MelandGame3.PanelTitle subBuilder = new global::MelandGame3.PanelTitle();
            if (dataCase_ == DataOneofCase.Title) {
              subBuilder.MergeFrom(Title);
            }
            input.ReadMessage(subBuilder);
            Title = subBuilder;
            break;
          }
          case 114: {
            global::MelandGame3.PanelGridProfile subBuilder = new global::MelandGame3.PanelGridProfile();
            if (dataCase_ == DataOneofCase.GridProfile) {
              subBuilder.MergeFrom(GridProfile);
            }
            input.ReadMessage(subBuilder);
            GridProfile = subBuilder;
            break;
          }
          case 122: {
            global::MelandGame3.PanelRowColSize subBuilder = new global::MelandGame3.PanelRowColSize();
            if (dataCase_ == DataOneofCase.RowHeight) {
              subBuilder.MergeFrom(RowHeight);
            }
            input.ReadMessage(subBuilder);
            RowHeight = subBuilder;
            break;
          }
          case 130: {
            global::MelandGame3.PanelRowColSize subBuilder = new global::MelandGame3.PanelRowColSize();
            if (dataCase_ == DataOneofCase.ColWidth) {
              subBuilder.MergeFrom(ColWidth);
            }
            input.ReadMessage(subBuilder);
            ColWidth = subBuilder;
            break;
          }
          case 138: {
            global::MelandGame3.PanelAnchor subBuilder = new global::MelandGame3.PanelAnchor();
            if (dataCase_ == DataOneofCase.Anchor) {
              subBuilder.MergeFrom(Anchor);
            }
            input.ReadMessage(subBuilder);
            Anchor = subBuilder;
            break;
          }
          case 144: {
            IsHidden = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PanelType = (global::MelandGame3.PanelProfileType) input.ReadEnum();
            break;
          }
          case 82: {
            global::MelandGame3.PanelBGStyle subBuilder = new global::MelandGame3.PanelBGStyle();
            if (dataCase_ == DataOneofCase.Style) {
              subBuilder.MergeFrom(Style);
            }
            input.ReadMessage(subBuilder);
            Style = subBuilder;
            break;
          }
          case 88: {
            RowNum = input.ReadInt32();
            break;
          }
          case 96: {
            ColNum = input.ReadInt32();
            break;
          }
          case 106: {
            global::MelandGame3.PanelTitle subBuilder = new global::MelandGame3.PanelTitle();
            if (dataCase_ == DataOneofCase.Title) {
              subBuilder.MergeFrom(Title);
            }
            input.ReadMessage(subBuilder);
            Title = subBuilder;
            break;
          }
          case 114: {
            global::MelandGame3.PanelGridProfile subBuilder = new global::MelandGame3.PanelGridProfile();
            if (dataCase_ == DataOneofCase.GridProfile) {
              subBuilder.MergeFrom(GridProfile);
            }
            input.ReadMessage(subBuilder);
            GridProfile = subBuilder;
            break;
          }
          case 122: {
            global::MelandGame3.PanelRowColSize subBuilder = new global::MelandGame3.PanelRowColSize();
            if (dataCase_ == DataOneofCase.RowHeight) {
              subBuilder.MergeFrom(RowHeight);
            }
            input.ReadMessage(subBuilder);
            RowHeight = subBuilder;
            break;
          }
          case 130: {
            global::MelandGame3.PanelRowColSize subBuilder = new global::MelandGame3.PanelRowColSize();
            if (dataCase_ == DataOneofCase.ColWidth) {
              subBuilder.MergeFrom(ColWidth);
            }
            input.ReadMessage(subBuilder);
            ColWidth = subBuilder;
            break;
          }
          case 138: {
            global::MelandGame3.PanelAnchor subBuilder = new global::MelandGame3.PanelAnchor();
            if (dataCase_ == DataOneofCase.Anchor) {
              subBuilder.MergeFrom(Anchor);
            }
            input.ReadMessage(subBuilder);
            Anchor = subBuilder;
            break;
          }
          case 144: {
            IsHidden = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PanelBGStyle : pb::IMessage<PanelBGStyle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PanelBGStyle> _parser = new pb::MessageParser<PanelBGStyle>(() => new PanelBGStyle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PanelBGStyle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelBGStyle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelBGStyle(PanelBGStyle other) : this() {
      style_ = other.style_;
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      transparency_ = other.transparency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelBGStyle Clone() {
      return new PanelBGStyle(this);
    }

    /// <summary>Field number for the "style" field.</summary>
    public const int StyleFieldNumber = 1;
    private global::MelandGame3.BGStyle style_ = global::MelandGame3.BGStyle.Normal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.BGStyle Style {
      get { return style_; }
      set {
        style_ = value;
      }
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 2;
    private int r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "g" field.</summary>
    public const int GFieldNumber = 3;
    private int g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 4;
    private int b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "transparency" field.</summary>
    public const int TransparencyFieldNumber = 5;
    private int transparency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Transparency {
      get { return transparency_; }
      set {
        transparency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PanelBGStyle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PanelBGStyle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Style != other.Style) return false;
      if (R != other.R) return false;
      if (G != other.G) return false;
      if (B != other.B) return false;
      if (Transparency != other.Transparency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Style != global::MelandGame3.BGStyle.Normal) hash ^= Style.GetHashCode();
      if (R != 0) hash ^= R.GetHashCode();
      if (G != 0) hash ^= G.GetHashCode();
      if (B != 0) hash ^= B.GetHashCode();
      if (Transparency != 0) hash ^= Transparency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Style != global::MelandGame3.BGStyle.Normal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Style);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(R);
      }
      if (G != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(G);
      }
      if (B != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(B);
      }
      if (Transparency != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Transparency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Style != global::MelandGame3.BGStyle.Normal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Style);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(R);
      }
      if (G != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(G);
      }
      if (B != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(B);
      }
      if (Transparency != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Transparency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Style != global::MelandGame3.BGStyle.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Style);
      }
      if (R != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(R);
      }
      if (G != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(G);
      }
      if (B != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(B);
      }
      if (Transparency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Transparency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PanelBGStyle other) {
      if (other == null) {
        return;
      }
      if (other.Style != global::MelandGame3.BGStyle.Normal) {
        Style = other.Style;
      }
      if (other.R != 0) {
        R = other.R;
      }
      if (other.G != 0) {
        G = other.G;
      }
      if (other.B != 0) {
        B = other.B;
      }
      if (other.Transparency != 0) {
        Transparency = other.Transparency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Style = (global::MelandGame3.BGStyle) input.ReadEnum();
            break;
          }
          case 16: {
            R = input.ReadInt32();
            break;
          }
          case 24: {
            G = input.ReadInt32();
            break;
          }
          case 32: {
            B = input.ReadInt32();
            break;
          }
          case 40: {
            Transparency = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Style = (global::MelandGame3.BGStyle) input.ReadEnum();
            break;
          }
          case 16: {
            R = input.ReadInt32();
            break;
          }
          case 24: {
            G = input.ReadInt32();
            break;
          }
          case 32: {
            B = input.ReadInt32();
            break;
          }
          case 40: {
            Transparency = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PanelTitle : pb::IMessage<PanelTitle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PanelTitle> _parser = new pb::MessageParser<PanelTitle>(() => new PanelTitle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PanelTitle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelTitle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelTitle(PanelTitle other) : this() {
      canFold_ = other.canFold_;
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      transparency_ = other.transparency_;
      content_ = other.content_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelTitle Clone() {
      return new PanelTitle(this);
    }

    /// <summary>Field number for the "can_fold" field.</summary>
    public const int CanFoldFieldNumber = 1;
    private bool canFold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanFold {
      get { return canFold_; }
      set {
        canFold_ = value;
      }
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 2;
    private int r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "g" field.</summary>
    public const int GFieldNumber = 3;
    private int g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 4;
    private int b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "transparency" field.</summary>
    public const int TransparencyFieldNumber = 5;
    private int transparency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Transparency {
      get { return transparency_; }
      set {
        transparency_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PanelTitle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PanelTitle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanFold != other.CanFold) return false;
      if (R != other.R) return false;
      if (G != other.G) return false;
      if (B != other.B) return false;
      if (Transparency != other.Transparency) return false;
      if (Content != other.Content) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CanFold != false) hash ^= CanFold.GetHashCode();
      if (R != 0) hash ^= R.GetHashCode();
      if (G != 0) hash ^= G.GetHashCode();
      if (B != 0) hash ^= B.GetHashCode();
      if (Transparency != 0) hash ^= Transparency.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CanFold != false) {
        output.WriteRawTag(8);
        output.WriteBool(CanFold);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(R);
      }
      if (G != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(G);
      }
      if (B != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(B);
      }
      if (Transparency != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Transparency);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (Height != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CanFold != false) {
        output.WriteRawTag(8);
        output.WriteBool(CanFold);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(R);
      }
      if (G != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(G);
      }
      if (B != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(B);
      }
      if (Transparency != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Transparency);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (Height != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CanFold != false) {
        size += 1 + 1;
      }
      if (R != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(R);
      }
      if (G != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(G);
      }
      if (B != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(B);
      }
      if (Transparency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Transparency);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PanelTitle other) {
      if (other == null) {
        return;
      }
      if (other.CanFold != false) {
        CanFold = other.CanFold;
      }
      if (other.R != 0) {
        R = other.R;
      }
      if (other.G != 0) {
        G = other.G;
      }
      if (other.B != 0) {
        B = other.B;
      }
      if (other.Transparency != 0) {
        Transparency = other.Transparency;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanFold = input.ReadBool();
            break;
          }
          case 16: {
            R = input.ReadInt32();
            break;
          }
          case 24: {
            G = input.ReadInt32();
            break;
          }
          case 32: {
            B = input.ReadInt32();
            break;
          }
          case 40: {
            Transparency = input.ReadInt32();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
          case 56: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CanFold = input.ReadBool();
            break;
          }
          case 16: {
            R = input.ReadInt32();
            break;
          }
          case 24: {
            G = input.ReadInt32();
            break;
          }
          case 32: {
            B = input.ReadInt32();
            break;
          }
          case 40: {
            Transparency = input.ReadInt32();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
          case 56: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PanelGridProfile : pb::IMessage<PanelGridProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PanelGridProfile> _parser = new pb::MessageParser<PanelGridProfile>(() => new PanelGridProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PanelGridProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelGridProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelGridProfile(PanelGridProfile other) : this() {
      content_ = other.content_;
      align_ = other.align_;
      picture_ = other.picture_;
      percent_ = other.percent_;
      colNum_ = other.colNum_;
      rowNum_ = other.rowNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelGridProfile Clone() {
      return new PanelGridProfile(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "align" field.</summary>
    public const int AlignFieldNumber = 2;
    private global::MelandGame3.AlignStyle align_ = global::MelandGame3.AlignStyle.Left;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.AlignStyle Align {
      get { return align_; }
      set {
        align_ = value;
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 3;
    private string picture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Picture {
      get { return picture_; }
      set {
        picture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "percent" field.</summary>
    public const int PercentFieldNumber = 4;
    private int percent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Percent {
      get { return percent_; }
      set {
        percent_ = value;
      }
    }

    /// <summary>Field number for the "col_num" field.</summary>
    public const int ColNumFieldNumber = 5;
    private int colNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColNum {
      get { return colNum_; }
      set {
        colNum_ = value;
      }
    }

    /// <summary>Field number for the "row_num" field.</summary>
    public const int RowNumFieldNumber = 6;
    private int rowNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RowNum {
      get { return rowNum_; }
      set {
        rowNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PanelGridProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PanelGridProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (Align != other.Align) return false;
      if (Picture != other.Picture) return false;
      if (Percent != other.Percent) return false;
      if (ColNum != other.ColNum) return false;
      if (RowNum != other.RowNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Align != global::MelandGame3.AlignStyle.Left) hash ^= Align.GetHashCode();
      if (Picture.Length != 0) hash ^= Picture.GetHashCode();
      if (Percent != 0) hash ^= Percent.GetHashCode();
      if (ColNum != 0) hash ^= ColNum.GetHashCode();
      if (RowNum != 0) hash ^= RowNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (Align != global::MelandGame3.AlignStyle.Left) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Align);
      }
      if (Picture.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Picture);
      }
      if (Percent != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Percent);
      }
      if (ColNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ColNum);
      }
      if (RowNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RowNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (Align != global::MelandGame3.AlignStyle.Left) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Align);
      }
      if (Picture.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Picture);
      }
      if (Percent != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Percent);
      }
      if (ColNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ColNum);
      }
      if (RowNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RowNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Align != global::MelandGame3.AlignStyle.Left) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Align);
      }
      if (Picture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Picture);
      }
      if (Percent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Percent);
      }
      if (ColNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColNum);
      }
      if (RowNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PanelGridProfile other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Align != global::MelandGame3.AlignStyle.Left) {
        Align = other.Align;
      }
      if (other.Picture.Length != 0) {
        Picture = other.Picture;
      }
      if (other.Percent != 0) {
        Percent = other.Percent;
      }
      if (other.ColNum != 0) {
        ColNum = other.ColNum;
      }
      if (other.RowNum != 0) {
        RowNum = other.RowNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 16: {
            Align = (global::MelandGame3.AlignStyle) input.ReadEnum();
            break;
          }
          case 26: {
            Picture = input.ReadString();
            break;
          }
          case 32: {
            Percent = input.ReadInt32();
            break;
          }
          case 40: {
            ColNum = input.ReadInt32();
            break;
          }
          case 48: {
            RowNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 16: {
            Align = (global::MelandGame3.AlignStyle) input.ReadEnum();
            break;
          }
          case 26: {
            Picture = input.ReadString();
            break;
          }
          case 32: {
            Percent = input.ReadInt32();
            break;
          }
          case 40: {
            ColNum = input.ReadInt32();
            break;
          }
          case 48: {
            RowNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PanelRowColSize : pb::IMessage<PanelRowColSize>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PanelRowColSize> _parser = new pb::MessageParser<PanelRowColSize>(() => new PanelRowColSize());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PanelRowColSize> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelRowColSize() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelRowColSize(PanelRowColSize other) : this() {
      which_ = other.which_;
      size_ = other.size_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelRowColSize Clone() {
      return new PanelRowColSize(this);
    }

    /// <summary>Field number for the "which" field.</summary>
    public const int WhichFieldNumber = 1;
    private int which_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Which {
      get { return which_; }
      set {
        which_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private int size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PanelRowColSize);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PanelRowColSize other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Which != other.Which) return false;
      if (Size != other.Size) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Which != 0) hash ^= Which.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Which != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Which);
      }
      if (Size != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Which != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Which);
      }
      if (Size != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Which != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Which);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PanelRowColSize other) {
      if (other == null) {
        return;
      }
      if (other.Which != 0) {
        Which = other.Which;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Which = input.ReadInt32();
            break;
          }
          case 16: {
            Size = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Which = input.ReadInt32();
            break;
          }
          case 16: {
            Size = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PanelAnchor : pb::IMessage<PanelAnchor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PanelAnchor> _parser = new pb::MessageParser<PanelAnchor>(() => new PanelAnchor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PanelAnchor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelAnchor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelAnchor(PanelAnchor other) : this() {
      pos_ = other.pos_;
      horizontal_ = other.horizontal_;
      vertical_ = other.vertical_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PanelAnchor Clone() {
      return new PanelAnchor(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private global::MelandGame3.PanelAnchorPos pos_ = global::MelandGame3.PanelAnchorPos.LeftUp;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.PanelAnchorPos Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "horizontal" field.</summary>
    public const int HorizontalFieldNumber = 2;
    private int horizontal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Horizontal {
      get { return horizontal_; }
      set {
        horizontal_ = value;
      }
    }

    /// <summary>Field number for the "vertical" field.</summary>
    public const int VerticalFieldNumber = 3;
    private int vertical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Vertical {
      get { return vertical_; }
      set {
        vertical_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PanelAnchor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PanelAnchor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if (Horizontal != other.Horizontal) return false;
      if (Vertical != other.Vertical) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != global::MelandGame3.PanelAnchorPos.LeftUp) hash ^= Pos.GetHashCode();
      if (Horizontal != 0) hash ^= Horizontal.GetHashCode();
      if (Vertical != 0) hash ^= Vertical.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pos != global::MelandGame3.PanelAnchorPos.LeftUp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Pos);
      }
      if (Horizontal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Horizontal);
      }
      if (Vertical != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Vertical);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pos != global::MelandGame3.PanelAnchorPos.LeftUp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Pos);
      }
      if (Horizontal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Horizontal);
      }
      if (Vertical != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Vertical);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pos != global::MelandGame3.PanelAnchorPos.LeftUp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Pos);
      }
      if (Horizontal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Horizontal);
      }
      if (Vertical != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vertical);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PanelAnchor other) {
      if (other == null) {
        return;
      }
      if (other.Pos != global::MelandGame3.PanelAnchorPos.LeftUp) {
        Pos = other.Pos;
      }
      if (other.Horizontal != 0) {
        Horizontal = other.Horizontal;
      }
      if (other.Vertical != 0) {
        Vertical = other.Vertical;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = (global::MelandGame3.PanelAnchorPos) input.ReadEnum();
            break;
          }
          case 16: {
            Horizontal = input.ReadInt32();
            break;
          }
          case 24: {
            Vertical = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pos = (global::MelandGame3.PanelAnchorPos) input.ReadEnum();
            break;
          }
          case 16: {
            Horizontal = input.ReadInt32();
            break;
          }
          case 24: {
            Vertical = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShowViewData : pb::IMessage<ShowViewData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShowViewData> _parser = new pb::MessageParser<ShowViewData>(() => new ShowViewData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShowViewData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowViewData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowViewData(ShowViewData other) : this() {
      type_ = other.type_;
      switch (other.DataCase) {
        case DataOneofCase.DungeonScoreData:
          DungeonScoreData = other.DungeonScoreData.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowViewData Clone() {
      return new ShowViewData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::MelandGame3.ViewType type_ = global::MelandGame3.ViewType.ViewTypeUnknow;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ViewType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "dungeon_score_data" field.</summary>
    public const int DungeonScoreDataFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.ViewDungeonScoreData DungeonScoreData {
      get { return dataCase_ == DataOneofCase.DungeonScoreData ? (global::MelandGame3.ViewDungeonScoreData) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.DungeonScoreData;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      DungeonScoreData = 10,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShowViewData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShowViewData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(DungeonScoreData, other.DungeonScoreData)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::MelandGame3.ViewType.ViewTypeUnknow) hash ^= Type.GetHashCode();
      if (dataCase_ == DataOneofCase.DungeonScoreData) hash ^= DungeonScoreData.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::MelandGame3.ViewType.ViewTypeUnknow) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.DungeonScoreData) {
        output.WriteRawTag(82);
        output.WriteMessage(DungeonScoreData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::MelandGame3.ViewType.ViewTypeUnknow) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.DungeonScoreData) {
        output.WriteRawTag(82);
        output.WriteMessage(DungeonScoreData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::MelandGame3.ViewType.ViewTypeUnknow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (dataCase_ == DataOneofCase.DungeonScoreData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DungeonScoreData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShowViewData other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::MelandGame3.ViewType.ViewTypeUnknow) {
        Type = other.Type;
      }
      switch (other.DataCase) {
        case DataOneofCase.DungeonScoreData:
          if (DungeonScoreData == null) {
            DungeonScoreData = new global::MelandGame3.ViewDungeonScoreData();
          }
          DungeonScoreData.MergeFrom(other.DungeonScoreData);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::MelandGame3.ViewType) input.ReadEnum();
            break;
          }
          case 82: {
            global::MelandGame3.ViewDungeonScoreData subBuilder = new global::MelandGame3.ViewDungeonScoreData();
            if (dataCase_ == DataOneofCase.DungeonScoreData) {
              subBuilder.MergeFrom(DungeonScoreData);
            }
            input.ReadMessage(subBuilder);
            DungeonScoreData = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::MelandGame3.ViewType) input.ReadEnum();
            break;
          }
          case 82: {
            global::MelandGame3.ViewDungeonScoreData subBuilder = new global::MelandGame3.ViewDungeonScoreData();
            if (dataCase_ == DataOneofCase.DungeonScoreData) {
              subBuilder.MergeFrom(DungeonScoreData);
            }
            input.ReadMessage(subBuilder);
            DungeonScoreData = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ViewDungeonScoreData : pb::IMessage<ViewDungeonScoreData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ViewDungeonScoreData> _parser = new pb::MessageParser<ViewDungeonScoreData>(() => new ViewDungeonScoreData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ViewDungeonScoreData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewDungeonScoreData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewDungeonScoreData(ViewDungeonScoreData other) : this() {
      dungeonId_ = other.dungeonId_;
      score_ = other.score_;
      receivedBaseReward_ = other.receivedBaseReward_.Clone();
      superLv_ = other.superLv_;
      receivedSuperReward_ = other.receivedSuperReward_.Clone();
      receivedFinalReward_ = other.receivedFinalReward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewDungeonScoreData Clone() {
      return new ViewDungeonScoreData(this);
    }

    /// <summary>Field number for the "dungeon_id" field.</summary>
    public const int DungeonIdFieldNumber = 1;
    private int dungeonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DungeonId {
      get { return dungeonId_; }
      set {
        dungeonId_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "received_base_reward" field.</summary>
    public const int ReceivedBaseRewardFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_receivedBaseReward_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> receivedBaseReward_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ReceivedBaseReward {
      get { return receivedBaseReward_; }
    }

    /// <summary>Field number for the "super_lv" field.</summary>
    public const int SuperLvFieldNumber = 4;
    private int superLv_;
    /// <summary>
    /// 超级用户(兑换key后成为超级用户)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLv {
      get { return superLv_; }
      set {
        superLv_ = value;
      }
    }

    /// <summary>Field number for the "received_super_reward" field.</summary>
    public const int ReceivedSuperRewardFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_receivedSuperReward_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> receivedSuperReward_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ReceivedSuperReward {
      get { return receivedSuperReward_; }
    }

    /// <summary>Field number for the "received_final_reward" field.</summary>
    public const int ReceivedFinalRewardFieldNumber = 6;
    private bool receivedFinalReward_;
    /// <summary>
    /// 终极奖励是否已经领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReceivedFinalReward {
      get { return receivedFinalReward_; }
      set {
        receivedFinalReward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ViewDungeonScoreData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ViewDungeonScoreData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DungeonId != other.DungeonId) return false;
      if (Score != other.Score) return false;
      if(!receivedBaseReward_.Equals(other.receivedBaseReward_)) return false;
      if (SuperLv != other.SuperLv) return false;
      if(!receivedSuperReward_.Equals(other.receivedSuperReward_)) return false;
      if (ReceivedFinalReward != other.ReceivedFinalReward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DungeonId != 0) hash ^= DungeonId.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      hash ^= receivedBaseReward_.GetHashCode();
      if (SuperLv != 0) hash ^= SuperLv.GetHashCode();
      hash ^= receivedSuperReward_.GetHashCode();
      if (ReceivedFinalReward != false) hash ^= ReceivedFinalReward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DungeonId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DungeonId);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      receivedBaseReward_.WriteTo(output, _repeated_receivedBaseReward_codec);
      if (SuperLv != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SuperLv);
      }
      receivedSuperReward_.WriteTo(output, _repeated_receivedSuperReward_codec);
      if (ReceivedFinalReward != false) {
        output.WriteRawTag(48);
        output.WriteBool(ReceivedFinalReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DungeonId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DungeonId);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      receivedBaseReward_.WriteTo(ref output, _repeated_receivedBaseReward_codec);
      if (SuperLv != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SuperLv);
      }
      receivedSuperReward_.WriteTo(ref output, _repeated_receivedSuperReward_codec);
      if (ReceivedFinalReward != false) {
        output.WriteRawTag(48);
        output.WriteBool(ReceivedFinalReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DungeonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DungeonId);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      size += receivedBaseReward_.CalculateSize(_repeated_receivedBaseReward_codec);
      if (SuperLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLv);
      }
      size += receivedSuperReward_.CalculateSize(_repeated_receivedSuperReward_codec);
      if (ReceivedFinalReward != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ViewDungeonScoreData other) {
      if (other == null) {
        return;
      }
      if (other.DungeonId != 0) {
        DungeonId = other.DungeonId;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      receivedBaseReward_.Add(other.receivedBaseReward_);
      if (other.SuperLv != 0) {
        SuperLv = other.SuperLv;
      }
      receivedSuperReward_.Add(other.receivedSuperReward_);
      if (other.ReceivedFinalReward != false) {
        ReceivedFinalReward = other.ReceivedFinalReward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DungeonId = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            receivedBaseReward_.AddEntriesFrom(input, _repeated_receivedBaseReward_codec);
            break;
          }
          case 32: {
            SuperLv = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            receivedSuperReward_.AddEntriesFrom(input, _repeated_receivedSuperReward_codec);
            break;
          }
          case 48: {
            ReceivedFinalReward = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DungeonId = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            receivedBaseReward_.AddEntriesFrom(ref input, _repeated_receivedBaseReward_codec);
            break;
          }
          case 32: {
            SuperLv = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            receivedSuperReward_.AddEntriesFrom(ref input, _repeated_receivedSuperReward_codec);
            break;
          }
          case 48: {
            ReceivedFinalReward = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DungeonSuperReward : pb::IMessage<DungeonSuperReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DungeonSuperReward> _parser = new pb::MessageParser<DungeonSuperReward>(() => new DungeonSuperReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DungeonSuperReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DungeonSuperReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DungeonSuperReward(DungeonSuperReward other) : this() {
      rewardId_ = other.rewardId_;
      needVipLv_ = other.needVipLv_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DungeonSuperReward Clone() {
      return new DungeonSuperReward(this);
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 1;
    private int rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "need_vip_lv" field.</summary>
    public const int NeedVipLvFieldNumber = 2;
    private int needVipLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NeedVipLv {
      get { return needVipLv_; }
      set {
        needVipLv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DungeonSuperReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DungeonSuperReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RewardId != other.RewardId) return false;
      if (NeedVipLv != other.NeedVipLv) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (NeedVipLv != 0) hash ^= NeedVipLv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RewardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RewardId);
      }
      if (NeedVipLv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NeedVipLv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RewardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RewardId);
      }
      if (NeedVipLv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NeedVipLv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardId);
      }
      if (NeedVipLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedVipLv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DungeonSuperReward other) {
      if (other == null) {
        return;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      if (other.NeedVipLv != 0) {
        NeedVipLv = other.NeedVipLv;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RewardId = input.ReadInt32();
            break;
          }
          case 16: {
            NeedVipLv = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RewardId = input.ReadInt32();
            break;
          }
          case 16: {
            NeedVipLv = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResourcePointInfo : pb::IMessage<ResourcePointInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResourcePointInfo> _parser = new pb::MessageParser<ResourcePointInfo>(() => new ResourcePointInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResourcePointInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourcePointInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourcePointInfo(ResourcePointInfo other) : this() {
      rcIndex_ = other.rcIndex_;
      resourceId_ = other.resourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourcePointInfo Clone() {
      return new ResourcePointInfo(this);
    }

    /// <summary>Field number for the "rc_index" field.</summary>
    public const int RcIndexFieldNumber = 1;
    private int rcIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RcIndex {
      get { return rcIndex_; }
      set {
        rcIndex_ = value;
      }
    }

    /// <summary>Field number for the "resource_id" field.</summary>
    public const int ResourceIdFieldNumber = 2;
    private int resourceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResourcePointInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResourcePointInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RcIndex != other.RcIndex) return false;
      if (ResourceId != other.ResourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RcIndex != 0) hash ^= RcIndex.GetHashCode();
      if (ResourceId != 0) hash ^= ResourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RcIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RcIndex);
      }
      if (ResourceId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ResourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RcIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RcIndex);
      }
      if (ResourceId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ResourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RcIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RcIndex);
      }
      if (ResourceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResourcePointInfo other) {
      if (other == null) {
        return;
      }
      if (other.RcIndex != 0) {
        RcIndex = other.RcIndex;
      }
      if (other.ResourceId != 0) {
        ResourceId = other.ResourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RcIndex = input.ReadInt32();
            break;
          }
          case 16: {
            ResourceId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RcIndex = input.ReadInt32();
            break;
          }
          case 16: {
            ResourceId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BornPointInfo : pb::IMessage<BornPointInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BornPointInfo> _parser = new pb::MessageParser<BornPointInfo>(() => new BornPointInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BornPointInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BornPointInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BornPointInfo(BornPointInfo other) : this() {
      rcIndex_ = other.rcIndex_;
      cid_ = other.cid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BornPointInfo Clone() {
      return new BornPointInfo(this);
    }

    /// <summary>Field number for the "rc_index" field.</summary>
    public const int RcIndexFieldNumber = 1;
    private int rcIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RcIndex {
      get { return rcIndex_; }
      set {
        rcIndex_ = value;
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 2;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BornPointInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BornPointInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RcIndex != other.RcIndex) return false;
      if (Cid != other.Cid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RcIndex != 0) hash ^= RcIndex.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RcIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RcIndex);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RcIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RcIndex);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RcIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RcIndex);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BornPointInfo other) {
      if (other == null) {
        return;
      }
      if (other.RcIndex != 0) {
        RcIndex = other.RcIndex;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RcIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RcIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///===========课程区域================
  /// </summary>
  public sealed partial class Scope : pb::IMessage<Scope>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Scope> _parser = new pb::MessageParser<Scope>(() => new Scope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Scope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scope(Scope other) : this() {
      topNode_ = other.topNode_ != null ? other.topNode_.Clone() : null;
      bottomNode_ = other.bottomNode_ != null ? other.bottomNode_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scope Clone() {
      return new Scope(this);
    }

    /// <summary>Field number for the "top_node" field.</summary>
    public const int TopNodeFieldNumber = 1;
    private global::MelandGame3.VectorXY topNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY TopNode {
      get { return topNode_; }
      set {
        topNode_ = value;
      }
    }

    /// <summary>Field number for the "bottom_node" field.</summary>
    public const int BottomNodeFieldNumber = 2;
    private global::MelandGame3.VectorXY bottomNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY BottomNode {
      get { return bottomNode_; }
      set {
        bottomNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Scope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Scope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TopNode, other.TopNode)) return false;
      if (!object.Equals(BottomNode, other.BottomNode)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (topNode_ != null) hash ^= TopNode.GetHashCode();
      if (bottomNode_ != null) hash ^= BottomNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (topNode_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TopNode);
      }
      if (bottomNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BottomNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (topNode_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TopNode);
      }
      if (bottomNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BottomNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (topNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopNode);
      }
      if (bottomNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BottomNode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Scope other) {
      if (other == null) {
        return;
      }
      if (other.topNode_ != null) {
        if (topNode_ == null) {
          TopNode = new global::MelandGame3.VectorXY();
        }
        TopNode.MergeFrom(other.TopNode);
      }
      if (other.bottomNode_ != null) {
        if (bottomNode_ == null) {
          BottomNode = new global::MelandGame3.VectorXY();
        }
        BottomNode.MergeFrom(other.BottomNode);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topNode_ == null) {
              TopNode = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(TopNode);
            break;
          }
          case 18: {
            if (bottomNode_ == null) {
              BottomNode = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(BottomNode);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (topNode_ == null) {
              TopNode = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(TopNode);
            break;
          }
          case 18: {
            if (bottomNode_ == null) {
              BottomNode = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(BottomNode);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LessonArea : pb::IMessage<LessonArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LessonArea> _parser = new pb::MessageParser<LessonArea>(() => new LessonArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LessonArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonArea(LessonArea other) : this() {
      lessonAreaId_ = other.lessonAreaId_;
      lessonAreaComment_ = other.lessonAreaComment_;
      lessonAreaName_ = other.lessonAreaName_;
      scope_ = other.scope_ != null ? other.scope_.Clone() : null;
      tpPos_ = other.tpPos_ != null ? other.tpPos_.Clone() : null;
      nextAreaId_ = other.nextAreaId_;
      prevAraeId_ = other.prevAraeId_;
      terrainsCid_ = other.terrainsCid_;
      showType_ = other.showType_;
      areaMode_ = other.areaMode_;
      codeEntities_ = other.codeEntities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonArea Clone() {
      return new LessonArea(this);
    }

    /// <summary>Field number for the "lesson_area_id" field.</summary>
    public const int LessonAreaIdFieldNumber = 1;
    private string lessonAreaId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LessonAreaId {
      get { return lessonAreaId_; }
      set {
        lessonAreaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lesson_area_comment" field.</summary>
    public const int LessonAreaCommentFieldNumber = 2;
    private string lessonAreaComment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LessonAreaComment {
      get { return lessonAreaComment_; }
      set {
        lessonAreaComment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lesson_area_name" field.</summary>
    public const int LessonAreaNameFieldNumber = 3;
    private string lessonAreaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LessonAreaName {
      get { return lessonAreaName_; }
      set {
        lessonAreaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 4;
    private global::MelandGame3.Scope scope_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Scope Scope {
      get { return scope_; }
      set {
        scope_ = value;
      }
    }

    /// <summary>Field number for the "tp_pos" field.</summary>
    public const int TpPosFieldNumber = 5;
    private global::MelandGame3.VectorXY tpPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY TpPos {
      get { return tpPos_; }
      set {
        tpPos_ = value;
      }
    }

    /// <summary>Field number for the "next_area_id" field.</summary>
    public const int NextAreaIdFieldNumber = 6;
    private string nextAreaId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextAreaId {
      get { return nextAreaId_; }
      set {
        nextAreaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prev_arae_id" field.</summary>
    public const int PrevAraeIdFieldNumber = 7;
    private string prevAraeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrevAraeId {
      get { return prevAraeId_; }
      set {
        prevAraeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "terrains_cid" field.</summary>
    public const int TerrainsCidFieldNumber = 8;
    private int terrainsCid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TerrainsCid {
      get { return terrainsCid_; }
      set {
        terrainsCid_ = value;
      }
    }

    /// <summary>Field number for the "show_type" field.</summary>
    public const int ShowTypeFieldNumber = 9;
    private global::MelandGame3.LessonShowType showType_ = global::MelandGame3.LessonShowType.LessonShowTypeAll;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonShowType ShowType {
      get { return showType_; }
      set {
        showType_ = value;
      }
    }

    /// <summary>Field number for the "area_mode" field.</summary>
    public const int AreaModeFieldNumber = 10;
    private global::MelandGame3.LessonAreaMode areaMode_ = global::MelandGame3.LessonAreaMode.LessonAreaModeNormal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonAreaMode AreaMode {
      get { return areaMode_; }
      set {
        areaMode_ = value;
      }
    }

    /// <summary>Field number for the "code_entities" field.</summary>
    public const int CodeEntitiesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::MelandGame3.CodeEntityData> _repeated_codeEntities_codec
        = pb::FieldCodec.ForMessage(90, global::MelandGame3.CodeEntityData.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.CodeEntityData> codeEntities_ = new pbc::RepeatedField<global::MelandGame3.CodeEntityData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.CodeEntityData> CodeEntities {
      get { return codeEntities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LessonArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LessonArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LessonAreaId != other.LessonAreaId) return false;
      if (LessonAreaComment != other.LessonAreaComment) return false;
      if (LessonAreaName != other.LessonAreaName) return false;
      if (!object.Equals(Scope, other.Scope)) return false;
      if (!object.Equals(TpPos, other.TpPos)) return false;
      if (NextAreaId != other.NextAreaId) return false;
      if (PrevAraeId != other.PrevAraeId) return false;
      if (TerrainsCid != other.TerrainsCid) return false;
      if (ShowType != other.ShowType) return false;
      if (AreaMode != other.AreaMode) return false;
      if(!codeEntities_.Equals(other.codeEntities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LessonAreaId.Length != 0) hash ^= LessonAreaId.GetHashCode();
      if (LessonAreaComment.Length != 0) hash ^= LessonAreaComment.GetHashCode();
      if (LessonAreaName.Length != 0) hash ^= LessonAreaName.GetHashCode();
      if (scope_ != null) hash ^= Scope.GetHashCode();
      if (tpPos_ != null) hash ^= TpPos.GetHashCode();
      if (NextAreaId.Length != 0) hash ^= NextAreaId.GetHashCode();
      if (PrevAraeId.Length != 0) hash ^= PrevAraeId.GetHashCode();
      if (TerrainsCid != 0) hash ^= TerrainsCid.GetHashCode();
      if (ShowType != global::MelandGame3.LessonShowType.LessonShowTypeAll) hash ^= ShowType.GetHashCode();
      if (AreaMode != global::MelandGame3.LessonAreaMode.LessonAreaModeNormal) hash ^= AreaMode.GetHashCode();
      hash ^= codeEntities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LessonAreaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LessonAreaId);
      }
      if (LessonAreaComment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LessonAreaComment);
      }
      if (LessonAreaName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LessonAreaName);
      }
      if (scope_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scope);
      }
      if (tpPos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TpPos);
      }
      if (NextAreaId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NextAreaId);
      }
      if (PrevAraeId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PrevAraeId);
      }
      if (TerrainsCid != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TerrainsCid);
      }
      if (ShowType != global::MelandGame3.LessonShowType.LessonShowTypeAll) {
        output.WriteRawTag(72);
        output.WriteEnum((int) ShowType);
      }
      if (AreaMode != global::MelandGame3.LessonAreaMode.LessonAreaModeNormal) {
        output.WriteRawTag(80);
        output.WriteEnum((int) AreaMode);
      }
      codeEntities_.WriteTo(output, _repeated_codeEntities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LessonAreaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LessonAreaId);
      }
      if (LessonAreaComment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LessonAreaComment);
      }
      if (LessonAreaName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LessonAreaName);
      }
      if (scope_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scope);
      }
      if (tpPos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TpPos);
      }
      if (NextAreaId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NextAreaId);
      }
      if (PrevAraeId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PrevAraeId);
      }
      if (TerrainsCid != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TerrainsCid);
      }
      if (ShowType != global::MelandGame3.LessonShowType.LessonShowTypeAll) {
        output.WriteRawTag(72);
        output.WriteEnum((int) ShowType);
      }
      if (AreaMode != global::MelandGame3.LessonAreaMode.LessonAreaModeNormal) {
        output.WriteRawTag(80);
        output.WriteEnum((int) AreaMode);
      }
      codeEntities_.WriteTo(ref output, _repeated_codeEntities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LessonAreaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LessonAreaId);
      }
      if (LessonAreaComment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LessonAreaComment);
      }
      if (LessonAreaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LessonAreaName);
      }
      if (scope_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scope);
      }
      if (tpPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TpPos);
      }
      if (NextAreaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextAreaId);
      }
      if (PrevAraeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevAraeId);
      }
      if (TerrainsCid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TerrainsCid);
      }
      if (ShowType != global::MelandGame3.LessonShowType.LessonShowTypeAll) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShowType);
      }
      if (AreaMode != global::MelandGame3.LessonAreaMode.LessonAreaModeNormal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AreaMode);
      }
      size += codeEntities_.CalculateSize(_repeated_codeEntities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LessonArea other) {
      if (other == null) {
        return;
      }
      if (other.LessonAreaId.Length != 0) {
        LessonAreaId = other.LessonAreaId;
      }
      if (other.LessonAreaComment.Length != 0) {
        LessonAreaComment = other.LessonAreaComment;
      }
      if (other.LessonAreaName.Length != 0) {
        LessonAreaName = other.LessonAreaName;
      }
      if (other.scope_ != null) {
        if (scope_ == null) {
          Scope = new global::MelandGame3.Scope();
        }
        Scope.MergeFrom(other.Scope);
      }
      if (other.tpPos_ != null) {
        if (tpPos_ == null) {
          TpPos = new global::MelandGame3.VectorXY();
        }
        TpPos.MergeFrom(other.TpPos);
      }
      if (other.NextAreaId.Length != 0) {
        NextAreaId = other.NextAreaId;
      }
      if (other.PrevAraeId.Length != 0) {
        PrevAraeId = other.PrevAraeId;
      }
      if (other.TerrainsCid != 0) {
        TerrainsCid = other.TerrainsCid;
      }
      if (other.ShowType != global::MelandGame3.LessonShowType.LessonShowTypeAll) {
        ShowType = other.ShowType;
      }
      if (other.AreaMode != global::MelandGame3.LessonAreaMode.LessonAreaModeNormal) {
        AreaMode = other.AreaMode;
      }
      codeEntities_.Add(other.codeEntities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LessonAreaId = input.ReadString();
            break;
          }
          case 18: {
            LessonAreaComment = input.ReadString();
            break;
          }
          case 26: {
            LessonAreaName = input.ReadString();
            break;
          }
          case 34: {
            if (scope_ == null) {
              Scope = new global::MelandGame3.Scope();
            }
            input.ReadMessage(Scope);
            break;
          }
          case 42: {
            if (tpPos_ == null) {
              TpPos = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(TpPos);
            break;
          }
          case 50: {
            NextAreaId = input.ReadString();
            break;
          }
          case 58: {
            PrevAraeId = input.ReadString();
            break;
          }
          case 64: {
            TerrainsCid = input.ReadInt32();
            break;
          }
          case 72: {
            ShowType = (global::MelandGame3.LessonShowType) input.ReadEnum();
            break;
          }
          case 80: {
            AreaMode = (global::MelandGame3.LessonAreaMode) input.ReadEnum();
            break;
          }
          case 90: {
            codeEntities_.AddEntriesFrom(input, _repeated_codeEntities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LessonAreaId = input.ReadString();
            break;
          }
          case 18: {
            LessonAreaComment = input.ReadString();
            break;
          }
          case 26: {
            LessonAreaName = input.ReadString();
            break;
          }
          case 34: {
            if (scope_ == null) {
              Scope = new global::MelandGame3.Scope();
            }
            input.ReadMessage(Scope);
            break;
          }
          case 42: {
            if (tpPos_ == null) {
              TpPos = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(TpPos);
            break;
          }
          case 50: {
            NextAreaId = input.ReadString();
            break;
          }
          case 58: {
            PrevAraeId = input.ReadString();
            break;
          }
          case 64: {
            TerrainsCid = input.ReadInt32();
            break;
          }
          case 72: {
            ShowType = (global::MelandGame3.LessonShowType) input.ReadEnum();
            break;
          }
          case 80: {
            AreaMode = (global::MelandGame3.LessonAreaMode) input.ReadEnum();
            break;
          }
          case 90: {
            codeEntities_.AddEntriesFrom(ref input, _repeated_codeEntities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CodeEntityData : pb::IMessage<CodeEntityData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CodeEntityData> _parser = new pb::MessageParser<CodeEntityData>(() => new CodeEntityData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CodeEntityData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodeEntityData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodeEntityData(CodeEntityData other) : this() {
      e_ = other.e_ != null ? other.e_.Clone() : null;
      eName_ = other.eName_;
      cid_ = other.cid_;
      icon_ = other.icon_;
      tab_ = other.tab_;
      tabName_ = other.tabName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodeEntityData Clone() {
      return new CodeEntityData(this);
    }

    /// <summary>Field number for the "e" field.</summary>
    public const int EFieldNumber = 1;
    private global::MelandGame3.EntityId e_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId E {
      get { return e_; }
      set {
        e_ = value;
      }
    }

    /// <summary>Field number for the "e_name" field.</summary>
    public const int ENameFieldNumber = 2;
    private string eName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EName {
      get { return eName_; }
      set {
        eName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 3;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private string icon_ = "";
    /// <summary>
    /// 自定义物件由服务器下发ICON
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tab" field.</summary>
    public const int TabFieldNumber = 5;
    private int tab_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tab {
      get { return tab_; }
      set {
        tab_ = value;
      }
    }

    /// <summary>Field number for the "tab_name" field.</summary>
    public const int TabNameFieldNumber = 6;
    private string tabName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabName {
      get { return tabName_; }
      set {
        tabName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CodeEntityData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CodeEntityData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(E, other.E)) return false;
      if (EName != other.EName) return false;
      if (Cid != other.Cid) return false;
      if (Icon != other.Icon) return false;
      if (Tab != other.Tab) return false;
      if (TabName != other.TabName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (e_ != null) hash ^= E.GetHashCode();
      if (EName.Length != 0) hash ^= EName.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Tab != 0) hash ^= Tab.GetHashCode();
      if (TabName.Length != 0) hash ^= TabName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (e_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(E);
      }
      if (EName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EName);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (Tab != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Tab);
      }
      if (TabName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TabName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (e_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(E);
      }
      if (EName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EName);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (Tab != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Tab);
      }
      if (TabName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TabName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (e_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(E);
      }
      if (EName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EName);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Tab != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tab);
      }
      if (TabName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CodeEntityData other) {
      if (other == null) {
        return;
      }
      if (other.e_ != null) {
        if (e_ == null) {
          E = new global::MelandGame3.EntityId();
        }
        E.MergeFrom(other.E);
      }
      if (other.EName.Length != 0) {
        EName = other.EName;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Tab != 0) {
        Tab = other.Tab;
      }
      if (other.TabName.Length != 0) {
        TabName = other.TabName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (e_ == null) {
              E = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(E);
            break;
          }
          case 18: {
            EName = input.ReadString();
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 40: {
            Tab = input.ReadInt32();
            break;
          }
          case 50: {
            TabName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (e_ == null) {
              E = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(E);
            break;
          }
          case 18: {
            EName = input.ReadString();
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 40: {
            Tab = input.ReadInt32();
            break;
          }
          case 50: {
            TabName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LessonAreaEntityData : pb::IMessage<LessonAreaEntityData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LessonAreaEntityData> _parser = new pb::MessageParser<LessonAreaEntityData>(() => new LessonAreaEntityData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LessonAreaEntityData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaEntityData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaEntityData(LessonAreaEntityData other) : this() {
      e_ = other.e_ != null ? other.e_.Clone() : null;
      cid_ = other.cid_;
      eDesc_ = other.eDesc_;
      rc_ = other.rc_ != null ? other.rc_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaEntityData Clone() {
      return new LessonAreaEntityData(this);
    }

    /// <summary>Field number for the "e" field.</summary>
    public const int EFieldNumber = 1;
    private global::MelandGame3.EntityId e_;
    /// <summary>
    /// 实体ID类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId E {
      get { return e_; }
      set {
        e_ = value;
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 2;
    private int cid_;
    /// <summary>
    /// cid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "e_desc" field.</summary>
    public const int EDescFieldNumber = 3;
    private string eDesc_ = "";
    /// <summary>
    /// 描述信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EDesc {
      get { return eDesc_; }
      set {
        eDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rc" field.</summary>
    public const int RcFieldNumber = 4;
    private global::MelandGame3.VectorXY rc_;
    /// <summary>
    /// 坐标RC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY Rc {
      get { return rc_; }
      set {
        rc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LessonAreaEntityData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LessonAreaEntityData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(E, other.E)) return false;
      if (Cid != other.Cid) return false;
      if (EDesc != other.EDesc) return false;
      if (!object.Equals(Rc, other.Rc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (e_ != null) hash ^= E.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (EDesc.Length != 0) hash ^= EDesc.GetHashCode();
      if (rc_ != null) hash ^= Rc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (e_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(E);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (EDesc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EDesc);
      }
      if (rc_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (e_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(E);
      }
      if (Cid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cid);
      }
      if (EDesc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EDesc);
      }
      if (rc_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (e_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(E);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (EDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EDesc);
      }
      if (rc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LessonAreaEntityData other) {
      if (other == null) {
        return;
      }
      if (other.e_ != null) {
        if (e_ == null) {
          E = new global::MelandGame3.EntityId();
        }
        E.MergeFrom(other.E);
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.EDesc.Length != 0) {
        EDesc = other.EDesc;
      }
      if (other.rc_ != null) {
        if (rc_ == null) {
          Rc = new global::MelandGame3.VectorXY();
        }
        Rc.MergeFrom(other.Rc);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (e_ == null) {
              E = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(E);
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
          case 26: {
            EDesc = input.ReadString();
            break;
          }
          case 34: {
            if (rc_ == null) {
              Rc = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Rc);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (e_ == null) {
              E = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(E);
            break;
          }
          case 16: {
            Cid = input.ReadInt32();
            break;
          }
          case 26: {
            EDesc = input.ReadString();
            break;
          }
          case 34: {
            if (rc_ == null) {
              Rc = new global::MelandGame3.VectorXY();
            }
            input.ReadMessage(Rc);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LessonAreaInfo : pb::IMessage<LessonAreaInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LessonAreaInfo> _parser = new pb::MessageParser<LessonAreaInfo>(() => new LessonAreaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LessonAreaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaInfo(LessonAreaInfo other) : this() {
      area_ = other.area_ != null ? other.area_.Clone() : null;
      tpPoints_ = other.tpPoints_.Clone();
      isResetting_ = other.isResetting_;
      lockState_ = other.lockState_;
      hasArrived_ = other.hasArrived_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaInfo Clone() {
      return new LessonAreaInfo(this);
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 1;
    private global::MelandGame3.LessonArea area_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonArea Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "tp_points" field.</summary>
    public const int TpPointsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MelandGame3.LessonAreaEntityData> _repeated_tpPoints_codec
        = pb::FieldCodec.ForMessage(18, global::MelandGame3.LessonAreaEntityData.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.LessonAreaEntityData> tpPoints_ = new pbc::RepeatedField<global::MelandGame3.LessonAreaEntityData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.LessonAreaEntityData> TpPoints {
      get { return tpPoints_; }
    }

    /// <summary>Field number for the "is_resetting" field.</summary>
    public const int IsResettingFieldNumber = 3;
    private bool isResetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsResetting {
      get { return isResetting_; }
      set {
        isResetting_ = value;
      }
    }

    /// <summary>Field number for the "lock_state" field.</summary>
    public const int LockStateFieldNumber = 4;
    private global::MelandGame3.LockState lockState_ = global::MelandGame3.LockState.LockStateUnkown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LockState LockState {
      get { return lockState_; }
      set {
        lockState_ = value;
      }
    }

    /// <summary>Field number for the "has_arrived" field.</summary>
    public const int HasArrivedFieldNumber = 5;
    private bool hasArrived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArrived {
      get { return hasArrived_; }
      set {
        hasArrived_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LessonAreaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LessonAreaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Area, other.Area)) return false;
      if(!tpPoints_.Equals(other.tpPoints_)) return false;
      if (IsResetting != other.IsResetting) return false;
      if (LockState != other.LockState) return false;
      if (HasArrived != other.HasArrived) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (area_ != null) hash ^= Area.GetHashCode();
      hash ^= tpPoints_.GetHashCode();
      if (IsResetting != false) hash ^= IsResetting.GetHashCode();
      if (LockState != global::MelandGame3.LockState.LockStateUnkown) hash ^= LockState.GetHashCode();
      if (HasArrived != false) hash ^= HasArrived.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (area_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Area);
      }
      tpPoints_.WriteTo(output, _repeated_tpPoints_codec);
      if (IsResetting != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsResetting);
      }
      if (LockState != global::MelandGame3.LockState.LockStateUnkown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) LockState);
      }
      if (HasArrived != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasArrived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (area_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Area);
      }
      tpPoints_.WriteTo(ref output, _repeated_tpPoints_codec);
      if (IsResetting != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsResetting);
      }
      if (LockState != global::MelandGame3.LockState.LockStateUnkown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) LockState);
      }
      if (HasArrived != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasArrived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (area_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Area);
      }
      size += tpPoints_.CalculateSize(_repeated_tpPoints_codec);
      if (IsResetting != false) {
        size += 1 + 1;
      }
      if (LockState != global::MelandGame3.LockState.LockStateUnkown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LockState);
      }
      if (HasArrived != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LessonAreaInfo other) {
      if (other == null) {
        return;
      }
      if (other.area_ != null) {
        if (area_ == null) {
          Area = new global::MelandGame3.LessonArea();
        }
        Area.MergeFrom(other.Area);
      }
      tpPoints_.Add(other.tpPoints_);
      if (other.IsResetting != false) {
        IsResetting = other.IsResetting;
      }
      if (other.LockState != global::MelandGame3.LockState.LockStateUnkown) {
        LockState = other.LockState;
      }
      if (other.HasArrived != false) {
        HasArrived = other.HasArrived;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (area_ == null) {
              Area = new global::MelandGame3.LessonArea();
            }
            input.ReadMessage(Area);
            break;
          }
          case 18: {
            tpPoints_.AddEntriesFrom(input, _repeated_tpPoints_codec);
            break;
          }
          case 24: {
            IsResetting = input.ReadBool();
            break;
          }
          case 32: {
            LockState = (global::MelandGame3.LockState) input.ReadEnum();
            break;
          }
          case 40: {
            HasArrived = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (area_ == null) {
              Area = new global::MelandGame3.LessonArea();
            }
            input.ReadMessage(Area);
            break;
          }
          case 18: {
            tpPoints_.AddEntriesFrom(ref input, _repeated_tpPoints_codec);
            break;
          }
          case 24: {
            IsResetting = input.ReadBool();
            break;
          }
          case 32: {
            LockState = (global::MelandGame3.LockState) input.ReadEnum();
            break;
          }
          case 40: {
            HasArrived = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LessonAreaData : pb::IMessage<LessonAreaData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LessonAreaData> _parser = new pb::MessageParser<LessonAreaData>(() => new LessonAreaData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LessonAreaData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaData(LessonAreaData other) : this() {
      lessonAreaDataType_ = other.lessonAreaDataType_;
      switch (other.DataCase) {
        case DataOneofCase.Name:
          Name = other.Name;
          break;
        case DataOneofCase.Comment:
          Comment = other.Comment;
          break;
        case DataOneofCase.Scope:
          Scope = other.Scope.Clone();
          break;
        case DataOneofCase.TpPos:
          TpPos = other.TpPos.Clone();
          break;
        case DataOneofCase.AreaId:
          AreaId = other.AreaId;
          break;
        case DataOneofCase.TerrainsCid:
          TerrainsCid = other.TerrainsCid;
          break;
        case DataOneofCase.EntityData:
          EntityData = other.EntityData.Clone();
          break;
        case DataOneofCase.ShowType:
          ShowType = other.ShowType;
          break;
        case DataOneofCase.AreaMode:
          AreaMode = other.AreaMode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LessonAreaData Clone() {
      return new LessonAreaData(this);
    }

    /// <summary>Field number for the "lesson_area_data_type" field.</summary>
    public const int LessonAreaDataTypeFieldNumber = 1;
    private global::MelandGame3.LessonAreaDataType lessonAreaDataType_ = global::MelandGame3.LessonAreaDataType.LessonAreaDataTypeName;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonAreaDataType LessonAreaDataType {
      get { return lessonAreaDataType_; }
      set {
        lessonAreaDataType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return dataCase_ == DataOneofCase.Name ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Name;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return dataCase_ == DataOneofCase.Comment ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Comment;
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.Scope Scope {
      get { return dataCase_ == DataOneofCase.Scope ? (global::MelandGame3.Scope) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Scope;
      }
    }

    /// <summary>Field number for the "tp_pos" field.</summary>
    public const int TpPosFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.VectorXY TpPos {
      get { return dataCase_ == DataOneofCase.TpPos ? (global::MelandGame3.VectorXY) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.TpPos;
      }
    }

    /// <summary>Field number for the "area_id" field.</summary>
    public const int AreaIdFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AreaId {
      get { return dataCase_ == DataOneofCase.AreaId ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.AreaId;
      }
    }

    /// <summary>Field number for the "terrains_cid" field.</summary>
    public const int TerrainsCidFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TerrainsCid {
      get { return dataCase_ == DataOneofCase.TerrainsCid ? (int) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.TerrainsCid;
      }
    }

    /// <summary>Field number for the "entity_data" field.</summary>
    public const int EntityDataFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.CodeEntityData EntityData {
      get { return dataCase_ == DataOneofCase.EntityData ? (global::MelandGame3.CodeEntityData) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.EntityData;
      }
    }

    /// <summary>Field number for the "show_type" field.</summary>
    public const int ShowTypeFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonShowType ShowType {
      get { return dataCase_ == DataOneofCase.ShowType ? (global::MelandGame3.LessonShowType) data_ : global::MelandGame3.LessonShowType.LessonShowTypeAll; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.ShowType;
      }
    }

    /// <summary>Field number for the "area_mode" field.</summary>
    public const int AreaModeFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.LessonAreaMode AreaMode {
      get { return dataCase_ == DataOneofCase.AreaMode ? (global::MelandGame3.LessonAreaMode) data_ : global::MelandGame3.LessonAreaMode.LessonAreaModeNormal; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.AreaMode;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Name = 10,
      Comment = 11,
      Scope = 12,
      TpPos = 13,
      AreaId = 14,
      TerrainsCid = 15,
      EntityData = 16,
      ShowType = 17,
      AreaMode = 18,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LessonAreaData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LessonAreaData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LessonAreaDataType != other.LessonAreaDataType) return false;
      if (Name != other.Name) return false;
      if (Comment != other.Comment) return false;
      if (!object.Equals(Scope, other.Scope)) return false;
      if (!object.Equals(TpPos, other.TpPos)) return false;
      if (AreaId != other.AreaId) return false;
      if (TerrainsCid != other.TerrainsCid) return false;
      if (!object.Equals(EntityData, other.EntityData)) return false;
      if (ShowType != other.ShowType) return false;
      if (AreaMode != other.AreaMode) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LessonAreaDataType != global::MelandGame3.LessonAreaDataType.LessonAreaDataTypeName) hash ^= LessonAreaDataType.GetHashCode();
      if (dataCase_ == DataOneofCase.Name) hash ^= Name.GetHashCode();
      if (dataCase_ == DataOneofCase.Comment) hash ^= Comment.GetHashCode();
      if (dataCase_ == DataOneofCase.Scope) hash ^= Scope.GetHashCode();
      if (dataCase_ == DataOneofCase.TpPos) hash ^= TpPos.GetHashCode();
      if (dataCase_ == DataOneofCase.AreaId) hash ^= AreaId.GetHashCode();
      if (dataCase_ == DataOneofCase.TerrainsCid) hash ^= TerrainsCid.GetHashCode();
      if (dataCase_ == DataOneofCase.EntityData) hash ^= EntityData.GetHashCode();
      if (dataCase_ == DataOneofCase.ShowType) hash ^= ShowType.GetHashCode();
      if (dataCase_ == DataOneofCase.AreaMode) hash ^= AreaMode.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LessonAreaDataType != global::MelandGame3.LessonAreaDataType.LessonAreaDataTypeName) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LessonAreaDataType);
      }
      if (dataCase_ == DataOneofCase.Name) {
        output.WriteRawTag(82);
        output.WriteString(Name);
      }
      if (dataCase_ == DataOneofCase.Comment) {
        output.WriteRawTag(90);
        output.WriteString(Comment);
      }
      if (dataCase_ == DataOneofCase.Scope) {
        output.WriteRawTag(98);
        output.WriteMessage(Scope);
      }
      if (dataCase_ == DataOneofCase.TpPos) {
        output.WriteRawTag(106);
        output.WriteMessage(TpPos);
      }
      if (dataCase_ == DataOneofCase.AreaId) {
        output.WriteRawTag(114);
        output.WriteString(AreaId);
      }
      if (dataCase_ == DataOneofCase.TerrainsCid) {
        output.WriteRawTag(120);
        output.WriteInt32(TerrainsCid);
      }
      if (dataCase_ == DataOneofCase.EntityData) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(EntityData);
      }
      if (dataCase_ == DataOneofCase.ShowType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) ShowType);
      }
      if (dataCase_ == DataOneofCase.AreaMode) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) AreaMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LessonAreaDataType != global::MelandGame3.LessonAreaDataType.LessonAreaDataTypeName) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LessonAreaDataType);
      }
      if (dataCase_ == DataOneofCase.Name) {
        output.WriteRawTag(82);
        output.WriteString(Name);
      }
      if (dataCase_ == DataOneofCase.Comment) {
        output.WriteRawTag(90);
        output.WriteString(Comment);
      }
      if (dataCase_ == DataOneofCase.Scope) {
        output.WriteRawTag(98);
        output.WriteMessage(Scope);
      }
      if (dataCase_ == DataOneofCase.TpPos) {
        output.WriteRawTag(106);
        output.WriteMessage(TpPos);
      }
      if (dataCase_ == DataOneofCase.AreaId) {
        output.WriteRawTag(114);
        output.WriteString(AreaId);
      }
      if (dataCase_ == DataOneofCase.TerrainsCid) {
        output.WriteRawTag(120);
        output.WriteInt32(TerrainsCid);
      }
      if (dataCase_ == DataOneofCase.EntityData) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(EntityData);
      }
      if (dataCase_ == DataOneofCase.ShowType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) ShowType);
      }
      if (dataCase_ == DataOneofCase.AreaMode) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) AreaMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LessonAreaDataType != global::MelandGame3.LessonAreaDataType.LessonAreaDataTypeName) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LessonAreaDataType);
      }
      if (dataCase_ == DataOneofCase.Name) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (dataCase_ == DataOneofCase.Comment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (dataCase_ == DataOneofCase.Scope) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scope);
      }
      if (dataCase_ == DataOneofCase.TpPos) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TpPos);
      }
      if (dataCase_ == DataOneofCase.AreaId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaId);
      }
      if (dataCase_ == DataOneofCase.TerrainsCid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TerrainsCid);
      }
      if (dataCase_ == DataOneofCase.EntityData) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntityData);
      }
      if (dataCase_ == DataOneofCase.ShowType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ShowType);
      }
      if (dataCase_ == DataOneofCase.AreaMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AreaMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LessonAreaData other) {
      if (other == null) {
        return;
      }
      if (other.LessonAreaDataType != global::MelandGame3.LessonAreaDataType.LessonAreaDataTypeName) {
        LessonAreaDataType = other.LessonAreaDataType;
      }
      switch (other.DataCase) {
        case DataOneofCase.Name:
          Name = other.Name;
          break;
        case DataOneofCase.Comment:
          Comment = other.Comment;
          break;
        case DataOneofCase.Scope:
          if (Scope == null) {
            Scope = new global::MelandGame3.Scope();
          }
          Scope.MergeFrom(other.Scope);
          break;
        case DataOneofCase.TpPos:
          if (TpPos == null) {
            TpPos = new global::MelandGame3.VectorXY();
          }
          TpPos.MergeFrom(other.TpPos);
          break;
        case DataOneofCase.AreaId:
          AreaId = other.AreaId;
          break;
        case DataOneofCase.TerrainsCid:
          TerrainsCid = other.TerrainsCid;
          break;
        case DataOneofCase.EntityData:
          if (EntityData == null) {
            EntityData = new global::MelandGame3.CodeEntityData();
          }
          EntityData.MergeFrom(other.EntityData);
          break;
        case DataOneofCase.ShowType:
          ShowType = other.ShowType;
          break;
        case DataOneofCase.AreaMode:
          AreaMode = other.AreaMode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LessonAreaDataType = (global::MelandGame3.LessonAreaDataType) input.ReadEnum();
            break;
          }
          case 82: {
            Name = input.ReadString();
            break;
          }
          case 90: {
            Comment = input.ReadString();
            break;
          }
          case 98: {
            global::MelandGame3.Scope subBuilder = new global::MelandGame3.Scope();
            if (dataCase_ == DataOneofCase.Scope) {
              subBuilder.MergeFrom(Scope);
            }
            input.ReadMessage(subBuilder);
            Scope = subBuilder;
            break;
          }
          case 106: {
            global::MelandGame3.VectorXY subBuilder = new global::MelandGame3.VectorXY();
            if (dataCase_ == DataOneofCase.TpPos) {
              subBuilder.MergeFrom(TpPos);
            }
            input.ReadMessage(subBuilder);
            TpPos = subBuilder;
            break;
          }
          case 114: {
            AreaId = input.ReadString();
            break;
          }
          case 120: {
            TerrainsCid = input.ReadInt32();
            break;
          }
          case 130: {
            global::MelandGame3.CodeEntityData subBuilder = new global::MelandGame3.CodeEntityData();
            if (dataCase_ == DataOneofCase.EntityData) {
              subBuilder.MergeFrom(EntityData);
            }
            input.ReadMessage(subBuilder);
            EntityData = subBuilder;
            break;
          }
          case 136: {
            data_ = input.ReadEnum();
            dataCase_ = DataOneofCase.ShowType;
            break;
          }
          case 144: {
            data_ = input.ReadEnum();
            dataCase_ = DataOneofCase.AreaMode;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LessonAreaDataType = (global::MelandGame3.LessonAreaDataType) input.ReadEnum();
            break;
          }
          case 82: {
            Name = input.ReadString();
            break;
          }
          case 90: {
            Comment = input.ReadString();
            break;
          }
          case 98: {
            global::MelandGame3.Scope subBuilder = new global::MelandGame3.Scope();
            if (dataCase_ == DataOneofCase.Scope) {
              subBuilder.MergeFrom(Scope);
            }
            input.ReadMessage(subBuilder);
            Scope = subBuilder;
            break;
          }
          case 106: {
            global::MelandGame3.VectorXY subBuilder = new global::MelandGame3.VectorXY();
            if (dataCase_ == DataOneofCase.TpPos) {
              subBuilder.MergeFrom(TpPos);
            }
            input.ReadMessage(subBuilder);
            TpPos = subBuilder;
            break;
          }
          case 114: {
            AreaId = input.ReadString();
            break;
          }
          case 120: {
            TerrainsCid = input.ReadInt32();
            break;
          }
          case 130: {
            global::MelandGame3.CodeEntityData subBuilder = new global::MelandGame3.CodeEntityData();
            if (dataCase_ == DataOneofCase.EntityData) {
              subBuilder.MergeFrom(EntityData);
            }
            input.ReadMessage(subBuilder);
            EntityData = subBuilder;
            break;
          }
          case 136: {
            data_ = input.ReadEnum();
            dataCase_ = DataOneofCase.ShowType;
            break;
          }
          case 144: {
            data_ = input.ReadEnum();
            dataCase_ = DataOneofCase.AreaMode;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AreaUpdateData : pb::IMessage<AreaUpdateData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AreaUpdateData> _parser = new pb::MessageParser<AreaUpdateData>(() => new AreaUpdateData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AreaUpdateData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaUpdateData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaUpdateData(AreaUpdateData other) : this() {
      areaId_ = other.areaId_;
      updateData_ = other.updateData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaUpdateData Clone() {
      return new AreaUpdateData(this);
    }

    /// <summary>Field number for the "area_id" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private string areaId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AreaId {
      get { return areaId_; }
      set {
        areaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_data" field.</summary>
    public const int UpdateDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MelandGame3.LessonAreaData> _repeated_updateData_codec
        = pb::FieldCodec.ForMessage(18, global::MelandGame3.LessonAreaData.Parser);
    private readonly pbc::RepeatedField<global::MelandGame3.LessonAreaData> updateData_ = new pbc::RepeatedField<global::MelandGame3.LessonAreaData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MelandGame3.LessonAreaData> UpdateData {
      get { return updateData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AreaUpdateData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AreaUpdateData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      if(!updateData_.Equals(other.updateData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaId.Length != 0) hash ^= AreaId.GetHashCode();
      hash ^= updateData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AreaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AreaId);
      }
      updateData_.WriteTo(output, _repeated_updateData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AreaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AreaId);
      }
      updateData_.WriteTo(ref output, _repeated_updateData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AreaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaId);
      }
      size += updateData_.CalculateSize(_repeated_updateData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AreaUpdateData other) {
      if (other == null) {
        return;
      }
      if (other.AreaId.Length != 0) {
        AreaId = other.AreaId;
      }
      updateData_.Add(other.updateData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AreaId = input.ReadString();
            break;
          }
          case 18: {
            updateData_.AddEntriesFrom(input, _repeated_updateData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AreaId = input.ReadString();
            break;
          }
          case 18: {
            updateData_.AddEntriesFrom(ref input, _repeated_updateData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityOfTile : pb::IMessage<EntityOfTile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityOfTile> _parser = new pb::MessageParser<EntityOfTile>(() => new EntityOfTile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityOfTile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityOfTile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityOfTile(EntityOfTile other) : this() {
      rcIndex_ = other.rcIndex_;
      randomEntities_ = other.randomEntities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityOfTile Clone() {
      return new EntityOfTile(this);
    }

    /// <summary>Field number for the "rc_index" field.</summary>
    public const int RcIndexFieldNumber = 1;
    private int rcIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RcIndex {
      get { return rcIndex_; }
      set {
        rcIndex_ = value;
      }
    }

    /// <summary>Field number for the "random_entities" field.</summary>
    public const int RandomEntitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_randomEntities_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> randomEntities_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> RandomEntities {
      get { return randomEntities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityOfTile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityOfTile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RcIndex != other.RcIndex) return false;
      if(!randomEntities_.Equals(other.randomEntities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RcIndex != 0) hash ^= RcIndex.GetHashCode();
      hash ^= randomEntities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RcIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RcIndex);
      }
      randomEntities_.WriteTo(output, _repeated_randomEntities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RcIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RcIndex);
      }
      randomEntities_.WriteTo(ref output, _repeated_randomEntities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RcIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RcIndex);
      }
      size += randomEntities_.CalculateSize(_repeated_randomEntities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityOfTile other) {
      if (other == null) {
        return;
      }
      if (other.RcIndex != 0) {
        RcIndex = other.RcIndex;
      }
      randomEntities_.Add(other.randomEntities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RcIndex = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            randomEntities_.AddEntriesFrom(input, _repeated_randomEntities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RcIndex = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            randomEntities_.AddEntriesFrom(ref input, _repeated_randomEntities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 被搬运的实体交互数据结构
  /// </summary>
  public sealed partial class CarryEntityBaseData : pb::IMessage<CarryEntityBaseData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CarryEntityBaseData> _parser = new pb::MessageParser<CarryEntityBaseData>(() => new CarryEntityBaseData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CarryEntityBaseData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CarryEntityBaseData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CarryEntityBaseData(CarryEntityBaseData other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      cid_ = other.cid_;
      icon_ = other.icon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CarryEntityBaseData Clone() {
      return new CarryEntityBaseData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::MelandGame3.EntityId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 2;
    private global::MelandGame3.EntityLocation loc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityLocation Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 3;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private string icon_ = "";
    /// <summary>
    /// 展示ICON
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CarryEntityBaseData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CarryEntityBaseData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(Loc, other.Loc)) return false;
      if (Cid != other.Cid) return false;
      if (Icon != other.Icon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (Cid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cid);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CarryEntityBaseData other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::MelandGame3.EntityId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::MelandGame3.EntityLocation();
        }
        Loc.MergeFrom(other.Loc);
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::MelandGame3.EntityLocation();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 24: {
            Cid = input.ReadInt32();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 预制实体信息
  /// </summary>
  public sealed partial class EntityPreload : pb::IMessage<EntityPreload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityPreload> _parser = new pb::MessageParser<EntityPreload>(() => new EntityPreload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityPreload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityPreload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityPreload(EntityPreload other) : this() {
      cid_ = other.cid_;
      preloadCodeBlock_ = other.preloadCodeBlock_ != null ? other.preloadCodeBlock_.Clone() : null;
      preloadEntityAttr_ = other.preloadEntityAttr_ != null ? other.preloadEntityAttr_.Clone() : null;
      preloadTimelineList_ = other.preloadTimelineList_ != null ? other.preloadTimelineList_.Clone() : null;
      entityId_ = other.entityId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityPreload Clone() {
      return new EntityPreload(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    /// <summary>
    /// 预制实体Cid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "preload_code_block" field.</summary>
    public const int PreloadCodeBlockFieldNumber = 2;
    private global::MelandGame3.CodeBlockPrograms preloadCodeBlock_;
    /// <summary>
    /// 预制代码块
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.CodeBlockPrograms PreloadCodeBlock {
      get { return preloadCodeBlock_; }
      set {
        preloadCodeBlock_ = value;
      }
    }

    /// <summary>Field number for the "preload_entity_attr" field.</summary>
    public const int PreloadEntityAttrFieldNumber = 3;
    private global::MelandGame3.EntityAttribute preloadEntityAttr_;
    /// <summary>
    /// 预制实体属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityAttribute PreloadEntityAttr {
      get { return preloadEntityAttr_; }
      set {
        preloadEntityAttr_ = value;
      }
    }

    /// <summary>Field number for the "preload_timeline_list" field.</summary>
    public const int PreloadTimelineListFieldNumber = 4;
    private global::MelandGame3.EntityTimeLineList preloadTimelineList_;
    /// <summary>
    /// 预制代码块时间线
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityTimeLineList PreloadTimelineList {
      get { return preloadTimelineList_; }
      set {
        preloadTimelineList_ = value;
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 5;
    private string entityId_ = "";
    /// <summary>
    /// 实体Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityPreload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityPreload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (!object.Equals(PreloadCodeBlock, other.PreloadCodeBlock)) return false;
      if (!object.Equals(PreloadEntityAttr, other.PreloadEntityAttr)) return false;
      if (!object.Equals(PreloadTimelineList, other.PreloadTimelineList)) return false;
      if (EntityId != other.EntityId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (preloadCodeBlock_ != null) hash ^= PreloadCodeBlock.GetHashCode();
      if (preloadEntityAttr_ != null) hash ^= PreloadEntityAttr.GetHashCode();
      if (preloadTimelineList_ != null) hash ^= PreloadTimelineList.GetHashCode();
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (preloadCodeBlock_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PreloadCodeBlock);
      }
      if (preloadEntityAttr_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PreloadEntityAttr);
      }
      if (preloadTimelineList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PreloadTimelineList);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EntityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (preloadCodeBlock_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PreloadCodeBlock);
      }
      if (preloadEntityAttr_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PreloadEntityAttr);
      }
      if (preloadTimelineList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PreloadTimelineList);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EntityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (preloadCodeBlock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreloadCodeBlock);
      }
      if (preloadEntityAttr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreloadEntityAttr);
      }
      if (preloadTimelineList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreloadTimelineList);
      }
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityPreload other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.preloadCodeBlock_ != null) {
        if (preloadCodeBlock_ == null) {
          PreloadCodeBlock = new global::MelandGame3.CodeBlockPrograms();
        }
        PreloadCodeBlock.MergeFrom(other.PreloadCodeBlock);
      }
      if (other.preloadEntityAttr_ != null) {
        if (preloadEntityAttr_ == null) {
          PreloadEntityAttr = new global::MelandGame3.EntityAttribute();
        }
        PreloadEntityAttr.MergeFrom(other.PreloadEntityAttr);
      }
      if (other.preloadTimelineList_ != null) {
        if (preloadTimelineList_ == null) {
          PreloadTimelineList = new global::MelandGame3.EntityTimeLineList();
        }
        PreloadTimelineList.MergeFrom(other.PreloadTimelineList);
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            if (preloadCodeBlock_ == null) {
              PreloadCodeBlock = new global::MelandGame3.CodeBlockPrograms();
            }
            input.ReadMessage(PreloadCodeBlock);
            break;
          }
          case 26: {
            if (preloadEntityAttr_ == null) {
              PreloadEntityAttr = new global::MelandGame3.EntityAttribute();
            }
            input.ReadMessage(PreloadEntityAttr);
            break;
          }
          case 34: {
            if (preloadTimelineList_ == null) {
              PreloadTimelineList = new global::MelandGame3.EntityTimeLineList();
            }
            input.ReadMessage(PreloadTimelineList);
            break;
          }
          case 42: {
            EntityId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            if (preloadCodeBlock_ == null) {
              PreloadCodeBlock = new global::MelandGame3.CodeBlockPrograms();
            }
            input.ReadMessage(PreloadCodeBlock);
            break;
          }
          case 26: {
            if (preloadEntityAttr_ == null) {
              PreloadEntityAttr = new global::MelandGame3.EntityAttribute();
            }
            input.ReadMessage(PreloadEntityAttr);
            break;
          }
          case 34: {
            if (preloadTimelineList_ == null) {
              PreloadTimelineList = new global::MelandGame3.EntityTimeLineList();
            }
            input.ReadMessage(PreloadTimelineList);
            break;
          }
          case 42: {
            EntityId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 预制实体文件映射表
  /// </summary>
  public sealed partial class EntityCusData : pb::IMessage<EntityCusData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityCusData> _parser = new pb::MessageParser<EntityCusData>(() => new EntityCusData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityCusData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityCusData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityCusData(EntityCusData other) : this() {
      cid_ = other.cid_;
      fileName_ = other.fileName_;
      entityPreload_ = other.entityPreload_ != null ? other.entityPreload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityCusData Clone() {
      return new EntityCusData(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    /// <summary>
    /// 实体Cid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "file_name" field.</summary>
    public const int FileNameFieldNumber = 2;
    private string fileName_ = "";
    /// <summary>
    /// 对应文件名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entity_preload" field.</summary>
    public const int EntityPreloadFieldNumber = 3;
    private global::MelandGame3.EntityPreload entityPreload_;
    /// <summary>
    /// 实体预制信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityPreload EntityPreload {
      get { return entityPreload_; }
      set {
        entityPreload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityCusData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityCusData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (FileName != other.FileName) return false;
      if (!object.Equals(EntityPreload, other.EntityPreload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (entityPreload_ != null) hash ^= EntityPreload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileName);
      }
      if (entityPreload_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EntityPreload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileName);
      }
      if (entityPreload_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EntityPreload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (entityPreload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityPreload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityCusData other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.entityPreload_ != null) {
        if (entityPreload_ == null) {
          EntityPreload = new global::MelandGame3.EntityPreload();
        }
        EntityPreload.MergeFrom(other.EntityPreload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            FileName = input.ReadString();
            break;
          }
          case 26: {
            if (entityPreload_ == null) {
              EntityPreload = new global::MelandGame3.EntityPreload();
            }
            input.ReadMessage(EntityPreload);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 18: {
            FileName = input.ReadString();
            break;
          }
          case 26: {
            if (entityPreload_ == null) {
              EntityPreload = new global::MelandGame3.EntityPreload();
            }
            input.ReadMessage(EntityPreload);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 多实体快速编码所有标签页信息
  /// </summary>
  public sealed partial class EntitiesQuickCodeTab : pb::IMessage<EntitiesQuickCodeTab>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntitiesQuickCodeTab> _parser = new pb::MessageParser<EntitiesQuickCodeTab>(() => new EntitiesQuickCodeTab());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntitiesQuickCodeTab> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.ModelReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntitiesQuickCodeTab() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntitiesQuickCodeTab(EntitiesQuickCodeTab other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      tabId_ = other.tabId_;
      entityName_ = other.entityName_;
      avatarCid_ = other.avatarCid_;
      icon_ = other.icon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntitiesQuickCodeTab Clone() {
      return new EntitiesQuickCodeTab(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::MelandGame3.EntityId entity_;
    /// <summary>
    /// 实体信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.EntityId Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "tab_id" field.</summary>
    public const int TabIdFieldNumber = 2;
    private int tabId_;
    /// <summary>
    /// 标签页id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TabId {
      get { return tabId_; }
      set {
        tabId_ = value;
      }
    }

    /// <summary>Field number for the "entity_name" field.</summary>
    public const int EntityNameFieldNumber = 3;
    private string entityName_ = "";
    /// <summary>
    /// 实体名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntityName {
      get { return entityName_; }
      set {
        entityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarCid" field.</summary>
    public const int AvatarCidFieldNumber = 4;
    private int avatarCid_;
    /// <summary>
    /// 实体Cid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AvatarCid {
      get { return avatarCid_; }
      set {
        avatarCid_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private string icon_ = "";
    /// <summary>
    /// 图标icon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntitiesQuickCodeTab);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntitiesQuickCodeTab other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if (TabId != other.TabId) return false;
      if (EntityName != other.EntityName) return false;
      if (AvatarCid != other.AvatarCid) return false;
      if (Icon != other.Icon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (TabId != 0) hash ^= TabId.GetHashCode();
      if (EntityName.Length != 0) hash ^= EntityName.GetHashCode();
      if (AvatarCid != 0) hash ^= AvatarCid.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (TabId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TabId);
      }
      if (EntityName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EntityName);
      }
      if (AvatarCid != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AvatarCid);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (TabId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TabId);
      }
      if (EntityName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EntityName);
      }
      if (AvatarCid != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AvatarCid);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (TabId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TabId);
      }
      if (EntityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityName);
      }
      if (AvatarCid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarCid);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntitiesQuickCodeTab other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::MelandGame3.EntityId();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.TabId != 0) {
        TabId = other.TabId;
      }
      if (other.EntityName.Length != 0) {
        EntityName = other.EntityName;
      }
      if (other.AvatarCid != 0) {
        AvatarCid = other.AvatarCid;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 16: {
            TabId = input.ReadInt32();
            break;
          }
          case 26: {
            EntityName = input.ReadString();
            break;
          }
          case 32: {
            AvatarCid = input.ReadInt32();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::MelandGame3.EntityId();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 16: {
            TabId = input.ReadInt32();
            break;
          }
          case 26: {
            EntityName = input.ReadString();
            break;
          }
          case 32: {
            AvatarCid = input.ReadInt32();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
