// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cd.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MelandGame3 {

  /// <summary>Holder for reflection information generated from cd.proto</summary>
  public static partial class CdReflection {

    #region Descriptor
    /// <summary>File descriptor for cd.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CdReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CghjZC5wcm90bxILTWVsYW5kR2FtZTMiYAoJQ2RTZXR0aW5nEgsKA2NpZBgB",
            "IAEoBRIkCgdjZF90eXBlGAIgASgOMhMuTWVsYW5kR2FtZTMuQ2RUeXBlEg0K",
            "BXZhbHVlGAMgASgDEhEKCW5lZWRfc3luYxgEIAEoCCpSCgZDZFR5cGUSFQoR",
            "Q2RUeXBlX0NkRHVyYXRpb24QABIWChJDZFR5cGVfQ2RUaW1lc3RhbXAQARIZ",
            "ChVDZFR5cGVfQ2REYXlUaW1lc3RhbXAQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MelandGame3.CdType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MelandGame3.CdSetting), global::MelandGame3.CdSetting.Parser, new[]{ "Cid", "CdType", "Value", "NeedSync" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///CD类型
  /// </summary>
  public enum CdType {
    /// <summary>
    ///持续时间(ms)
    /// </summary>
    [pbr::OriginalName("CdType_CdDuration")] CdDuration = 0,
    /// <summary>
    ///截至到某一时间戳(秒)
    /// </summary>
    [pbr::OriginalName("CdType_CdTimestamp")] CdTimestamp = 1,
    /// <summary>
    ///当日时间戳(从当日0点开始经过的秒数)
    /// </summary>
    [pbr::OriginalName("CdType_CdDayTimestamp")] CdDayTimestamp = 2,
  }

  #endregion

  #region Messages
  public sealed partial class CdSetting : pb::IMessage<CdSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CdSetting> _parser = new pb::MessageParser<CdSetting>(() => new CdSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CdSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MelandGame3.CdReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CdSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CdSetting(CdSetting other) : this() {
      cid_ = other.cid_;
      cdType_ = other.cdType_;
      value_ = other.value_;
      needSync_ = other.needSync_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CdSetting Clone() {
      return new CdSetting(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private int cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "cd_type" field.</summary>
    public const int CdTypeFieldNumber = 2;
    private global::MelandGame3.CdType cdType_ = global::MelandGame3.CdType.CdDuration;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MelandGame3.CdType CdType {
      get { return cdType_; }
      set {
        cdType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private long value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "need_sync" field.</summary>
    public const int NeedSyncFieldNumber = 4;
    private bool needSync_;
    /// <summary>
    ///是否需要同步给前端
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedSync {
      get { return needSync_; }
      set {
        needSync_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CdSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CdSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (CdType != other.CdType) return false;
      if (Value != other.Value) return false;
      if (NeedSync != other.NeedSync) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (CdType != global::MelandGame3.CdType.CdDuration) hash ^= CdType.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (NeedSync != false) hash ^= NeedSync.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (CdType != global::MelandGame3.CdType.CdDuration) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CdType);
      }
      if (Value != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Value);
      }
      if (NeedSync != false) {
        output.WriteRawTag(32);
        output.WriteBool(NeedSync);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cid);
      }
      if (CdType != global::MelandGame3.CdType.CdDuration) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CdType);
      }
      if (Value != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Value);
      }
      if (NeedSync != false) {
        output.WriteRawTag(32);
        output.WriteBool(NeedSync);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cid);
      }
      if (CdType != global::MelandGame3.CdType.CdDuration) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CdType);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (NeedSync != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CdSetting other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.CdType != global::MelandGame3.CdType.CdDuration) {
        CdType = other.CdType;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.NeedSync != false) {
        NeedSync = other.NeedSync;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 16: {
            CdType = (global::MelandGame3.CdType) input.ReadEnum();
            break;
          }
          case 24: {
            Value = input.ReadInt64();
            break;
          }
          case 32: {
            NeedSync = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cid = input.ReadInt32();
            break;
          }
          case 16: {
            CdType = (global::MelandGame3.CdType) input.ReadEnum();
            break;
          }
          case 24: {
            Value = input.ReadInt64();
            break;
          }
          case 32: {
            NeedSync = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
